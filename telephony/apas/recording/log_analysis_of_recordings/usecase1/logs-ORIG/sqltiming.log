-----> 2020-08-14 14:09:33.605  com.andtek.andphone.Config.readConfigFromDB(Config.java:1245)
2. SELECT param, val, module FROM config WHERE param='version' 
 {executed in 14 msec}

-----> 2020-08-14 14:09:33.613  com.andtek.andphone.Config.readConfigFromDB(Config.java:1271)
2. SELECT module, param, val FROM config 
 {executed in 3 msec}

-----> 2020-08-14 14:09:33.634  com.andtek.andphone.Config.logCurrentConfig(Config.java:1586)
3. SELECT param, val, module FROM config WHERE param='version' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:33.669  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
4. SELECT val FROM config WHERE module='global' AND param='andServer' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:33.673  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
5. UPDATE config SET val='10.51.51.122:8080' WHERE module='global' AND param='andServer' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:33.676  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
6. SELECT val FROM config WHERE module='global' AND param='andGuardServer' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:33.678  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
7. UPDATE config SET val='10.51.51.122:8081' WHERE module='global' AND param='andGuardServer' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:42.623  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
12. SELECT val FROM config WHERE module='recorder' AND param='Appliance' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:42.627  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
13. UPDATE config SET val='true' WHERE module='recorder' AND param='Appliance' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:42.629  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
14. SELECT val FROM config WHERE module='recorder' AND param='RecPath' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:42.631  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
15. UPDATE config SET val='/var/lib/andphone/archive' WHERE module='recorder' AND param='RecPath' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:42.632  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
16. SELECT val FROM config WHERE module='recorder' AND param='ShowSoftRestart' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:42.633  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
17. UPDATE config SET val='true' WHERE module='recorder' AND param='ShowSoftRestart' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:42.636  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
18. SELECT val FROM config WHERE module='recorder' AND param='TmpRecPath' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:42.637  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
19. UPDATE config SET val='/var/lib/andphone/tmp' WHERE module='recorder' AND param='TmpRecPath' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:43.633  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
28. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'global',NULL,'Apas 
is starting up on node ''andphone'' (10.51.51.122)',0,0) 
 {executed in 281 msec}

-----> 2020-08-14 14:09:43.703  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
28. SELECT currval('logging_id_seq') 
 {executed in 70 msec}

-----> 2020-08-14 14:09:44.152  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
29. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'global',NULL,'Apas 
version: 6.2.3-13372 (Appliance-64bit)',0,0) 
 {executed in 9 msec}

-----> 2020-08-14 14:09:44.153  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
29. SELECT currval('logging_id_seq') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:44.408  com.andtek.andphone.global.Module.addBackupUser(Module.java:1290)
30. SELECT u.username, u.password from users u INNER JOIN userroles ur ON ur.uid=u.uid INNER JOIN 
roles r ON r.rid=ur.rid WHERE r.rolename='global_backup' AND u.username='backup' 
 {executed in 254 msec}

-----> 2020-08-14 14:09:44.410  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:44.850  com.andtek.andphone.global.Module$LicenseDistributionCleanupThread.run(Module.java:1200)
31. DELETE FROM licenseDistribution WHERE created < '06/14/2020 14:09:44.797' 
 {executed in 51 msec}

-----> 2020-08-14 14:09:44.930  com.andtek.andphone.global.ModuleDB.updateSFTPAvailPeriod(ModuleDB.java:1353)
22. SELECT sgm.gid, sgm.serverID, s.serverType, s.serverName FROM servergroup_members sgm, servers 
s WHERE s.serverID=sgm.serverID AND s.serverType=3 
 {executed in 58 msec}

-----> 2020-08-14 14:09:45.397  com.andtek.andphone.global.Module$LicenseDistributionCleanupThread.run(Module.java:1209)
31. VACUUM licenseDistribution 
 {executed in 546 msec}

-----> 2020-08-14 14:09:45.433  com.andtek.andphone.global.Module$LicenseDistributionCleanupThread.run(Module.java:1217)
31. DELETE FROM moduleStats WHERE created < '06/14/2020 14:09:45.397' 
 {executed in 36 msec}

-----> 2020-08-14 14:09:45.442  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1123)
22. DROP VIEW IF EXISTS cucm_cdr_view 
 {executed in 372 msec}

-----> 2020-08-14 14:09:45.449  com.andtek.andphone.global.Module$LicenseDistributionCleanupThread.run(Module.java:1226)
31. VACUUM moduleStats 
 {executed in 16 msec}

-----> 2020-08-14 14:09:45.727  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
32. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),1,'recorder',NULL,'Sniffer 
process (andphone_record) went out of service (status=DISCONNECTED).',0,0) 
 {executed in 18 msec}

-----> 2020-08-14 14:09:45.728  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
33. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),1,'recorder',NULL,'Sniffer 
process (andphone_record) went out of service (status=DISCONNECTED).',0,0) 
 {executed in 17 msec}

-----> 2020-08-14 14:09:45.732  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
33. SELECT currval('logging_id_seq') 
 {executed in 3 msec}

-----> 2020-08-14 14:09:45.733  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
32. SELECT currval('logging_id_seq') 
 {executed in 6 msec}

-----> 2020-08-14 14:09:45.789  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1125)
22. CREATE OR REPLACE VIEW cucm_cdr_view AS SELECT id AS id, cdr_date_time AS cdr_date_time,cdr_record_type 
AS cdr_record_type, global_call_id_callmanager_id AS global_call_id_callmanager_id, global_call_id_call_id 
AS global_call_id_call_id, orig_node_id AS orig_node_id, dest_node_id AS dest_node_id, orig_leg_call_identifier 
AS orig_leg_call_identifier, date_time_origination AS date_time_origination, orig_ip_addr AS 
orig_ip_addr, calling_party_number AS calling_party_number, calling_party_unicode_login_user_id 
AS calling_party_unicode_login_user_id,orig_cause_location AS orig_cause_location, orig_cause_value 
AS orig_cause_value, orig_media_transport_address_ip AS orig_media_transport_address_ip, orig_media_transport_address_port 
AS orig_media_transport_address_port, orig_mediacap_payload_capability AS orig_mediacap_payload_capability, 
orig_videocap_codec AS orig_videocap_codec, orig_videocap_resolution AS orig_videocap_resolution, 
orig_video_transport_address_ip AS orig_video_transport_address_ip, orig_video_transport_address_port 
AS orig_video_transport_address_port, dest_leg_call_identifier AS dest_leg_call_identifier, 
dest_ip_addr AS dest_ip_addr, original_called_party_number AS original_called_party_number, 
final_called_party_number AS final_called_party_number, final_called_party_unicode_login_user_id 
AS final_called_party_unicode_login_user_id, dest_cause_location AS dest_cause_location, dest_cause_value 
AS dest_cause_value, dest_media_transport_address_ip AS dest_media_transport_address_ip, dest_media_transport_address_port 
AS dest_media_transport_address_port, dest_mediacap_payload_capability AS dest_mediacap_payload_capability, 
dest_videocap_codec AS dest_videocap_codec, dest_videocap_resolution AS dest_videocap_resolution, 
dest_video_transport_address_ip AS dest_video_transport_address_ip, dest_video_transport_address_port 
AS dest_video_transport_address_port, date_time_connect AS date_time_connect, date_time_disconnect 
AS date_time_disconnect, last_redirect_dn AS last_redirect_dn, original_called_party_number_partition 
AS original_called_party_number_partition, calling_party_number_partition AS calling_party_number_partition, 
final_called_party_number_partition AS final_called_party_number_partition, last_redirect_dn_partition 
AS last_redirect_dn_partition,duration AS duration, orig_device_name AS orig_device_name, dest_device_name 
AS dest_device_name, orig_call_termination_on_behalf_of AS orig_call_termination_on_behalf_of, 
dest_call_termination_on_behalf_of AS dest_call_termination_on_behalf_of, orig_called_party_redirect_on_behalf_of 
AS orig_called_party_redirect_on_behalf_of, last_redirect_redirect_on_behalf_of AS last_redirect_redirect_on_behalf_of, 
orig_called_party_redirect_reason AS orig_called_party_redirect_reason, last_redirect_redirect_reason 
AS last_redirect_redirect_reason, dest_conversation_id AS dest_conversation_id, join_on_behalf_of 
AS join_on_behalf_of, comment AS comment, auth_code_description AS auth_code_description,auth_level 
AS auth_level, client_matter_code AS client_matter_code,call_secured_status AS call_secured_status, 
orig_conversation_id AS orig_conversation_id, auth_code_value AS auth_code_value , orig_ipv4v6_addr 
AS orig_ipv4v6_addr , dest_ipv4v6_addr AS dest_ipv4v6_addr , incoming_protocol_id AS incoming_protocol_id, 
outgoing_protocol_id AS outgoing_protocol_id, hunt_pilot_dn AS hunt_pilot_dn, hunt_pilot_partition 
AS hunt_pilot_partition, called_party_pattern_usage AS called_party_pattern_usage, was_call_queued 
AS was_call_queued, total_wait_time_in_queue AS total_wait_time_in_queue, calling_party_number_uri 
AS calling_party_number_uri, original_called_party_number_uri AS original_called_party_number_uri, 
final_called_party_number_uri AS final_called_party_number_uri, last_redirect_dn_uri AS last_redirect_dn_uri 
from cucm_cdr 
 {executed in 347 msec}

-----> 2020-08-14 14:09:45.822  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1208)
22. DROP VIEW IF EXISTS cucm_cmr_view 
 {executed in 33 msec}

-----> 2020-08-14 14:09:45.869  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1210)
22. CREATE OR REPLACE VIEW cucm_cmr_view AS SELECT id AS id, cmr_date_time AS cmr_date_time, cdr_record_type 
AS cdr_record_type, global_call_id_callmanager_id AS global_call_id_callmanager_id, global_call_id_call_id 
AS global_call_id_call_id, node_id AS node_id, call_identifier AS call_identifier, directory_number 
AS directory_number, date_timestamp AS date_timestamp, number_packets_sent AS number_packets_sent, 
number_octets_sent AS number_octets_sent, number_packets_received AS number_packets_received, 
number_octets_received AS number_octets_received, number_packets_lost AS number_packets_lost, 
jitter AS jitter, latency AS latency, directory_number_partition AS directory_number_partition, 
device_name AS device_name, global_call_id_cluster_id AS global_call_id_cluster_id, var_vq_metrics 
AS var_vq_metrics from cucm_cmr 
 {executed in 47 msec}

-----> 2020-08-14 14:09:45.885  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1242)
22. DROP VIEW IF EXISTS logging_view 
 {executed in 15 msec}

-----> 2020-08-14 14:09:45.900  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1244)
22. CREATE OR REPLACE VIEW logging_view AS SELECT id AS id, created AS created, level AS level, 
username AS username, message AS message, reference AS reference, related AS related FROM logging 
 {executed in 15 msec}

-----> 2020-08-14 14:09:45.958  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1259)
22. COMMENT ON COLUMN logging_view.id is 'Unique database ID.' 
 {executed in 46 msec}

-----> 2020-08-14 14:09:45.959  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1260)
22. COMMENT ON COLUMN logging_view.created is 'The timestamp when the entry is created.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:45.966  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1261)
22. COMMENT ON COLUMN logging_view.level is 'The severity level of the logging entry. Possible 
values: FATAL=0, ERROR=1, WARN=2, INFO=3, DEBUG=4' 
 {executed in 7 msec}

-----> 2020-08-14 14:09:45.982  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1262)
22. COMMENT ON COLUMN logging_view.username is 'If the logging entry is related to GUI operation 
then the username is the logged user on the Admin GUI.' 
 {executed in 16 msec}

-----> 2020-08-14 14:09:45.983  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1263)
22. COMMENT ON COLUMN logging_view.message is 'The message is related to the event.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:45.987  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1264)
22. COMMENT ON COLUMN logging_view.reference is 'Most of the cases it is zero value. It is used 
only if the entry is related to rhe broadcaast message.' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:45.988  com.andtek.andphone.global.ModuleDB.create(ModuleDB.java:1265)
22. COMMENT ON COLUMN logging_view.related is 'Most of the cases it is zero value. It is used only 
if the entry is related to rhe broadcaast message.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.089  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='manager' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:46.091  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andphone' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.092  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='soapapi' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.093  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='cups' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.094  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='restadmin' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.095  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='restpublic' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.095  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.096  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_configcm' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.096  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_configcme' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.097  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_license' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.097  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_cdrfetch' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.108  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_security' 
 {executed in 11 msec}

-----> 2020-08-14 14:09:46.109  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_users' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.109  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_adintegration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.110  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_poolslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.110  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_servers' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.111  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_medialist' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.112  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_schedulelist' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.114  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_regex' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:46.114  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_locales' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.114  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_maintenance' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.115  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_backup' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.116  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_bulktool' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.116  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_restart' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.120  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_update' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:46.121  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_troubleshoot' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.121  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_logs' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.122  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_events' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.122  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_status' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.123  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='global_rrdstat' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.123  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='lockout_config' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.124  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='lockout_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.124  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='lockout_list' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.124  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='partner_settings' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.125  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='partner_grouplist' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.125  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='partner_managerlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.130  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='partner_search' 
 {executed in 5 msec}

-----> 2020-08-14 14:09:46.131  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='partner_presencestates' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.131  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='ldap_dirlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.132  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='ldap_dirgroups' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.132  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='ldap_lookup' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.132  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='ldap_dirmapping' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.133  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='mcast_configuration' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.133  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='mcast_grouplist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.134  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='mcast_smsbcast' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.134  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.134  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.135  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_rules' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.135  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_status' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.149  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_encrypt' 
 {executed in 14 msec}

-----> 2020-08-14 14:09:46.149  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_cert' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.150  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_archive' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.153  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_search' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:46.154  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recorder_restore' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.155  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.156  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_profiles' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.157  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_encryption' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.157  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_archive' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.158  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_search' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.159  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='recordermgmt_restore' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.159  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='observer_camlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.160  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='testing_screenshot' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.161  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='testing_simulator' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.162  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='settings_profilelist' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.162  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='blacklist_settings' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.163  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='blacklist_blacklist' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.164  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_configuration' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.164  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_dirlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.165  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_tasklist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.165  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_schedule' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.168  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_phone_custom' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:46.168  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_appslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.169  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_location' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.170  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_reporting' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.170  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='provisioning_reportingarchive' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.172  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='apps_appslist' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:46.172  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='desktop_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.172  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='desktop_activeclientlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.175  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='desktop_clientlist' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:46.175  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='dect_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.176  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='callrouting_configuration' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.176  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='communicator_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.176  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='communicator_activeclientlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.177  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='communicator_poollist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.177  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='communicator_clientlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.178  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_settings' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.185  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_queuelist' 
 {executed in 7 msec}

-----> 2020-08-14 14:09:46.185  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_pilotlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.186  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_category' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.186  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_acdreport' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.186  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_classification' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.187  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_callbackrules' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.187  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='groupacd_search' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.187  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='reports_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.188  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='reports_upload_rptfiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.192  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='reports_report_scheduling' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:46.192  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='reports_list_riports' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.192  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='reports_webreport' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.193  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='phonemenu_configuration' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.193  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='phonemenu_menus' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.193  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='calllist_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.194  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='inout_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.194  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='inout_input' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.195  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='inout_output' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.195  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='inout_mapping' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.195  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andmobile_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.196  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andmobile_profiles' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.196  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andmobile_activeclient' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.196  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andmobile_clientlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.197  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='metadirectory_configuration' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:46.197  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='midlet_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.198  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='midlet_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.198  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='presence_sources' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.205  com.andtek.andphone.global.ModuleDB.findAndAddRoles(ModuleDB.java:2262)
22. SELECT rid FROM roles WHERE rolename='andguard_appslist' 
 {executed in 7 msec}

-----> 2020-08-14 14:09:46.223  com.andtek.andphone.global.ModuleDB.checkAndEncryptUserPW(ModuleDB.java:2291)
22. SELECT uid, password from users WHERE password NOT LIKE 'ENC:%' 
 {executed in 18 msec}

-----> 2020-08-14 14:09:46.246  com.andtek.andphone.global.ModuleDB.encryptAnyPasswords(ModuleDB.java:2024)
22. SELECT * FROM ADDomains 
 {executed in 22 msec}

-----> 2020-08-14 14:09:46.575  com.andtek.andphone.global.ModuleDB.deactivateJtapiServerAvailPeriod(ModuleDB.java:1410)
22. SELECT sgm.gid, sgm.serverID, s.serverType FROM servergroup_members sgm, servers s WHERE s.serverID=sgm.serverID 
AND s.serverType=1 
 {executed in 23 msec}

-----> 2020-08-14 14:09:46.610  com.andtek.andphone.global.ModuleDB.deactivateJtapiServerAvailPeriod(ModuleDB.java:1430)
22. UPDATE servergroup SET availPeriod=0, unavailPeriod=0 WHERE gid=2 
 {executed in 35 msec}

-----> 2020-08-14 14:09:46.611  com.andtek.andphone.global.ModuleDB.deleteOldOrphanServerEntries(ModuleDB.java:1462)
22. DELETE FROM servers s WHERE s.serverid NOT IN (select sgm.serverid from servergroup_members 
sgm) 
 {executed in 0 msec}

-----> 2020-08-14 14:09:46.761  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 10 msec}

-----> 2020-08-14 14:09:46.844  com.andtek.andphone.directory.ModuleDB.encryptDirPasswords(ModuleDB.java:283)
22. SELECT id, password FROM directories 
 {executed in 35 msec}

-----> 2020-08-14 14:09:46.997  com.andtek.andphone.utils.ModuleDBUtils.addDatabaseField(ModuleDBUtils.java:1074)
22. SELECT COUNT(rec_password) FROM rec_call 
 {executed in 18 msec}

-----> 2020-08-14 14:09:47.109  com.andtek.andphone.utils.ModuleDBUtils.addDatabaseField(ModuleDBUtils.java:1074)
22. SELECT COUNT(rec_password) FROM recmgmt_call 
 {executed in 32 msec}

-----> 2020-08-14 14:09:47.109  com.andtek.andphone.utils.ModuleDBUtils.addDatabaseField(ModuleDBUtils.java:1074)
22. SELECT COUNT(duplicate) FROM recmgmt_call 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.132  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 11 msec}

-----> 2020-08-14 14:09:47.133  com.andtek.andphone.recordermgmt.ModuleDB.legacyCreateRecorderMgmtTables(ModuleDB.java:346)
22. SELECT val FROM config WHERE module='recordermgmt' AND param='RoutePointName' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.211  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.258  com.andtek.andphone.utils.ModuleDBUtils.isDataExistsBySql(ModuleDBUtils.java:1115)
22. SELECT * FROM provisioning_protocol_dependencies WHERE projectname='wacker' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.268  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE provisioning_report_detail VALIDATE CONSTRAINT provisioning_report_detail_fk_detail2report_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.342  com.andtek.andphone.utils.ModuleDBUtils.isDataExistsBySql(ModuleDBUtils.java:1115)
22. SELECT name FROM callListConfig WHERE name = 'MissedEmailSubject' 
 {executed in 22 msec}

-----> 2020-08-14 14:09:47.377  com.andtek.andphone.communicator.ModuleDB.checkDefaultProfile(ModuleDB.java:299)
22. SELECT * FROM desktop_profiles 
 {executed in 22 msec}

-----> 2020-08-14 14:09:47.394  com.andtek.andphone.callrouting.ModuleDB.run(ModuleDB.java:267)
34. vacuum callList 
 {executed in 42 msec}

-----> 2020-08-14 14:09:47.482  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:66)
22. COMMENT ON COLUMN acdPilot.id is 'Unique ID of the pilot.' 
 {executed in 9 msec}

-----> 2020-08-14 14:09:47.483  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:67)
22. COMMENT ON COLUMN acdPilot.name is 'Name of the pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.484  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:68)
22. COMMENT ON COLUMN acdPilot.description is 'Description of the pilot.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.484  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:69)
22. COMMENT ON COLUMN acdPilot.dn is 'DN of the CTI RP (Pilot DN).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.485  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:70)
22. COMMENT ON COLUMN acdPilot.regex is 'Pilot regex.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.485  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:71)
22. COMMENT ON COLUMN acdPilot.regexrepl is 'Pilot regex replacement.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.521  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:136)
22. DELETE FROM constants_table 
 {executed in 22 msec}

-----> 2020-08-14 14:09:47.525  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:202)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_FIRSTAVAIL','0') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.526  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:203)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_FIRSTAVAILNOTBUSY','1') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.527  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:204)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_LONGESTIDLE','2') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.528  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:205)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_ROUNDROBIN','3') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.528  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:206)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_ALWAYSQUEUE','4') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.529  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:207)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_QUEUEDTRANSFER','5') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.530  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:208)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdqueue','callDistribution','CALLDISTRIBUTION_PARKQUEUE','6') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.530  com.andtek.andphone.utils.ModuleDBUtils.loadConstantsValues(ModuleDBUtils.java:466)
22. select field, value from constants_table where table_name='acdqueue' and column_name='callDistribution' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.547  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:218)
22. COMMENT ON COLUMN acdQueue.id is 'Unique ID.' 
 {executed in 16 msec}

-----> 2020-08-14 14:09:47.547  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:219)
22. COMMENT ON COLUMN acdQueue.name is 'Name of the Queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.548  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:220)
22. COMMENT ON COLUMN acdQueue.description is 'Description of the Queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.549  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:221)
22. COMMENT ON COLUMN acdQueue.maxCalls is 'Queue limit value, maximum number of calls in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.550  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:222)
22. COMMENT ON COLUMN acdQueue.calldistribution is 'Type of call distribution. Possible value(s): 
CALLDISTRIBUTION_FIRSTAVAIL=0, CALLDISTRIBUTION_FIRSTAVAILNOTBUSY=1, CALLDISTRIBUTION_LONGESTIDLE=2, 
CALLDISTRIBUTION_ROUNDROBIN=3, CALLDISTRIBUTION_ALWAYSQUEUE=4, CALLDISTRIBUTION_QUEUEDTRANSFER=5, 
CALLDISTRIBUTION_PARKQUEUE=6.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.551  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:223)
22. COMMENT ON COLUMN acdQueue.targetQueueFull is 'Queue full target DN. The call will be redirected 
to this target if the queue is full.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.552  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:224)
22. COMMENT ON COLUMN acdQueue.targetNoAgents is 'Fwd. No agents target DN. The call will be redirected 
to this target if the queue has no available agents.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.552  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:225)
22. COMMENT ON COLUMN acdQueue.preQueueMediaID is 'PreQueue media ID, refers to media table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.553  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:226)
22. COMMENT ON COLUMN acdQueue.queueMediaID is 'Queue media ID, refers to media table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.554  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:227)
22. COMMENT ON COLUMN acdQueue.rerouteTime is 'Reroute time in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.554  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:228)
22. COMMENT ON COLUMN acdQueue.postCallTime is 'Postcall time in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.555  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:229)
22. COMMENT ON COLUMN acdQueue.groupID is 'ID of the agent group. If set then this group shows 
the agents status on the group display.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.555  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:230)
22. COMMENT ON COLUMN acdQueue.expireTime is 'Expire time in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.556  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:231)
22. COMMENT ON COLUMN acdQueue.targetExpired is 'Expire time target DN. The call will be redirected 
to this target if the expire time exceeds in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.557  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:232)
22. COMMENT ON COLUMN acdQueue.flags is 'Some flags, like Queue calls during break.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.557  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:233)
22. COMMENT ON COLUMN acdQueue.slaPeriod is 'The time in minutes for the measurement interval to 
calculate service level.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.558  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:234)
22. COMMENT ON COLUMN acdQueue.slaCallSuccessTime is 'The minimum time in seconds for an accepted 
call to be counted as successful. If the call is shorter it will be ignored.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.559  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:235)
22. COMMENT ON COLUMN acdQueue.slaLimit is 'The minimum service level in percent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.560  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:236)
22. COMMENT ON COLUMN acdQueue.fallbackTime is 'The time in seconds after the call will fall back 
to the agent or queue when the destination does not pickup the call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.585  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:326)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','Active','0') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.586  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:327)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','Inactive','1') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.586  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:328)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','Break','2') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.587  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:329)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','Postcall','3') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.588  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:330)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','Disabled','4') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.588  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:331)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagent','available','OffWork','5') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.589  com.andtek.andphone.utils.ModuleDBUtils.loadConstantsValues(ModuleDBUtils.java:466)
22. select field, value from constants_table where table_name='acdagent' and column_name='available' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.590  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:340)
22. COMMENT ON COLUMN acdAgent.id is 'Unique database ID (auto-increment)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.654  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:341)
22. COMMENT ON COLUMN acdAgent.queueID is 'ID of the queue, it is a reference to acdQueueView.' 
 {executed in 64 msec}

-----> 2020-08-14 14:09:47.655  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:342)
22. COMMENT ON COLUMN acdAgent.priority is 'Order of the agent in the queue. It refers to acdAgentView 
table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.655  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:343)
22. COMMENT ON COLUMN acdAgent.dn is 'DN of the agent. It refers to acdAgentView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.656  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:344)
22. COMMENT ON COLUMN acdAgent.available is 'Agent availability, it refers to acdAgentView table. 
Possible value(s): Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.660  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:345)
22. COMMENT ON COLUMN acdAgent.skill is 'Agent skill, it refers to acdAgentView table. Possible 
values from 0 to 9.' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:47.661  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:346)
22. COMMENT ON COLUMN acdAgent.stats_lastUpdate is 'Datetime when last agent statistics values 
are last updated.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.662  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:347)
22. COMMENT ON COLUMN acdAgent.stats_calls_total is 'Total amount of calls of this agent (daily 
information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.666  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:348)
22. COMMENT ON COLUMN acdAgent.stats_calls_missed is 'Total amount of missed calls of agent (daily 
information).' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:47.669  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:349)
22. COMMENT ON COLUMN acdAgent.stats_service_level is 'Service level of agent (daily information)' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:47.670  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:350)
22. COMMENT ON COLUMN acdAgent.stats_talking_time is 'Total talking time of this agent (daily information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.671  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:351)
22. COMMENT ON COLUMN acdAgent.stats_onhold_time is 'Total hold time for this agent (daily information)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.672  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:352)
22. COMMENT ON COLUMN acdAgent.stats_wrapup_time is 'Total postcall (wrap up) time for this agent 
(daily information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.683  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:353)
22. COMMENT ON COLUMN acdAgent.stats_idle_time is 'Total idle time for this agent (daily information).' 
 {executed in 11 msec}

-----> 2020-08-14 14:09:47.686  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:354)
22. COMMENT ON COLUMN acdAgent.stats_call_duration_avg is 'Average of the call duration (daily 
information).' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:47.687  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:355)
22. COMMENT ON COLUMN acdAgent.stats_ring_duration_avg is 'Average of the call ringing (daily information).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.688  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:356)
22. COMMENT ON COLUMN acdAgent.stats_occupancy is 'Calculated value from other statistics column.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.689  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:357)
22. COMMENT ON COLUMN acdAgent.isPrimaryQueue is 'If agent is primary in the queue then this value 
is 1 otherwise 0.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.693  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:399)
22. ALTER TABLE acdCall SET WITH OIDS 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.694  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:405)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdcall','state','STATE_DISCONNECTED','-1') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.695  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:406)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_OFFERED 
','0', 'ringing at the pilot') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.695  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:407)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_MAXROUTES','1','error 
caused by a routing loop') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.697  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:408)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_PREQUEUE','5', 
'queue announcement (pre queue media) is played') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.698  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:409)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_QUEUED','6', 
'call is in the queue') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.699  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:410)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED_AGENT','7', 
'ringing at the agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.701  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:411)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_FALLBACK','8', 
'call is falling back to queue because transfer target did not pickup') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.703  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:412)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_REROUTING','9', 
'call is rerouted to another agent in the same queue because target did not pickup with reroute 
time') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.704  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:413)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED','10', 
'range 10-19 is for calls routed to acd external targets') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.711  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:414)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED_NOAGENTS','10', 
'forwarded because no agents are logged in') 
 {executed in 7 msec}

-----> 2020-08-14 14:09:47.713  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:415)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED_QUEUEFULL','11', 
'forwarded because queue is full') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.714  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:416)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED_EXPIRED','12', 
'forwarded because call time expired') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.714  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:417)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_FORWARDED_EXTERN','13', 
'call is forwarded/redirected/picked to an ACD external target') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.715  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:418)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_TRANSFERRED','14', 
'call is transferred to an ACD-external target') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.717  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:419)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_CALL_FORWARDED','15', 
'call was forwarded') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.717  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:420)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ROUTED_BREAK_TARGET','16', 
'forwarded because other agents are unavailable or disabled and at least 1 agent is in break') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.718  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:421)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_CONNECTED','20', 
'call is answered by an agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.719  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:422)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_HELD','21', 
'call is put on hold by an agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.720  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:423)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_OUTGOING','25', 
'outgoing call from an agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.721  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:424)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_AGENT_AVAILABLE','30', 
'agent switched state to available') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.723  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:425)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_AGENT_UNAVAILABLE','31', 
'agent switched state to unavailable') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.726  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:426)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_CALLBACK_AUTOMATED_REQUEST','40', 
'automated callback request created') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.726  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:427)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_CALLBACK_MANUAL_REQUEST','41', 
'manual callback request created') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.729  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:428)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_ENDED','100', 
'call ended normally') 
 {executed in 3 msec}

-----> 2020-08-14 14:09:47.730  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:429)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcall','state','STATE_BUSY','101', 
'call ended in busy state') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.779  com.andtek.andphone.utils.ModuleDBUtils.loadConstantsValues(ModuleDBUtils.java:466)
22. select field, value from constants_table where table_name='acdcall' and column_name='state' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.780  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:468)
22. COMMENT ON COLUMN acdCall.id is 'Unique database ID (auto-increment)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.781  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:469)
22. COMMENT ON COLUMN acdCall.created is 'The timestamp when ACD call was created.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.782  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:470)
22. COMMENT ON COLUMN acdCall.state is 'The last state of the ACD call when the call ends. Possible 
value(s): STATE_DISCONNECTED=-1, STATE_OFFERED =0, STATE_MAXROUTES=1, STATE_PREQUEUE=5, STATE_QUEUED=6, 
STATE_ROUTED_AGENT=7, STATE_FALLBACK=8, STATE_REROUTING=9, STATE_ROUTED=10, STATE_ROUTED_NOAGENTS=10, 
STATE_ROUTED_QUEUEFULL=11, STATE_ROUTED_EXPIRED=12, STATE_FORWARDED_EXTERN=13, STATE_TRANSFERRED=14, 
STATE_CALL_FORWARDED=15, STATE_ROUTED_BREAK_TARGET=16, STATE_CONNECTED=20, STATE_HELD=21, STATE_OUTGOING=25, 
STATE_AGENT_AVAILABLE=30, STATE_AGENT_UNAVAILABLE=31, STATE_CALLBACK_AUTOMATED_REQUEST=40, 
STATE_CALLBACK_MANUAL_REQUEST=41, STATE_ENDED=100, STATE_BUSY=101.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.782  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:471)
22. COMMENT ON COLUMN acdCall.duration is 'Complete duration of ACD call, from creation to finishing 
in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.783  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:472)
22. COMMENT ON COLUMN acdCall.caller is 'Telephone number of the caller.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.784  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:473)
22. COMMENT ON COLUMN acdCall.callername is 'Name of the caller.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.785  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:474)
22. COMMENT ON COLUMN acdCall.target is 'The last target number which is reached by ACD routing 
mechanism.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.785  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:475)
22. COMMENT ON COLUMN acdCall.targetname is 'Name of the last target.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.786  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:476)
22. COMMENT ON COLUMN acdCall.queuetime is 'The amount of queue time in seconds. It shows how long 
the call stays in queue(s).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.787  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:477)
22. COMMENT ON COLUMN acdCall.agent is 'Telephone number of the last agent where the call was routed 
to.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.788  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:478)
22. COMMENT ON COLUMN acdCall.agentname is 'Name of the last agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.788  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:479)
22. COMMENT ON COLUMN acdCall.cucmcallid is 'Cisco global call ID, e.g. 123456/1.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.789  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:480)
22. COMMENT ON COLUMN acdCall.talkingduration is 'The amount of talking time in seconds when agent 
was connected (talking).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.790  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:481)
22. COMMENT ON COLUMN acdCall.statisticscategory is 'Category of the ACD call. It is used to determine 
if the call is missed, answered, or ignored. possible values: EMPTY, missed, answered, ignored.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.792  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:482)
22. COMMENT ON COLUMN acdCall.holdtime is 'The amount of time in seconds while call was hold.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.792  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:483)
22. COMMENT ON COLUMN acdCall.pilotID is 'The pilotID where the ACD call disconnected.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.793  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:484)
22. COMMENT ON COLUMN acdCall.queueID is 'The queueID where the ACD call disconnected.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.794  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:485)
22. COMMENT ON COLUMN acdCall.pilotname is 'The pilot name where the ACD call disconnected.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.795  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:486)
22. COMMENT ON COLUMN acdCall.queuename is 'The queue name where the ACD call disconnected.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.795  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:487)
22. COMMENT ON COLUMN acdCall.original_pilotid is 'The first/original pilotID where the ACD call 
arrived.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.796  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:488)
22. COMMENT ON COLUMN acdCall.original_queueid is 'The first/original queueID where the ACD call 
arrived.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.797  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:489)
22. COMMENT ON COLUMN acdCall.original_pilotname is 'The first/original pilot name where the ACD 
call arrived.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.797  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:490)
22. COMMENT ON COLUMN acdCall.original_queuename is 'The first/original queue name where the ACD 
call arrived.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.798  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:491)
22. COMMENT ON COLUMN acdCall.first_answered_pilotid is 'The first pilotID where the ACD call is 
answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.799  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:492)
22. COMMENT ON COLUMN acdCall.first_answered_queueid is 'The first queueID where the ACD call is 
answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.800  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:493)
22. COMMENT ON COLUMN acdCall.first_answered_pilotname is 'The first pilot name where the ACD call 
is answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.801  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:494)
22. COMMENT ON COLUMN acdCall.first_answered_queuename is 'The first queue name where the ACD call 
is answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.803  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:495)
22. COMMENT ON COLUMN acdCall.last_redirected_pilotid is 'The last redirected pilotID where the 
ACD forwarded from.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.804  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:496)
22. COMMENT ON COLUMN acdCall.last_redirected_queueid is 'The last redirected queueID where the 
ACD forwarded from.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.805  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:497)
22. COMMENT ON COLUMN acdCall.last_redirected_pilotname is 'The last redirected pilot name where 
the ACD forwarded from.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.806  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:498)
22. COMMENT ON COLUMN acdCall.last_redirected_queuename is 'The last redirected queue name where 
the ACD forwarded from.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.806  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:499)
22. COMMENT ON COLUMN acdCall.last_redirected_state is 'The ACD call state of the last redirect 
reason.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.813  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:532)
22. COMMENT ON COLUMN acdPilotQueue.pilotid is 'Reference to acdPilotView table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.814  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:533)
22. COMMENT ON COLUMN acdPilotQueue.id is 'Order of queues in the pilot, incremented value from 
zero.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.815  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:534)
22. COMMENT ON COLUMN acdPilotQueue.scheduleID is 'Reference to schedule table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.815  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:535)
22. COMMENT ON COLUMN acdPilotQueue.queueID is 'Reference to acdQueueView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.816  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:536)
22. COMMENT ON COLUMN acdPilotQueue.color is 'Color definition for the given queue in the pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.850  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:899)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdcalldetail','state','STATE_DISCONNECTED','-1') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.850  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:900)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_OFFERED 
','0', 'ringing at the pilot') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.851  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:901)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_MAXROUTES','1','error 
caused by a routing loop') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.852  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:902)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_PREQUEUE','5', 
'queue announcement (pre queue media) is played') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.853  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:903)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_QUEUED','6', 
'call is in the queue') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.853  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:904)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED_AGENT','7', 
'ringing at the agent') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.855  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:905)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_FALLBACK','8', 
'call is falling back to queue because transfer target did not pickup') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.856  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:906)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_REROUTING','9', 
'call is rerouted to another agent in the same queue because target did not pickup with reroute 
time') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.856  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:907)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED','10', 
'range 10-19 is for calls routed to acd external targets') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.858  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:908)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED_NOAGENTS','10', 
'forwarded because no agents are logged in') 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.859  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:909)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED_QUEUEFULL','11', 
'forwarded because queue is full') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.860  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:910)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED_EXPIRED','12', 
'forwarded because call time expired') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.861  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:911)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_FORWARDED_EXTERN','13', 
'call is forwarded/redirected/picked to an ACD external target') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.861  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:912)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_TRANSFERRED','14', 
'call is transferred to an ACD-external target') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.862  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:913)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_CALL_FORWARDED','15', 
'call was forwarded') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.863  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:914)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ROUTED_BREAK_TARGET','16', 
'forwarded because other agents are unavailable or disabled and at least 1 agent is in break') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.863  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:915)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_CONNECTED','20', 
'call is answered by an agent') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.864  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:916)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_HELD','21', 
'call is put on hold by an agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.865  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:917)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_OUTGOING','25', 
'outgoing call from an agent') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.865  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:918)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_AGENT_AVAILABLE','30', 
'agent switched state to available') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.866  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:919)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_AGENT_UNAVAILABLE','31', 
'agent switched state to unavailable') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.867  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:920)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_CALLBACK_AUTOMATED_REQUEST','40', 
'automated callback request created') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.867  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:921)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_CALLBACK_MANUAL_REQUEST','41', 
'manual callback request created') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.868  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:922)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_ENDED','100', 
'call ended normally') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.869  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:923)
22. INSERT INTO constants_table (table_name,column_name,field,value,description) VALUES ('acdcalldetail','state','STATE_BUSY','101', 
'call ended in busy state') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.869  com.andtek.andphone.utils.ModuleDBUtils.loadConstantsValues(ModuleDBUtils.java:466)
22. select field, value from constants_table where table_name='acdcalldetail' and column_name='state' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.872  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:933)
22. COMMENT ON COLUMN acdCallDetail.id is 'Unique database ID (auto-increment)' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:47.873  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:934)
22. COMMENT ON COLUMN acdCallDetail.fk_acdCall is 'Foreign key reference to acdCallView table id 
column.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.873  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:935)
22. COMMENT ON COLUMN acdCallDetail.historySeqID is 'Sequence of acd call history entries.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.875  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:936)
22. COMMENT ON COLUMN acdCallDetail.state is 'State of acd call entry. Possible value(s): STATE_DISCONNECTED=-1, 
STATE_OFFERED =0, STATE_MAXROUTES=1, STATE_PREQUEUE=5, STATE_QUEUED=6, STATE_ROUTED_AGENT=7, 
STATE_FALLBACK=8, STATE_REROUTING=9, STATE_ROUTED=10, STATE_ROUTED_NOAGENTS=10, STATE_ROUTED_QUEUEFULL=11, 
STATE_ROUTED_EXPIRED=12, STATE_FORWARDED_EXTERN=13, STATE_TRANSFERRED=14, STATE_CALL_FORWARDED=15, 
STATE_ROUTED_BREAK_TARGET=16, STATE_CONNECTED=20, STATE_HELD=21, STATE_OUTGOING=25, STATE_AGENT_AVAILABLE=30, 
STATE_AGENT_UNAVAILABLE=31, STATE_CALLBACK_AUTOMATED_REQUEST=40, STATE_CALLBACK_MANUAL_REQUEST=41, 
STATE_ENDED=100, STATE_BUSY=101.' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.876  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:937)
22. COMMENT ON COLUMN acdCallDetail.stateCreated is 'Timestamp when this ACD call state entry is 
created in APAS.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.877  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:938)
22. COMMENT ON COLUMN acdCallDetail.duration is 'Time in seconds the ACD call stays in this state. 
For example in state ringing it is ringing time, if state connected it is talking time.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.878  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:939)
22. COMMENT ON COLUMN acdCallDetail.fk_acdPilot is 'ID of pilot, it is a reference to acdPilotView 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.879  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:940)
22. COMMENT ON COLUMN acdCallDetail.fk_acdQueue is 'ID of queue, it is a reference to acdQueueView 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.879  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:941)
22. COMMENT ON COLUMN acdCallDetail.target is 'The current target telephone number where the call 
was routed to in this state.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.880  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:942)
22. COMMENT ON COLUMN acdCallDetail.targetName is 'Name of the target.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.880  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:943)
22. COMMENT ON COLUMN acdCallDetail.caller is 'The current caller telephone number for this state 
entry. It can be different to original caller if this entry is related to a consult/transfer.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.881  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:944)
22. COMMENT ON COLUMN acdCallDetail.callerName is 'Name of the caller.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.882  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:945)
22. COMMENT ON COLUMN acdCallDetail.agent is 'DN of the current agent where the call was routed 
to in this state.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.882  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:946)
22. COMMENT ON COLUMN acdCallDetail.agentName is 'Name of the agent.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.883  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:947)
22. COMMENT ON COLUMN acdCallDetail.cucmCallID is 'Cisco global call ID, e.g. 123456/1.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.885  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:972)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','Active','0') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.886  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:973)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','Inactive','1') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.886  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:974)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','Break','2') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.887  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:975)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','Postcall','3') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.888  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:976)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','Disabled','4') 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.888  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:977)
22. INSERT INTO constants_table (table_name,column_name,field,value) VALUES ('acdagentstatus','available','OffWork','5') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.889  com.andtek.andphone.utils.ModuleDBUtils.loadConstantsValues(ModuleDBUtils.java:466)
22. select field, value from constants_table where table_name='acdagentstatus' and column_name='available' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.889  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:987)
22. COMMENT ON COLUMN acdAgentStatus.fk_acdqueue is 'Foreign key reference to acdQueueView.id' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.893  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:988)
22. COMMENT ON COLUMN acdAgentStatus.agent is 'DN of the agent.' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:47.893  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:989)
22. COMMENT ON COLUMN acdAgentStatus.starttime is 'Timestamp when agent state is changed to other 
state' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:47.894  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:990)
22. COMMENT ON COLUMN acdAgentStatus.fromstate is 'Old availability state of agent. Possible value(s): 
Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.895  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:991)
22. COMMENT ON COLUMN acdAgentStatus.tostate is 'New availability state of agent. Possible value(s): 
Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:47.897  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:992)
22. COMMENT ON COLUMN acdAgentStatus.duration is 'Time in seconds, how long the agent stays in 
this state.' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:47.956  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1159)
22. COMMENT ON COLUMN acdAgent.callback_enabled is 'If true then agent is enabled to use Call Center 
Callback feature. It refers to acdAgentView table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.039  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1213)
22. UPDATE acdQueue SET fk_acdCallTagGroup=null WHERE fk_acdCallTagGroup='0' 
 {executed in 24 msec}

-----> 2020-08-14 14:09:48.076  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1271)
22. UPDATE acdPilotQueue SET isDefaultPriorityRelative='f' WHERE isDefaultPriorityRelative IS NULL 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.089  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE acdCallTag VALIDATE CONSTRAINT acdcalltag_fk_taggroup_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.100  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE acdQueue VALIDATE CONSTRAINT acdqueue_fk_acdcalltaggroup_fkey 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.111  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE acdCallClassification VALIDATE CONSTRAINT acdcallclassification_fk_acdcall_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.122  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE acdCallClassification2Tag VALIDATE CONSTRAINT acdcallclassification2tag_fk_acdcallclassification_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.123  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE acdCallClassification2Tag VALIDATE CONSTRAINT acdcallclassification2tag_fk_acdcalltag_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.377  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1480)
22. DROP VIEW IF EXISTS acd_call_view 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.410  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1483)
22. CREATE OR REPLACE VIEW acd_call_view AS SELECT ac.id AS id, ac.created AS created, ac.state 
AS state, ac.duration AS duration, ac.pilotID AS fk_acdpilot_id, ac.queueID AS fk_acdqueue_id, 
ac.pilotname AS pilotname, ac.queuename AS queuename, ac.original_pilotid AS original_pilotid, 
ac.original_queueid AS original_queueid, ac.original_pilotname AS original_pilotname, ac.original_queuename 
AS original_queuename, ac.first_answered_pilotid AS first_answered_pilotid, ac.first_answered_queueid 
AS first_answered_queueid, ac.first_answered_pilotname AS first_answered_pilotname, ac.first_answered_queuename 
AS first_answered_queuename, ac.last_redirected_pilotid AS last_redirected_pilotid, ac.last_redirected_queueid 
AS last_redirected_queueid, ac.last_redirected_pilotname AS last_redirected_pilotname, ac.last_redirected_queuename 
AS last_redirected_queuename, ac.last_redirected_state AS last_redirected_state, ac.caller 
AS caller, ac.callerName AS caller_name, ac.target AS target, ac.targetName AS target_name, 
ac.queueTime AS queue_time, ac.agent AS agent, ac.agentName AS agent_name, ac.cucmCallID AS 
cucm_call_id, ac.talkingDuration AS talking_duration, ac.statisticsCategory AS statistics_category, 
ac.holdTime AS hold_time, ac.ringingDuration AS ringing_duration, aa.DN AS dn, aa.priority 
AS priority, aa.available AS available, aa.skill AS skill from acdCall ac LEFT JOIN acdAgent 
aa ON (ac.target=aa.DN AND ac.queueID=aa.queueID) 
 {executed in 31 msec}

-----> 2020-08-14 14:09:48.411  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdcall' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.412  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdagent' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.413  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1534)
22. COMMENT ON COLUMN acd_call_view.id is 'Unique database ID (auto-increment)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.414  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1535)
22. COMMENT ON COLUMN acd_call_view.created is 'The timestamp when ACD call was created.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.415  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1536)
22. COMMENT ON COLUMN acd_call_view.state is 'The last state of the ACD call when the call ends. 
Possible value(s): STATE_DISCONNECTED=-1, STATE_OFFERED =0, STATE_MAXROUTES=1, STATE_PREQUEUE=5, 
STATE_QUEUED=6, STATE_ROUTED_AGENT=7, STATE_FALLBACK=8, STATE_REROUTING=9, STATE_ROUTED=10, 
STATE_ROUTED_NOAGENTS=10, STATE_ROUTED_QUEUEFULL=11, STATE_ROUTED_EXPIRED=12, STATE_FORWARDED_EXTERN=13, 
STATE_TRANSFERRED=14, STATE_CALL_FORWARDED=15, STATE_ROUTED_BREAK_TARGET=16, STATE_CONNECTED=20, 
STATE_HELD=21, STATE_OUTGOING=25, STATE_AGENT_AVAILABLE=30, STATE_AGENT_UNAVAILABLE=31, STATE_CALLBACK_AUTOMATED_REQUEST=40, 
STATE_CALLBACK_MANUAL_REQUEST=41, STATE_ENDED=100, STATE_BUSY=101.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.415  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1537)
22. COMMENT ON COLUMN acd_call_view.duration is 'Complete duration of ACD call, from creation to 
finishing in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.416  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1538)
22. COMMENT ON COLUMN acd_call_view.fk_acdpilot_id is 'The pilotID where the ACD call disconnected.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.417  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1539)
22. COMMENT ON COLUMN acd_call_view.fk_acdqueue_id is 'The queueID where the ACD call disconnected.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.417  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1540)
22. COMMENT ON COLUMN acd_call_view.caller is 'Telephone number of the caller.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.419  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1541)
22. COMMENT ON COLUMN acd_call_view.caller_name is 'Name of the caller.' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.420  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1542)
22. COMMENT ON COLUMN acd_call_view.target is 'The last target number which is reached by ACD routing 
mechanism.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.420  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1543)
22. COMMENT ON COLUMN acd_call_view.target_name is 'Name of the last target.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.421  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1544)
22. COMMENT ON COLUMN acd_call_view.queue_time is 'The amount of queue time in seconds. It shows 
how long the call stays in queue(s).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.422  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1545)
22. COMMENT ON COLUMN acd_call_view.agent is 'Telephone number of the last agent where the call 
was routed to.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.423  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1546)
22. COMMENT ON COLUMN acd_call_view.agent_name is 'Name of the last agent.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.424  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1547)
22. COMMENT ON COLUMN acd_call_view.cucm_call_id is 'Cisco global call ID, e.g. 123456/1.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.424  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1548)
22. COMMENT ON COLUMN acd_call_view.talking_duration is 'The amount of talking time in seconds 
when agent was connected (talking).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.425  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1549)
22. COMMENT ON COLUMN acd_call_view.statistics_category is 'Category of the ACD call. It is used 
to determine if the call is missed, answered, or ignored. possible values: EMPTY, missed, answered, 
ignored.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.426  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1550)
22. COMMENT ON COLUMN acd_call_view.hold_time is 'The amount of time in seconds while call was 
hold.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.427  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1551)
22. COMMENT ON COLUMN acd_call_view.ringing_duration is 'The amount of time in seconds while call 
was ringing.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.427  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1552)
22. COMMENT ON COLUMN acd_call_view.DN is 'DN of the agent. It refers to acdAgentView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.428  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1553)
22. COMMENT ON COLUMN acd_call_view.priority is 'Order of the agent in the queue. It refers to 
acdAgentView table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.431  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1554)
22. COMMENT ON COLUMN acd_call_view.available is 'Agent availability, it refers to acdAgentView 
table. Possible value(s): Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.431  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1555)
22. COMMENT ON COLUMN acd_call_view.skill is 'Agent skill, it refers to acdAgentView table. Possible 
values from 0 to 9.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.432  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1556)
22. COMMENT ON COLUMN acd_call_view.pilotname is 'The pilot name where the ACD call disconnected.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.433  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1557)
22. COMMENT ON COLUMN acd_call_view.queuename is 'The queue name where the ACD call disconnected.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.434  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1558)
22. COMMENT ON COLUMN acd_call_view.original_pilotid is 'The first/original pilotID where the ACD 
call arrived.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.434  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1559)
22. COMMENT ON COLUMN acd_call_view.original_queueid is 'The first/original queueID where the ACD 
call arrived.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.435  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1560)
22. COMMENT ON COLUMN acd_call_view.original_pilotname is 'The first/original pilot name where 
the ACD call arrived.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.436  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1561)
22. COMMENT ON COLUMN acd_call_view.original_queuename is 'The first/original queue name where 
the ACD call arrived.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.436  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1562)
22. COMMENT ON COLUMN acd_call_view.first_answered_pilotid is 'The first pilotID where the ACD 
call is answered.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.437  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1563)
22. COMMENT ON COLUMN acd_call_view.first_answered_queueid is 'The first queueID where the ACD 
call is answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.438  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1564)
22. COMMENT ON COLUMN acd_call_view.first_answered_pilotname is 'The first pilot name where the 
ACD call is answered.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.438  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1565)
22. COMMENT ON COLUMN acd_call_view.first_answered_queuename is 'The first queue name where the 
ACD call is answered.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.439  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1566)
22. COMMENT ON COLUMN acd_call_view.last_redirected_pilotid is 'The last redirected pilotID where 
the ACD forwarded from.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.440  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1567)
22. COMMENT ON COLUMN acd_call_view.last_redirected_queueid is 'The last redirected queueID where 
the ACD forwarded from.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.440  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1568)
22. COMMENT ON COLUMN acd_call_view.last_redirected_pilotname is 'The last redirected pilot name 
where the ACD forwarded from.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.441  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1569)
22. COMMENT ON COLUMN acd_call_view.last_redirected_queuename is 'The last redirected queue name 
where the ACD forwarded from.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.442  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1570)
22. COMMENT ON COLUMN acd_call_view.last_redirected_state is 'The ACD call state of the last redirect 
reason.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.459  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1578)
22. CREATE OR REPLACE VIEW acdCallHistoryView AS SELECT ahk.created, ahd.* FROM acdCallHistoryKey 
ahk, acdCallHistoryData ahd WHERE ahk.callID=ahd.callID 
 {executed in 16 msec}

-----> 2020-08-14 14:09:48.461  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1588)
22. COMMENT ON COLUMN acdCallHistoryView.id is 'Unique database ID (auto-increment)' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.462  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1589)
22. COMMENT ON COLUMN acdCallHistoryView.created is 'The timestamp when the call history entry 
is created.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.463  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1590)
22. COMMENT ON COLUMN acdCallHistoryView.callid is 'Internal unique database ID refers to the acdCallHistoryKey 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.464  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1591)
22. COMMENT ON COLUMN acdCallHistoryView.eventid is 'Order of the call history entry. If a call 
has more history entries then eventID is a sequence start from 1' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.466  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1592)
22. COMMENT ON COLUMN acdCallHistoryView.cucmcallid is 'Cisco callID which is related to this call 
history entry' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.466  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1593)
22. COMMENT ON COLUMN acdCallHistoryView.incoming is 'If it is an incoming call then 1 otherwise 
0' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.467  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1594)
22. COMMENT ON COLUMN acdCallHistoryView.caller is 'The calling party telephone number.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.467  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1595)
22. COMMENT ON COLUMN acdCallHistoryView.pilotdn is 'The Pilot DN where the ACD call arrived.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.468  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1596)
22. COMMENT ON COLUMN acdCallHistoryView.queuename is 'Name of the Group Category. ACD queue is 
associated to Group Category' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.469  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1597)
22. COMMENT ON COLUMN acdCallHistoryView.teamname is 'Name of the Team Category. Agents are associated 
to Team Category' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.469  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1598)
22. COMMENT ON COLUMN acdCallHistoryView.deptname is 'Name of the Department Category. One ore 
more ACD queues is associated to Department Category.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.470  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1599)
22. COMMENT ON COLUMN acdCallHistoryView.queuetime is 'The time in seconds. How long the call was 
queued.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.471  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1600)
22. COMMENT ON COLUMN acdCallHistoryView.ringduration is 'The time in seconds. How long the call 
was ringing when routed to an agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.472  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1601)
22. COMMENT ON COLUMN acdCallHistoryView.duration is 'The time in seconds. The talking time when 
call is answered by an agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.473  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1602)
22. COMMENT ON COLUMN acdCallHistoryView.state is 'State of the ACD call history entry. Possible 
value(s): STATE_DISCONNECTED=-1, STATE_OFFERED =0, STATE_MAXROUTES=1, STATE_PREQUEUE=5, STATE_QUEUED=6, 
STATE_ROUTED_AGENT=7, STATE_FALLBACK=8, STATE_REROUTING=9, STATE_ROUTED=10, STATE_ROUTED_NOAGENTS=10, 
STATE_ROUTED_QUEUEFULL=11, STATE_ROUTED_EXPIRED=12, STATE_FORWARDED_EXTERN=13, STATE_TRANSFERRED=14, 
STATE_CALL_FORWARDED=15, STATE_ROUTED_BREAK_TARGET=16, STATE_CONNECTED=20, STATE_HELD=21, STATE_OUTGOING=25, 
STATE_AGENT_AVAILABLE=30, STATE_AGENT_UNAVAILABLE=31, STATE_CALLBACK_AUTOMATED_REQUEST=40, 
STATE_CALLBACK_MANUAL_REQUEST=41, STATE_ENDED=100, STATE_BUSY=101.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.474  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1603)
22. COMMENT ON COLUMN acdCallHistoryView.laststate is 'The previous ACD call state. If an ACD call 
has more call history entries then it is the state for the previous history entry.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.476  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1604)
22. COMMENT ON COLUMN acdCallHistoryView.lastpilotdn is 'The pilot DN for the previous history 
entry.' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.477  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1605)
22. COMMENT ON COLUMN acdCallHistoryView.lastqueuename is 'Name of the Group Category for the previous 
history entry' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.478  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1606)
22. COMMENT ON COLUMN acdCallHistoryView.lastteamname is 'Name of the Team Category for the previous 
history entry.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.479  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1607)
22. COMMENT ON COLUMN acdCallHistoryView.lastdeptname is 'Name of the Department Category for the 
previous history entry' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.480  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1608)
22. COMMENT ON COLUMN acdCallHistoryView.agentdn is 'The agent telephone number.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.481  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1609)
22. COMMENT ON COLUMN acdCallHistoryView.callerhangup is 'If the calling party hangs up the call 
while ringing or queued then it is 1 otherwise 0.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.481  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1610)
22. COMMENT ON COLUMN acdCallHistoryView.agentname is 'The agent name if the agent DN is resolved 
by lookup.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.491  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1624)
22. DROP VIEW IF EXISTS acd_call_detail_view 
 {executed in 10 msec}

-----> 2020-08-14 14:09:48.494  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1626)
22. CREATE OR REPLACE VIEW acd_call_detail_view AS SELECT acd.id AS id, acd.fk_acdCall AS fk_acdcall_id, 
acd.historySeqID AS history_seq_id, acd.state AS state, acd.stateCreated AS state_created, 
acd.duration AS duration, acd.fk_acdPilot AS fk_acdpilot_id, acd.fk_acdQueue AS fk_acdqueue_id, 
acd.target AS target, acd.targetName AS target_name, acd.caller AS caller, acd.callerName AS 
caller_name, acd.agent AS agent, acd.agentName AS agent_name, acd.cucmCallID AS cucm_call_id 
FROM acdCallDetail acd 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.495  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdcalldetail' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.496  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1653)
22. COMMENT ON COLUMN acd_call_detail_view.id is 'Unique database ID (auto-increment)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.496  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1654)
22. COMMENT ON COLUMN acd_call_detail_view.fk_acdcall_id is 'Foreign key reference to acdCallView 
table id column.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.497  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1655)
22. COMMENT ON COLUMN acd_call_detail_view.history_seq_id is 'Sequence of acd call history entries.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.498  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1656)
22. COMMENT ON COLUMN acd_call_detail_view.state is 'State of acd call entry. Possible value(s): 
STATE_DISCONNECTED=-1, STATE_OFFERED =0, STATE_MAXROUTES=1, STATE_PREQUEUE=5, STATE_QUEUED=6, 
STATE_ROUTED_AGENT=7, STATE_FALLBACK=8, STATE_REROUTING=9, STATE_ROUTED=10, STATE_ROUTED_NOAGENTS=10, 
STATE_ROUTED_QUEUEFULL=11, STATE_ROUTED_EXPIRED=12, STATE_FORWARDED_EXTERN=13, STATE_TRANSFERRED=14, 
STATE_CALL_FORWARDED=15, STATE_ROUTED_BREAK_TARGET=16, STATE_CONNECTED=20, STATE_HELD=21, STATE_OUTGOING=25, 
STATE_AGENT_AVAILABLE=30, STATE_AGENT_UNAVAILABLE=31, STATE_CALLBACK_AUTOMATED_REQUEST=40, 
STATE_CALLBACK_MANUAL_REQUEST=41, STATE_ENDED=100, STATE_BUSY=101.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.498  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1657)
22. COMMENT ON COLUMN acd_call_detail_view.state_created is 'Timestamp when this ACD call state 
entry is created in APAS.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.499  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1658)
22. COMMENT ON COLUMN acd_call_detail_view.duration is 'Time in seconds the ACD call stays in this 
state. For example in state ringing it is ringing time, if state connected it is talking time.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.534  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1659)
22. COMMENT ON COLUMN acd_call_detail_view.fk_acdpilot_id is 'ID of pilot, it is a reference to 
acdPilotView table.' 
 {executed in 35 msec}

-----> 2020-08-14 14:09:48.535  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1660)
22. COMMENT ON COLUMN acd_call_detail_view.fk_acdqueue_id is 'ID of queue, it is a reference to 
acdQueueView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.535  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1661)
22. COMMENT ON COLUMN acd_call_detail_view.target is 'The current target telephone number where 
the call was routed to in this state.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.536  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1662)
22. COMMENT ON COLUMN acd_call_detail_view.target_name is 'Name of the target.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.537  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1663)
22. COMMENT ON COLUMN acd_call_detail_view.caller is 'The current caller telephone number for this 
state entry. It can be different to original caller if this entry is related to a consult/transfer.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.538  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1664)
22. COMMENT ON COLUMN acd_call_detail_view.caller_name is 'Name of the caller.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.538  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1665)
22. COMMENT ON COLUMN acd_call_detail_view.agent is 'DN of the current agent where the call was 
routed to in this state.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.539  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1666)
22. COMMENT ON COLUMN acd_call_detail_view.agent_name is 'Name of the agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.539  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1667)
22. COMMENT ON COLUMN acd_call_detail_view.cucm_call_id is 'Cisco global call ID, e.g. 123456/1.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.542  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1675)
22. DROP VIEW IF EXISTS acd_queue_view 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.637  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1677)
22. CREATE OR REPLACE VIEW acd_queue_view AS SELECT aq.id AS id, aq.name AS name, aq.description 
AS description, aq.maxCalls AS max_calls, aq.callDistribution AS call_distribution, aq.targetQueueFull 
AS target_queue_full, aq.targetNoAgents AS target_no_agents, aq.preQueueMediaID AS fk_media_prequeue_id, 
aq.queueMediaID AS fk_media_id, aq.rerouteTime AS reroute_time, aq.postCallTime AS post_call_time, 
aq.expireTime AS expire_time, aq.targetExpired AS target_expired, aq.flags AS flags, aq.slaPeriod 
AS sla_period, aq.slaCallSuccessTime AS sla_call_success_time, aq.slaLimit AS sla_limit, aq.fallbackTime 
AS fallback_time, aq.fk_acdCallTagGroup AS fk_acdcall_taggroup_id, aq.pqmrepeatcount AS pqmrepeatcount, 
aq.stats_lastupdate AS stats_lastupdate, aq.stats_waiting_time AS stats_waiting_time, aq.stats_waiting_time_min 
AS stats_waiting_time_min, aq.stats_waiting_time_max AS stats_waiting_time_max, aq.stats_active_agents_min 
AS stats_active_agents_min, aq.stats_active_agents_max AS stats_active_agents_max, aq.stats_call_count_total 
AS stats_call_count_total, aq.stats_call_count_ignored AS stats_call_count_ignored, aq.stats_call_count_missed 
AS stats_call_count_missed, aq.stats_call_count_answered AS stats_call_count_answered, aq.stats_answered_calls_value1 
AS stats_answered_calls_value1, aq.stats_answered_calls_value2 AS stats_answered_calls_value2, 
aq.stats_answered_calls_value3 AS stats_answered_calls_value3, aq.stats_answered_calls_other 
AS stats_answered_calls_other, aq.stats_wt_min_timestamp AS stats_wt_min_timestamp, aq.stats_wt_max_timestamp 
AS stats_wt_max_timestamp, aq.stats_actagents_min_timestamp AS stats_actagents_min_timestamp, 
aq.stats_actagents_max_timestamp AS stats_actagents_max_timestamp, aq.agentmissedcallaction 
AS agentmissedcallaction, aq.queuelimittype AS queuelimittype, aq.otherqueuetarget AS otherqueuetarget, 
aq.looptarget AS looptarget, aq.agentbreaktarget AS agentbreaktarget, aq.slaringsuccesstime 
AS slaringsuccesstime, aq.route_back_to_last_connected_agent AS route_back_to_last_connected_agent, 
aq.fallbackprioritystep AS fallbackprioritystep, aq.noagentprioritystep AS noagentprioritystep, 
aq.expireprioritystep AS expireprioritystep, aq.isfallbackpriorityrelative AS isfallbackpriorityrelative, 
aq.isnoagentpriorityrelative AS isnoagentpriorityrelative, aq.isexpirepriorityrelative AS isexpirepriorityrelative, 
aq.ivrnolicensetarget AS ivrnolicensetarget, aq.stats_waiting_time_vip_max AS stats_waiting_time_vip_max, 
aq.stats_wt_vip_max_timestamp AS stats_wt_vip_max_timestamp, aq.stats_waiting_time_vip_min 
AS stats_waiting_time_vip_min, aq.stats_wt_vip_min_timestamp AS stats_wt_vip_min_timestamp, 
aq.stats_cc_callback_total AS stats_cc_callback_total, aq.stats_cc_callback_automated AS stats_cc_callback_automated, 
aq.stats_cc_callback_manual AS stats_cc_callback_manual, aq.stats_cc_callback_success AS stats_cc_callback_success, 
aq.stats_cc_callback_success_ratio AS stats_cc_callback_success_ratio, aq.stats_cc_callback_attempted 
AS stats_cc_callback_attempted, aq.stats_cc_callback_attempted_ratio AS stats_cc_callback_attempted_ratio, 
aq.stats_cc_callback_new_reqs AS stats_cc_callback_new_reqs, aq.stats_cc_callback_active_reqs 
AS stats_cc_callback_active_reqs, aq.stats_cc_callback_utilization AS stats_cc_callback_utilization, 
aq.stats_cc_callback_expired_total AS stats_cc_callback_expired_total, aq.stats_cc_callback_expired_attempt_exceed 
AS stats_cc_callback_expired_attempt_exceed, aq.stats_cc_callback_expired_out_of_scope AS stats_cc_callback_expired_out_of_scope, 
aq.stats_cc_callback_waiting_time_avg AS stats_cc_callback_waiting_time_avg, aq.stats_cc_callback_waiting_time_min 
AS stats_cc_callback_waiting_time_min, aq.stats_cc_callback_waiting_time_max AS stats_cc_callback_waiting_time_max, 
aq.dir_group_id_for_vip AS dir_group_id_for_vip, aq.dir_group_fld_vip_priority AS dir_group_fld_vip_priority, 
aq.dir_group_fld_vip_reroute AS dir_group_fld_vip_reroute, aq.callback_rule_id AS callback_rule_id 
FROM acdQueue aq 
 {executed in 95 msec}

-----> 2020-08-14 14:09:48.639  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdqueue' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.640  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1765)
22. COMMENT ON COLUMN acd_queue_view.id is 'Unique ID.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.641  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1766)
22. COMMENT ON COLUMN acd_queue_view.name is 'Name of the Queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.642  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1767)
22. COMMENT ON COLUMN acd_queue_view.description is 'Description of the Queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.642  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1768)
22. COMMENT ON COLUMN acd_queue_view.max_calls is 'Queue limit value, maximum number of calls in 
the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.643  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1769)
22. COMMENT ON COLUMN acd_queue_view.call_distribution is 'Type of call distribution. Possible 
value(s): CALLDISTRIBUTION_FIRSTAVAIL=0, CALLDISTRIBUTION_FIRSTAVAILNOTBUSY=1, CALLDISTRIBUTION_LONGESTIDLE=2, 
CALLDISTRIBUTION_ROUNDROBIN=3, CALLDISTRIBUTION_ALWAYSQUEUE=4, CALLDISTRIBUTION_QUEUEDTRANSFER=5, 
CALLDISTRIBUTION_PARKQUEUE=6.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.643  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1770)
22. COMMENT ON COLUMN acd_queue_view.target_queue_full is 'Queue full target DN. The call will 
be redirected to this target if the queue is full.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.644  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1771)
22. COMMENT ON COLUMN acd_queue_view.target_no_agents is 'Fwd. No agents target DN. The call will 
be redirected to this target if the queue has no available agents.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.645  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1772)
22. COMMENT ON COLUMN acd_queue_view.fk_media_prequeue_id is 'PreQueue media ID, refers to media 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.646  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1773)
22. COMMENT ON COLUMN acd_queue_view.fk_media_id is 'Queue media ID, refers to media table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.647  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1774)
22. COMMENT ON COLUMN acd_queue_view.reroute_time is 'Reroute time in seconds.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.647  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1775)
22. COMMENT ON COLUMN acd_queue_view.post_call_time is 'Postcall time in seconds.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.648  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1776)
22. COMMENT ON COLUMN acd_queue_view.expire_time is 'Expire time in seconds.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.649  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1777)
22. COMMENT ON COLUMN acd_queue_view.target_expired is 'Expire time target DN. The call will be 
redirected to this target if the expire time exceeds in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.649  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1778)
22. COMMENT ON COLUMN acd_queue_view.flags is 'Some flags, like Queue calls during break.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.650  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1779)
22. COMMENT ON COLUMN acd_queue_view.sla_period is 'The time in minutes for the measurement interval 
to calculate service level.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.651  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1780)
22. COMMENT ON COLUMN acd_queue_view.sla_call_success_time is 'The minimum time in seconds for 
an accepted call to be counted as successful. If the call is shorter it will be ignored.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.652  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1781)
22. COMMENT ON COLUMN acd_queue_view.sla_limit is 'The minimum service level in percent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.653  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1782)
22. COMMENT ON COLUMN acd_queue_view.fallback_time is 'The time in seconds after the call will 
fall back to the agent or queue when the destination does not pickup the call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.654  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1783)
22. COMMENT ON COLUMN acd_queue_view.fk_acdcall_taggroup_id is 'The reference key to the acd_call_tag_group_view 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.655  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1785)
22. COMMENT ON COLUMN acd_queue_view.pqmrepeatcount is 'Repeat count for pre-queue media' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.655  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1786)
22. COMMENT ON COLUMN acd_queue_view.stats_lastupdate is 'Timestamp when the queue statitistics 
values are updated.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.666  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1787)
22. COMMENT ON COLUMN acd_queue_view.stats_waiting_time is 'Avarage waiting time in the queue.' 
 {executed in 11 msec}

-----> 2020-08-14 14:09:48.675  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1788)
22. COMMENT ON COLUMN acd_queue_view.stats_waiting_time_min is 'The minimum waiting time in the 
queue.' 
 {executed in 9 msec}

-----> 2020-08-14 14:09:48.676  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1789)
22. COMMENT ON COLUMN acd_queue_view.stats_waiting_time_max is 'The maximum waiting time in the 
queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.677  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1790)
22. COMMENT ON COLUMN acd_queue_view.stats_active_agents_min is 'The minimum number of active agents 
in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.677  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1791)
22. COMMENT ON COLUMN acd_queue_view.stats_active_agents_max is 'The maximum number of active agents 
in the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.678  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1792)
22. COMMENT ON COLUMN acd_queue_view.stats_call_count_total is 'Counter for the total calls' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.679  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1793)
22. COMMENT ON COLUMN acd_queue_view.stats_call_count_ignored is 'Counter for the ignored calls' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.680  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1794)
22. COMMENT ON COLUMN acd_queue_view.stats_call_count_missed is 'Counter for the missed calls. 
(either missed while queued or ringing at agent)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.681  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1795)
22. COMMENT ON COLUMN acd_queue_view.stats_call_count_answered is 'Counter for the answered calls.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.681  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1796)
22. COMMENT ON COLUMN acd_queue_view.stats_answered_calls_value1 is 'Number of answered calls where 
ringing time < 10s.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.682  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1797)
22. COMMENT ON COLUMN acd_queue_view.stats_answered_calls_value2 is 'Number of answered calls where 
ringing time < 20s.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.682  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1798)
22. COMMENT ON COLUMN acd_queue_view.stats_answered_calls_value3 is 'Number of answered calls where 
ringing time < 30s.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.690  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1799)
22. COMMENT ON COLUMN acd_queue_view.stats_answered_calls_other is 'Number of answered calls where 
ringing time > 30s.' 
 {executed in 8 msec}

-----> 2020-08-14 14:09:48.690  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1800)
22. COMMENT ON COLUMN acd_queue_view.stats_wt_min_timestamp is 'The timestamp when the minimum 
waiting time is reached.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.691  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1801)
22. COMMENT ON COLUMN acd_queue_view.stats_wt_max_timestamp is 'The timestamp when the maximum 
waiting time is reached.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.692  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1802)
22. COMMENT ON COLUMN acd_queue_view.stats_actagents_min_timestamp is 'The timestamp when the minimum 
number of active agents is reached.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.693  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1803)
22. COMMENT ON COLUMN acd_queue_view.stats_actagents_max_timestamp is 'The timestamp when the maximum 
number of active agents is reached.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.694  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1804)
22. COMMENT ON COLUMN acd_queue_view.agentmissedcallaction is 'The agent status which is set when 
an agent has a missed call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.694  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1805)
22. COMMENT ON COLUMN acd_queue_view.queuelimittype is 'The type of the queue limit (0 = No Limit; 
1 = Max Calls; 2 = Calls per Agent; 3 = Max Waiting Time)' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.695  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1806)
22. COMMENT ON COLUMN acd_queue_view.otherqueuetarget is 'Other queue target. If the call was already 
forwarded from a different queue then use this target instead of the queue full or no agent 
target.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.695  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1807)
22. COMMENT ON COLUMN acd_queue_view.looptarget is 'It is not used any more.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.696  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1808)
22. COMMENT ON COLUMN acd_queue_view.agentbreaktarget is 'Break Target. When at least an agent 
is in break and all others are unavailable then calls will be forwarded to this extension.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.697  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1809)
22. COMMENT ON COLUMN acd_queue_view.slaringsuccesstime is 'The minimum ringing time in seconds 
for an accepted call to be counted as successful.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.697  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1810)
22. COMMENT ON COLUMN acd_queue_view.route_back_to_last_connected_agent is 'If true then Route 
back to last connected agent feature is enabled.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.698  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1811)
22. COMMENT ON COLUMN acd_queue_view.fallbackprioritystep is 'This enables to change the priority 
for fallback calls.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.699  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1812)
22. COMMENT ON COLUMN acd_queue_view.noagentprioritystep is 'This enables to change the priority 
for forwarded calls if there is no agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.701  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1813)
22. COMMENT ON COLUMN acd_queue_view.expireprioritystep is 'This enables to change the priority 
for expired calls.' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.701  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1814)
22. COMMENT ON COLUMN acd_queue_view.isfallbackpriorityrelative is 'If true then the fallback priority 
is a relative value.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.702  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1815)
22. COMMENT ON COLUMN acd_queue_view.isnoagentpriorityrelative is 'If true then the Fw. No Agent 
priority is a relative value.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.703  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1816)
22. COMMENT ON COLUMN acd_queue_view.isexpirepriorityrelative is 'If true then the expired priority 
is a relative value.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.704  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1817)
22. COMMENT ON COLUMN acd_queue_view.ivrnolicensetarget is 'The target when no valid IVR license 
installed.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.704  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1818)
22. COMMENT ON COLUMN acd_queue_view.stats_waiting_time_vip_max is 'The maximum waiting time in 
the queue for VIP calls.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.705  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1819)
22. COMMENT ON COLUMN acd_queue_view.stats_wt_vip_max_timestamp is 'The timestamp when the maximum 
waiting time is reached for VIP calls.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.706  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1820)
22. COMMENT ON COLUMN acd_queue_view.stats_waiting_time_vip_min is 'The maximum waiting time in 
the queue for VIP calls.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.706  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1821)
22. COMMENT ON COLUMN acd_queue_view.stats_wt_vip_min_timestamp is 'The timestamp when the minimum 
waiting time is reached for VIP calls.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.707  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1822)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_total is 'Number of the total CC callback 
requests.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.707  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1823)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_automated is 'Number of the automated CC 
callback requests.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.708  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1824)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_manual is 'Number of the manual CC callback 
requests.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.709  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1825)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_success is 'Number of those CC callback 
requests which were successfully called back and answered.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.709  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1826)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_success_ratio is 'The CC callback success 
ratio in percentage (how many were successfully called back vs. how many were there in total).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.710  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1827)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_attempted is 'Number of the callback attempts 
when the agent makes a callback.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.710  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1828)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_attempted_ratio is 'The CC callback attempted 
ratio in percentage (how many successful vs attempted callback).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.711  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1829)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_new_reqs is 'Number of the current new CC 
callback requests without any callback attempts.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.712  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1830)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_active_reqs is 'Number of the current active 
CC callback requests with at least one callback attempt' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.713  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1831)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_utilization is 'CC Callback utilization 
in percentage: New Requests / (Active Requests + New Requests)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.714  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1832)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_expired_total is 'The total number of those 
callback entries which are expired.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.715  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1833)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_expired_attempt_exceed is 'The number of 
callback entries which are expired due to too many attempts (attempt exceeded).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.715  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1834)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_expired_out_of_scope is 'The number of callback 
entries which are expired due to the display duration.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.716  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1835)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_waiting_time_avg is 'The avarage waiting 
time the for a callback attempt. The time which elapsed between the request creation and the 
first callback attempt.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.717  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1836)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_waiting_time_min is 'The minimum waiting 
time the for a callback attempt. The time which elapsed between the request creation and the 
first callback attempt.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.718  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1837)
22. COMMENT ON COLUMN acd_queue_view.stats_cc_callback_waiting_time_max is 'The maximum waiting 
time the for a callback attempt. The time which elapsed between the request creation and the 
first callback attempt.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.718  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1838)
22. COMMENT ON COLUMN acd_queue_view.dir_group_id_for_vip is 'Directory Group ID used for VIP call 
lookup.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.719  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1839)
22. COMMENT ON COLUMN acd_queue_view.dir_group_fld_vip_priority is 'Directory field name for priority 
in case of VIP calls.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.719  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1840)
22. COMMENT ON COLUMN acd_queue_view.dir_group_fld_vip_reroute is 'Directory field name for rerouting 
in case VIP calls.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.720  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1841)
22. COMMENT ON COLUMN acd_queue_view.callback_rule_id is 'Callback Rule ID used for Call Center 
Callback feature.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.735  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1849)
22. DROP VIEW IF EXISTS acd_pilot_view 
 {executed in 15 msec}

-----> 2020-08-14 14:09:48.737  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1851)
22. CREATE OR REPLACE VIEW acd_pilot_view AS SELECT ap.id AS id, ap.name AS name, ap.description 
AS description, ap.DN AS dn FROM acdPilot ap 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.738  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdpilot' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.739  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1867)
22. COMMENT ON COLUMN acd_pilot_view.id is 'Unique ID of the pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.740  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1868)
22. COMMENT ON COLUMN acd_pilot_view.name is 'Name of the pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.741  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1869)
22. COMMENT ON COLUMN acd_pilot_view.description is 'Description of the pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.741  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1870)
22. COMMENT ON COLUMN acd_pilot_view.dn is 'DN of the CTI RP (Pilot DN).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.742  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1877)
22. DROP VIEW IF EXISTS acd_pilot_queue_view 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.745  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1879)
22. CREATE OR REPLACE VIEW acd_pilot_queue_view AS SELECT ap.pilotID AS fk_acdpilot_id, ap.id AS 
id, ap.scheduleID AS fk_schedule_id, ap.queueID AS fk_acdqueue_id, ap.color AS color FROM acdPilotQueue 
ap 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.746  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdpilotqueue' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.746  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1896)
22. COMMENT ON COLUMN acd_pilot_queue_view.fk_acdpilot_id is 'Reference to acdPilotView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.750  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1897)
22. COMMENT ON COLUMN acd_pilot_queue_view.id is 'Order of queues in the pilot, incremented value 
from zero.' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.769  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1898)
22. COMMENT ON COLUMN acd_pilot_queue_view.fk_schedule_id is 'Reference to schedule table.' 
 {executed in 19 msec}

-----> 2020-08-14 14:09:48.769  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1899)
22. COMMENT ON COLUMN acd_pilot_queue_view.fk_acdqueue_id is 'Reference to acdQueueView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.770  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1900)
22. COMMENT ON COLUMN acd_pilot_queue_view.color is 'Color definition for the given queue in the 
pilot.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.772  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1907)
22. DROP VIEW IF EXISTS acd_agent_view 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.774  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1909)
22. CREATE OR REPLACE VIEW acd_agent_view AS SELECT a.id AS id, a.queueID AS fk_acdqueue_id, a.priority 
AS priority, a.DN AS dn, a.available AS available, a.skill AS skill, a.stats_lastUpdate AS 
stats_last_update, a.stats_calls_total AS stats_calls_total, a.stats_calls_missed AS stats_calls_missed, 
a.stats_service_level AS stats_service_level, a.stats_talking_time AS stats_talking_time, a.stats_onhold_time 
AS stats_onhold_time, a.stats_wrapup_time AS stats_wrapup_time, a.stats_idle_time AS stats_idle_time, 
a.stats_call_duration_avg AS stats_call_duration_avg, a.stats_ring_duration_avg AS stats_ring_duration_avg, 
a.stats_occupancy AS stats_occupancy, a.isPrimaryQueue AS is_primary_queue, a.lastStateChangesID 
AS last_state_changes_id, a.lastStateChangesTime AS last_state_changes_time, a.callback_enabled 
AS callback_enabled FROM acdAgent a 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.775  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdagent' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.775  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1942)
22. COMMENT ON COLUMN acd_agent_view.id is 'Unique database ID (auto-increment)' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.776  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1943)
22. COMMENT ON COLUMN acd_agent_view.fk_acdqueue_id is 'ID of the queue, it is a reference to acdQueueView.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.777  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1944)
22. COMMENT ON COLUMN acd_agent_view.priority is 'Order of the agent in the queue. It refers to 
acdAgentView table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.777  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1945)
22. COMMENT ON COLUMN acd_agent_view.available is 'Agent availability, it refers to acdAgentView 
table. Possible value(s): Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.778  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1946)
22. COMMENT ON COLUMN acd_agent_view.dn is 'DN of the agent. It refers to acdAgentView table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.778  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1947)
22. COMMENT ON COLUMN acd_agent_view.skill is 'Agent skill, it refers to acdAgentView table. Possible 
values from 0 to 9.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.848  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1948)
22. COMMENT ON COLUMN acd_agent_view.stats_last_update is 'Datetime when last agent statistics 
values are last updated.' 
 {executed in 70 msec}

-----> 2020-08-14 14:09:48.849  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1949)
22. COMMENT ON COLUMN acd_agent_view.stats_calls_total is 'Total amount of calls of this agent 
(daily information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.851  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1950)
22. COMMENT ON COLUMN acd_agent_view.stats_calls_missed is 'Total amount of missed calls of agent 
(daily information).' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.852  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1951)
22. COMMENT ON COLUMN acd_agent_view.stats_service_level is 'Service level of agent (daily information)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.853  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1952)
22. COMMENT ON COLUMN acd_agent_view.stats_talking_time is 'Total talking time of this agent (daily 
information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.854  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1953)
22. COMMENT ON COLUMN acd_agent_view.stats_onhold_time is 'Total hold time for this agent (daily 
information)' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.854  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1954)
22. COMMENT ON COLUMN acd_agent_view.stats_wrapup_time is 'Total postcall (wrap up) time for this 
agent (daily information).' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.855  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1955)
22. COMMENT ON COLUMN acd_agent_view.stats_idle_time is 'Total idle time for this agent (daily 
information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.856  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1956)
22. COMMENT ON COLUMN acd_agent_view.stats_call_duration_avg is 'Average of the call duration (daily 
information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.857  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1957)
22. COMMENT ON COLUMN acd_agent_view.stats_ring_duration_avg is 'Average of the call ringing (daily 
information).' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.858  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1958)
22. COMMENT ON COLUMN acd_agent_view.stats_occupancy is 'Calculated value from other statistics 
column.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.859  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1959)
22. COMMENT ON COLUMN acd_agent_view.is_primary_queue is 'If agent is primary in the queue then 
this value is 1 otherwise 0.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.859  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1960)
22. COMMENT ON COLUMN acd_agent_view.last_state_changes_id is 'The reference key to the acd_agent_status_view 
which contains the information about the last agent status changes.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.860  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1961)
22. COMMENT ON COLUMN acd_agent_view.last_state_changes_time is 'The timestamp when was the last 
agent status changes.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.861  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1962)
22. COMMENT ON COLUMN acd_agent_view.callback_enabled is 'If true then agent is enabled to use 
Call Center Callback feature. It refers to acdAgentView table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.863  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1969)
22. DROP VIEW IF EXISTS acd_agent_status_view 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.866  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:1971)
22. CREATE OR REPLACE VIEW acd_agent_status_view AS SELECT a.id AS status_id, a.fk_acdQueue AS 
fk_acdqueue_id, a.agent AS agent, a.startTime AS start_time, a.fromState AS from_state, a.toState 
AS to_state, a.duration AS duration, a.agentName AS agent_name, a.all_agents_count AS all_agents_count, 
a.logged_in_agents_count AS logged_in_agents_count, a.available_agents_count AS available_agents_count, 
a.postcall_agents_count AS postcall_agents_count, a.break_agents_count AS break_agents_count, 
a.unavailable_agents_count AS unavailable_agents_count, a.disabled_agents_count AS disabled_agents_count, 
a.busy_agents_count AS busy_agents_count, a.offwork_agents_count AS offwork_agents_count FROM 
acdAgentStatus a 
 {executed in 3 msec}

-----> 2020-08-14 14:09:48.867  com.andtek.andphone.utils.ModuleDBUtils.loadComments(ModuleDBUtils.java:428)
22. select a.attname as column, d.description from pg_description d, pg_class c, pg_attribute a 
where d.objoid=c.oid and d.objoid=a.attrelid and a.attnum=d.objsubid and c.relname='acdagentstatus' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.868  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2000)
22. COMMENT ON COLUMN acd_agent_status_view.status_id is 'Primary key column for this view table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.869  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2001)
22. COMMENT ON COLUMN acd_agent_status_view.fk_acdqueue_id is 'Foreign key reference to acdQueueView.id' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.869  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2002)
22. COMMENT ON COLUMN acd_agent_status_view.agent is 'DN of the agent.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.870  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2003)
22. COMMENT ON COLUMN acd_agent_status_view.start_time is 'Timestamp when agent state is changed 
to other state' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.870  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2004)
22. COMMENT ON COLUMN acd_agent_status_view.from_state is 'Old availability state of agent. Possible 
value(s): Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.871  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2005)
22. COMMENT ON COLUMN acd_agent_status_view.to_state is 'New availability state of agent. Possible 
value(s): Active=0, Inactive=1, Break=2, Postcall=3, Disabled=4, OffWork=5.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.872  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2006)
22. COMMENT ON COLUMN acd_agent_status_view.duration is 'Time in seconds, how long the agent stays 
in this state.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.873  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2007)
22. COMMENT ON COLUMN acd_agent_status_view.agent_name is 'The name of the agent. It is provided 
by active desktop client or gathered by lookup.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.874  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2008)
22. COMMENT ON COLUMN acd_agent_status_view.all_agents_count is 'The actual number of all agents 
in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.874  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2009)
22. COMMENT ON COLUMN acd_agent_status_view.logged_in_agents_count is 'The actual number of logged 
in agents in the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.875  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2010)
22. COMMENT ON COLUMN acd_agent_status_view.available_agents_count is 'The actual number of available 
agents in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.875  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2011)
22. COMMENT ON COLUMN acd_agent_status_view.postcall_agents_count is 'The actual number of agents 
in post-processing state in the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.876  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2012)
22. COMMENT ON COLUMN acd_agent_status_view.break_agents_count is 'The actual number of agents 
in break state in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.876  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2013)
22. COMMENT ON COLUMN acd_agent_status_view.unavailable_agents_count is 'The actual number of unavailable 
agents in the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.877  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2014)
22. COMMENT ON COLUMN acd_agent_status_view.disabled_agents_count is 'The actual number of disabled 
agents in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.878  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2015)
22. COMMENT ON COLUMN acd_agent_status_view.busy_agents_count is 'The actual number of busy agents 
in the queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.878  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2016)
22. COMMENT ON COLUMN acd_agent_status_view.offwork_agents_count is 'The actual number of agents 
in off-work state in the queue.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.879  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2024)
22. DROP VIEW IF EXISTS acd_call_classification_view 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.881  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2026)
22. CREATE OR REPLACE VIEW acd_call_classification_view AS SELECT id AS id, fk_acdCall AS fk_acd_call_id, 
queueID AS queue_id, agentDn AS agent_dn, created AS created FROM acdCallClassification 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.881  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2040)
22. COMMENT ON COLUMN acd_call_classification_view.id is 'Primary key for this view table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.882  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2041)
22. COMMENT ON COLUMN acd_call_classification_view.fk_acd_call_id is 'The reference key to the 
acd_call_view table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.883  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2042)
22. COMMENT ON COLUMN acd_call_classification_view.queue_id is 'The reference key to the acd_queue_view 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.884  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2043)
22. COMMENT ON COLUMN acd_call_classification_view.agent_dn is 'The agent telephone number' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.884  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2044)
22. COMMENT ON COLUMN acd_call_classification_view.created is 'The timestamp when this entry is 
created.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.885  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2051)
22. DROP VIEW IF EXISTS acd_call_classification_2_tag_view 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.887  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2053)
22. CREATE OR REPLACE VIEW acd_call_classification_2_tag_view AS SELECT id AS id, fk_acdCallClassification 
AS fk_acd_call_classification_id, fk_acdCallTag AS fk_acd_call_tag_id FROM acdCallClassification2Tag 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.897  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2065)
22. COMMENT ON COLUMN acd_call_classification_2_tag_view.id is 'Primary key of this view table.' 
 {executed in 10 msec}

-----> 2020-08-14 14:09:48.901  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2066)
22. COMMENT ON COLUMN acd_pilot_view.fk_acd_call_classification_id is 'The reference key to the 
acd_call_classification_view table.' 
 {FAILED after 3 msec}

org.postgresql.util.PSQLException: ERROR: column "fk_acd_call_classification_id" of relation "acd_pilot_view" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2578) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2313) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:331) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:448) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:369) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:310) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:296) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:273) ~[postgresql-jdbc.jar:42.2.11]
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:268) ~[postgresql-jdbc.jar:42.2.11]
	at net.sf.log4jdbc.StatementSpy.execute(StatementSpy.java:842) [log4jdbc4-1.2.jar:?]
	at com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2066) [classes/:?]
	at com.andtek.andphone.utils.ModuleDBUtils.createDB(ModuleDBUtils.java:977) [classes/:?]
	at com.andtek.andphone.JTAPIThread.loadConfig(JTAPIThread.java:3597) [classes/:?]
	at com.andtek.andphone.JTAPIThread.run(JTAPIThread.java:364) [classes/:?]
-----> 2020-08-14 14:09:48.904  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2075)
22. DROP VIEW IF EXISTS acd_call_tag_view 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.906  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2077)
22. CREATE OR REPLACE VIEW acd_call_tag_view AS SELECT id AS id, fk_tagGroup AS fk_tag_group_id, 
customId AS custom_id,name AS name, shortDescription AS short_description,longDescription AS 
long_description, defaultProperty AS default_property, active AS active FROM acdCallTag 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.907  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2094)
22. COMMENT ON COLUMN acd_call_tag_view.id is 'Primary key of this vew table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.908  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2095)
22. COMMENT ON COLUMN acd_call_tag_view.fk_tag_group_id is 'The reference key to the acd_call_tag_group_view 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.908  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2096)
22. COMMENT ON COLUMN acd_call_tag_view.custom_id is 'The custom identifier for the tag entry. 
It is displayed for the agent when she classifies a call.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.909  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2097)
22. COMMENT ON COLUMN acd_call_tag_view.name is 'The name of the tag entry. It is displayed for 
the agent when she classifies a call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.910  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2098)
22. COMMENT ON COLUMN acd_call_tag_view.short_description is 'The short description of the tag 
entry.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.910  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2099)
22. COMMENT ON COLUMN acd_call_tag_view.long_description is 'The long description of the tag entry.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.911  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2100)
22. COMMENT ON COLUMN acd_call_tag_view.default_property is 'If a tag is set as default in the 
tag group then the value is 1 otherwise 0.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:48.911  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2101)
22. COMMENT ON COLUMN acd_call_tag_view.active is 'If a tag entry is enabled then the value is 
1 otherwise 0.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:48.925  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2108)
22. DROP VIEW IF EXISTS acd_call_tag_group_view 
 {executed in 14 msec}

-----> 2020-08-14 14:09:48.954  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2110)
22. CREATE OR REPLACE VIEW acd_call_tag_group_view AS SELECT id AS id, name AS name, description 
AS description FROM acdCallTagGroup 
 {executed in 29 msec}

-----> 2020-08-14 14:09:48.959  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2122)
22. COMMENT ON COLUMN acd_call_tag_group_view.id is 'Primary key of this view table.' 
 {executed in 5 msec}

-----> 2020-08-14 14:09:48.961  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2123)
22. COMMENT ON COLUMN acd_call_tag_group_view.name is 'The name of the tag group' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:48.967  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2124)
22. COMMENT ON COLUMN acd_call_tag_group_view.description is 'The description of the tag group.' 
 {executed in 6 msec}

-----> 2020-08-14 14:09:48.979  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2131)
22. DROP VIEW IF EXISTS acd_agent_skill_history_view 
 {executed in 11 msec}

-----> 2020-08-14 14:09:49.005  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2133)
22. CREATE OR REPLACE VIEW acd_agent_skill_history_view AS SELECT a.id AS id, a.fk_acdQueue AS 
fk_acdqueue_id, a.agent AS agent, a.change_time AS change_time, a.from_skill AS from_skill, 
a.to_skill AS to_skill, a.agent_name AS agent_name FROM acd_agent_skill_history a 
 {executed in 26 msec}

-----> 2020-08-14 14:09:49.008  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2149)
22. COMMENT ON COLUMN acd_agent_skill_history_view.id is 'Unique database ID (auto-increment)' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:49.010  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2150)
22. COMMENT ON COLUMN acd_agent_skill_history_view.fk_acdqueue_id is 'Foreign key reference to 
the acd_queue_view.id' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:49.013  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2151)
22. COMMENT ON COLUMN acd_agent_skill_history_view.agent is 'Agent telephone number' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:49.016  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2152)
22. COMMENT ON COLUMN acd_agent_skill_history_view.change_time is 'The timestamp when the skill 
is changed.' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:49.017  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2153)
22. COMMENT ON COLUMN acd_agent_skill_history_view.from_skill is 'The previous skill value' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.021  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2154)
22. COMMENT ON COLUMN acd_agent_skill_history_view.to_skill is 'The new skill value' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:49.022  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2155)
22. COMMENT ON COLUMN acd_agent_skill_history_view.agent_name is 'The name of the agent configured 
on the CUCM Line' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.027  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2162)
22. DROP VIEW IF EXISTS acd_callback_requests_view 
 {executed in 5 msec}

-----> 2020-08-14 14:09:49.045  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2164)
22. CREATE OR REPLACE VIEW acd_callback_requests_view AS SELECT acr.* FROM acd_callback_requests 
acr 
 {executed in 18 msec}

-----> 2020-08-14 14:09:49.046  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2174)
22. COMMENT ON COLUMN acd_callback_requests_view.id is 'Primary key of this view table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.047  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2175)
22. COMMENT ON COLUMN acd_callback_requests_view.creation_time is 'The timestamp when the callback 
request entry is created.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.048  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2176)
22. COMMENT ON COLUMN acd_callback_requests_view.callback_number is 'The calling number who created 
the callback request.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.048  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2177)
22. COMMENT ON COLUMN acd_callback_requests_view.queue_id is 'The reference key to the acd_queue_view 
table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.049  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2178)
22. COMMENT ON COLUMN acd_callback_requests_view.pilot_id is 'The reference key to the acd_pilot_view 
table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.050  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2179)
22. COMMENT ON COLUMN acd_callback_requests_view.status is 'The status information about the callback 
request. The possible values: new_request, in_progress, callback_attempted' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.050  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2180)
22. COMMENT ON COLUMN acd_callback_requests_view.creation_mode is 'The creation mode shows how 
the callback request entry is created: automated or manual' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.052  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2181)
22. COMMENT ON COLUMN acd_callback_requests_view.creation_cause is 'The cause of the callback request 
creation. The possible values: prequeue, queue, ringing, novalid_routing, ivr, other' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.052  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2182)
22. COMMENT ON COLUMN acd_callback_requests_view.creation_acdcall_id is 'The reference key to the 
acd_call_view table. The ACD call ID which created the callback request.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.053  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2183)
22. COMMENT ON COLUMN acd_callback_requests_view.success_acdcall_id is 'The reference key to the 
acd_call_view table. The ACD call ID for the successful callback call where the called party 
answers the call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.053  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2184)
22. COMMENT ON COLUMN acd_callback_requests_view.request_count is 'The counter for the incoming 
callback request. If the same caller in the same queue creates more than one requests then 
this counter is incremented.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.054  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2185)
22. COMMENT ON COLUMN acd_callback_requests_view.attempt_count is 'The counter for the outgoing 
callback attempts when the called party does not answer the call that is initiated by the agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.055  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2186)
22. COMMENT ON COLUMN acd_callback_requests_view.last_request_time is 'The timestamp when is the 
last incoming callback request for the same caller in the same queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.055  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2187)
22. COMMENT ON COLUMN acd_callback_requests_view.last_attempt_time is 'The timestamp when is the 
last outgoing callback attempt that is initiated by the agent.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.056  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2188)
22. COMMENT ON COLUMN acd_callback_requests_view.first_attempt_time is 'The timestamp when is the 
first outgoing callback attempt that is initiated by the agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.057  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2189)
22. COMMENT ON COLUMN acd_callback_requests_view.last_success_time is 'The timestamp when is the 
last successful outgoing callback call where the called party answers the call.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.057  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2190)
22. COMMENT ON COLUMN acd_callback_requests_view.callback_name is 'The name of the calling party 
who creates the callback request. It may empty if unable to lookup.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.058  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2191)
22. COMMENT ON COLUMN acd_callback_requests_view.marked_for_history is 'It is true if the entry 
is marked for history. In that case then entry will be moved to the history table. We need 
the history for reporting purpose.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.070  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2199)
22. DROP VIEW IF EXISTS acd_callback_requests_history_view 
 {executed in 12 msec}

-----> 2020-08-14 14:09:49.073  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2201)
22. CREATE OR REPLACE VIEW acd_callback_requests_history_view AS SELECT acr.* FROM acd_callback_requests_history 
acr 
 {executed in 3 msec}

-----> 2020-08-14 14:09:49.074  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2211)
22. COMMENT ON COLUMN acd_callback_requests_history_view.id is 'Primary key of this view table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.074  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2212)
22. COMMENT ON COLUMN acd_callback_requests_history_view.creation_time is 'The timestamp when the 
callback request entry is created.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.075  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2213)
22. COMMENT ON COLUMN acd_callback_requests_history_view.callback_number is 'The calling number 
who created the callback request.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.075  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2214)
22. COMMENT ON COLUMN acd_callback_requests_history_view.queue_id is 'The reference key to the 
acd_queue_view table.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.076  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2215)
22. COMMENT ON COLUMN acd_callback_requests_history_view.pilot_id is 'The reference key to the 
acd_pilot_view table.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.077  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2216)
22. COMMENT ON COLUMN acd_callback_requests_history_view.status is 'The status information about 
the callback request. The possible values: deleted_cause_active_expired, deleted_cause_manual, 
deleted_cause_success_by_caller, deleted_cause_success_by_agent, deleted_cause_attempt_exceed' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.077  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2217)
22. COMMENT ON COLUMN acd_callback_requests_history_view.creation_mode is 'The creation mode shows 
how the callback request entry is created: automated or manual' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.078  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2218)
22. COMMENT ON COLUMN acd_callback_requests_history_view.creation_cause is 'The cause of the callback 
request creation. The possible values: prequeue, queue, ringing, novalid_routing, ivr, other' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.079  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2219)
22. COMMENT ON COLUMN acd_callback_requests_history_view.creation_acdcall_id is 'The reference 
key to the acd_call_view table. The ACD call ID which created the callback request.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.079  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2220)
22. COMMENT ON COLUMN acd_callback_requests_history_view.success_acdcall_id is 'The reference key 
to the acd_call_view table. The ACD call ID for the successful callback call where the called 
party answers the call.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.080  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2221)
22. COMMENT ON COLUMN acd_callback_requests_history_view.request_count is 'The counter for the 
incoming callback request. If the same caller in the same queue creates more than one requests 
then this counter is incremented.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.081  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2222)
22. COMMENT ON COLUMN acd_callback_requests_history_view.attempt_count is 'The counter for the 
outgoing callback attempts when the called party does not answer the call that is initiated 
by the agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.082  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2223)
22. COMMENT ON COLUMN acd_callback_requests_history_view.last_request_time is 'The timestamp when 
is the last incoming callback request for the same caller in the same queue.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.082  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2224)
22. COMMENT ON COLUMN acd_callback_requests_history_view.last_attempt_time is 'The timestamp when 
is the last outgoing callback attempt that is initiated by the agent.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.083  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2225)
22. COMMENT ON COLUMN acd_callback_requests_history_view.first_attempt_time is 'The timestamp when 
is the first outgoing callback attempt that is initiated by the agent.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.083  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2226)
22. COMMENT ON COLUMN acd_callback_requests_history_view.last_success_time is 'The timestamp when 
is the last successful outgoing callback call where the called party answers the call.' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.084  com.andtek.andphone.partner.acd.ModuleDB.create(ModuleDB.java:2227)
22. COMMENT ON COLUMN acd_callback_requests_history_view.callback_name is 'The name of the calling 
party who creates the callback request. It may empty if unable to lookup.' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.086  com.andtek.andphone.directory.Module.getAsciiDirectoryIDs(Module.java:290)
35. SELECT id FROM directories WHERE type='2' AND hide='0' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:49.086  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
36. SELECT val FROM config WHERE module='global' AND param='reportingDBPassword' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.087  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
37. UPDATE config SET val='' WHERE module='global' AND param='reportingDBPassword' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.120  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_deleteMsgAfterRead' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.120  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_fetch_period' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.121  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_Out_server' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.121  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_Out_username' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.121  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_Out_password' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.122  com.andtek.andphone.inout.ModuleDB.InsertConfig(ModuleDB.java:49)
22. SELECT val FROM config WHERE module='inout' AND param='Mapping_SMTP_Out_sender' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.399  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE settings_webuser VALIDATE CONSTRAINT settings_webuser_timezone_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.400  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE settings_webuser VALIDATE CONSTRAINT settings_webuser_user_uid_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.409  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE tab_panel VALIDATE CONSTRAINT tab_panel_layout_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.409  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE tab_panel VALIDATE CONSTRAINT tab_panel_settings_webuser_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.418  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE portlet VALIDATE CONSTRAINT portlet_portlet_type_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.419  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE portlet VALIDATE CONSTRAINT portlet_tab_panel_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.428  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE settings_portlet_images_has_portlet VALIDATE CONSTRAINT settings_portlet_images_has_portlet_image_size_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.428  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE settings_portlet_images_has_portlet VALIDATE CONSTRAINT settings_portlet_images_has_portlet_portlet_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.429  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE settings_portlet_images_has_portlet VALIDATE CONSTRAINT settings_portlet_images_hp_settings_portlet_images_id_fkey 
 {executed in 1 msec}

-----> 2020-08-14 14:09:49.438  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE portlet_has_settings_portlet_text VALIDATE CONSTRAINT portlet_has_settings_portlet_text_portlet_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.438  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE portlet_has_settings_portlet_text VALIDATE CONSTRAINT portlet_has_settings_portlet_text_settings_portlet_text_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:49.439  com.andtek.andphone.utils.ModuleDBUtils.validateForeignKey(ModuleDBUtils.java:517)
22. ALTER TABLE portlet_has_settings_portlet_text VALIDATE CONSTRAINT portlet_has_settings_portlet_text_text_size_id_fkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.299  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
38. SELECT val FROM config WHERE module='global' AND param='version' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.300  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
39. UPDATE config SET val='6230' WHERE module='global' AND param='version' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.390  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
40. SELECT val FROM config WHERE module='recorder' AND param='MaxCalls' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.392  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
41. UPDATE config SET val='1000' WHERE module='recorder' AND param='MaxCalls' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.396  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.406  com.andtek.andphone.partner.PDevice.removeAll(PDevice.java:635)
26. TRUNCATE pdevices; 
 {executed in 7 msec}

-----> 2020-08-14 14:09:53.409  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.411  com.andtek.andphone.global.servers.GenericServer.load(GenericServer.java:435)
27. SELECT * FROM servers ORDER BY serverName 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.412  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.415  com.andtek.andphone.global.servers.GenericServer.load(GenericServer.java:457)
20. SELECT * FROM servers_attrs WHERE serverID=4 ORDER BY name 
 {executed in 3 msec}

-----> 2020-08-14 14:09:53.417  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.419  com.andtek.andphone.global.servers.GenericServer.load(GenericServer.java:457)
21. SELECT * FROM servers_attrs WHERE serverID=2 ORDER BY name 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.420  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.421  com.andtek.andphone.global.servers.GenericServer.load(GenericServer.java:457)
22. SELECT * FROM servers_attrs WHERE serverID=1 ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.429  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.431  com.andtek.andphone.global.servers.GenericServer.load(GenericServer.java:457)
23. SELECT * FROM servers_attrs WHERE serverID=3 ORDER BY name 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.551  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.552  com.andtek.andphone.global.servers.ServerGroup.load(ServerGroup.java:120)
24. SELECT * FROM servergroup ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.556  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 3 msec}

-----> 2020-08-14 14:09:53.557  com.andtek.andphone.global.servers.ServerGroup.load(ServerGroup.java:131)
25. SELECT * FROM servergroup_members WHERE gid=4 ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.569  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 5 msec}

-----> 2020-08-14 14:09:53.570  com.andtek.andphone.global.servers.ServerGroup.load(ServerGroup.java:131)
26. SELECT * FROM servergroup_members WHERE gid=1 ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.576  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 4 msec}

-----> 2020-08-14 14:09:53.576  com.andtek.andphone.global.servers.ServerGroup.load(ServerGroup.java:131)
27. SELECT * FROM servergroup_members WHERE gid=2 ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.577  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.578  com.andtek.andphone.global.servers.ServerGroup.load(ServerGroup.java:131)
20. SELECT * FROM servergroup_members WHERE gid=3 ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.698  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.701  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
21. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:53.853  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:53.863  com.andtek.andphone.JTAPIThread.initializeGroupModule(JTAPIThread.java:3803)
22. SELECT id, groupname, description, groupsize, accdelay, accRepeats, accRepeatsDelay, numDigits, 
popup, customsize, customrow, customcol, enableOnPhones, enableOnClients FROM pgroup ORDER 
BY id 
 {executed in 9 msec}

-----> 2020-08-14 14:09:53.864  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:53.887  com.andtek.andphone.blacklist.Blacklist.getBlacklists(Blacklist.java:528)
23. SELECT id FROM Blacklist 
 {executed in 22 msec}

-----> 2020-08-14 14:09:54.028  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
42. SELECT val FROM config WHERE module='global' AND param='AXLCaches' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.030  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
43. UPDATE config SET val='false' WHERE module='global' AND param='AXLCaches' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.030  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
44. SELECT val FROM config WHERE module='global' AND param='MailboxRingTone' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.032  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
45. UPDATE config SET val='CallBack.raw' WHERE module='global' AND param='MailboxRingTone' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:54.032  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
46. SELECT val FROM config WHERE module='global' AND param='SSOEnabled' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.033  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
47. UPDATE config SET val='false' WHERE module='global' AND param='SSOEnabled' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.035  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.036  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:102)
24. SELECT * FROM generic_profiles ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.038  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.067  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
25. SELECT * FROM generic_profiles_configparams WHERE profileID=1 ORDER BY name 
 {executed in 29 msec}

-----> 2020-08-14 14:09:54.069  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.070  com.andtek.andphone.communicator.CommunicatorProfile.loadAttributes(CommunicatorProfile.java:184)
26. SELECT * FROM desktop_profiles WHERE profileID=1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.075  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.076  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:102)
27. SELECT * FROM generic_profiles ORDER BY name 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.076  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.077  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
20. SELECT * FROM generic_profiles_configparams WHERE profileID=1 ORDER BY name 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.080  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.080  com.andtek.andphone.communicator.CommunicatorProfile.loadAttributes(CommunicatorProfile.java:184)
21. SELECT * FROM desktop_profiles WHERE profileID=1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.084  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.085  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
22. SELECT * FROM generic_profiles_configparams WHERE profileID=3 ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.085  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.102  com.andtek.andphone.web.webattendant.dao.AttendantProfileDao.get(AttendantProfileDao.java:27)
23. SELECT * FROM attendant_profiles WHERE profileID=3 
 {executed in 17 msec}

-----> 2020-08-14 14:09:54.107  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.108  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
24. SELECT * FROM generic_profiles_configparams WHERE profileID=2 ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.108  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.121  com.andtek.andphone.web.webclient.dao.WebUserDao.getWebUserProfile(WebUserDao.java:1369)
25. SELECT * FROM webuser_profiles WHERE profileID = 2 
 {executed in 12 msec}

-----> 2020-08-14 14:09:54.121  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.122  com.andtek.andphone.web.webclient.dao.WebUserDao.loadURLs(WebUserDao.java:1934)
26. SELECT * FROM webclient_profile_urls WHERE profileId = 2 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.125  com.andtek.andphone.communicator.CommunicatorProfile.loadDefaultStatisticsTableColumns(CommunicatorProfile.java:519)
48. SELECT * FROM desktop_profiles_statcols WHERE profileID=1 ORDER BY tableName, columnName 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.126  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.127  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
27. SELECT * FROM generic_profiles_configparams WHERE profileID=3 ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.127  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.128  com.andtek.andphone.web.webattendant.dao.AttendantProfileDao.get(AttendantProfileDao.java:27)
20. SELECT * FROM attendant_profiles WHERE profileID=3 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.128  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.129  com.andtek.andphone.clientcore.GenericProfile.load(GenericProfile.java:120)
21. SELECT * FROM generic_profiles_configparams WHERE profileID=2 ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.129  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.130  com.andtek.andphone.web.webclient.dao.WebUserDao.getWebUserProfile(WebUserDao.java:1369)
22. SELECT * FROM webuser_profiles WHERE profileID = 2 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.130  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.131  com.andtek.andphone.web.webclient.dao.WebUserDao.loadURLs(WebUserDao.java:1934)
23. SELECT * FROM webclient_profile_urls WHERE profileId = 2 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.173  com.andtek.andphone.global.CUCMAuthenticationServer.load(CUCMAuthenticationServer.java:83)
49. SELECT * FROM CUCM_dirs ORDER BY priority 
 {executed in 34 msec}

-----> 2020-08-14 14:09:54.175  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.176  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.load(AbstractAuthenticationProfile.java:54)
24. SELECT * FROM auth_profiles ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.176  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.178  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.load(AbstractAuthenticationProfile.java:75)
25. SELECT * FROM auth_profiles_Attr WHERE profileID=1 ORDER BY entryID 
 {executed in 2 msec}

-----> 2020-08-14 14:09:54.180  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.180  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.load(AbstractAuthenticationProfile.java:75)
26. SELECT * FROM auth_profiles_Attr WHERE profileID=3 ORDER BY entryID 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.180  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.182  com.andtek.andphone.global.authprofiles.impl.CucmAXLAuthenticationProfile.loadAttributes(CucmAXLAuthenticationProfile.java:462)
27. SELECT * FROM auth_profiles_CUCM WHERE profileID=3 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.182  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.183  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.load(AbstractAuthenticationProfile.java:75)
20. SELECT * FROM auth_profiles_Attr WHERE profileID=2 ORDER BY entryID 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.184  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.185  com.andtek.andphone.global.remotemonitor.AndRemoteMonitorHost.load(AndRemoteMonitorHost.java:74)
21. SELECT * FROM monitor_servers ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.185  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.187  com.andtek.andphone.global.Pool.getAllPools(Pool.java:204)
22. SELECT id FROM pools 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.188  com.andtek.andphone.global.Pool.loadAttributes(Pool.java:93)
22. SELECT id, name, description, pooltype, adgroup, profileID, fk_authProfile FROM pools WHERE 
id=1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.213  com.andtek.andphone.global.Pool.loadAttributes(Pool.java:105)
22. SELECT id,entry FROM poolentries WHERE poolid=1 ORDER BY priority 
 {executed in 25 msec}

-----> 2020-08-14 14:09:54.215  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.251  com.andtek.andphone.global.Schedule.load(Schedule.java:62)
23. SELECT id, title, mode, timezoneID FROM schedules ORDER by title 
 {executed in 36 msec}

-----> 2020-08-14 14:09:54.252  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.264  com.andtek.andphone.global.Regex.load(Regex.java:45)
24. SELECT regexID, regexName, regexDescription, regexTestValue FROM regex ORDER by regexName 
 {executed in 12 msec}

-----> 2020-08-14 14:09:54.265  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.286  com.andtek.andphone.global.AndLocale.load(AndLocale.java:41)
25. SELECT * FROM locales ORDER by code 
 {executed in 21 msec}

-----> 2020-08-14 14:09:54.287  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.288  com.andtek.andphone.global.ADDomains.load(ADDomains.java:50)
26. SELECT * FROM ADDomains ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.533  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.534  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.535  com.andtek.andphone.global.Module.migrateAXLConfigurationToServerGroup(Module.java:587)
20. SELECT * FROM servergroup WHERE gid=1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.535  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.536  com.andtek.andphone.global.Module.migrateAXLConfigurationToServerGroup(Module.java:590)
21. SELECT * FROM servergroup_members WHERE gid=1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.536  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.536  com.andtek.andphone.utils.ccm.JTAPIHelper.recordExists(JTAPIHelper.java:404)
22. SELECT * FROM servergroup WHERE gid=2 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.537  com.andtek.andphone.utils.ccm.JTAPIHelper.recordExists(JTAPIHelper.java:404)
22. SELECT * FROM servergroup_members WHERE gid=2 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.712  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.768  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
50. SELECT val FROM config WHERE module='lockout' AND param='serviceSecurity' 
 {executed in 20 msec}

-----> 2020-08-14 14:09:54.773  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
51. UPDATE config SET val='false' WHERE module='lockout' AND param='serviceSecurity' 
 {executed in 4 msec}

-----> 2020-08-14 14:09:54.780  com.andtek.andphone.callrouting.Module.background(Module.java:753)
23. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:09:54.710' AND type 
<= 10 
 {executed in 53 msec}

-----> 2020-08-14 14:09:54.785  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 10 msec}

-----> 2020-08-14 14:09:54.797  com.andtek.andphone.partner.Manager.getManagers(Manager.java:431)
24. SELECT id,DN FROM pgmanager ORDER by id 
 {executed in 12 msec}

-----> 2020-08-14 14:09:54.797  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.798  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.799  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.800  com.andtek.andphone.directory.DirectoryMapping.load(DirectoryMapping.java:39)
26. SELECT * FROM dirmapping ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.801  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.804  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.806  com.andtek.andphone.recorder.StorageProfile.loadInternal(StorageProfile.java:128)
20. SELECT * FROM rec_storage_profiles ORDER BY name 
 {executed in 2 msec}

-----> 2020-08-14 14:09:54.807  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.811  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:54.812  com.andtek.andphone.recorder.StorageProfile.loadInternal(StorageProfile.java:128)
22. SELECT * FROM recmgmt_storage_profiles ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:54.915  com.andtek.andphone.recordermgmt.Module.getConfiguredSensors(Module.java:150)
52. SELECT name,ip FROM sensors 
 {executed in 13 msec}

-----> 2020-08-14 14:09:54.937  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 8 msec}

-----> 2020-08-14 14:09:54.957  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
23. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='agi' AND parent='' ORDER 
BY priority 
 {executed in 19 msec}

-----> 2020-08-14 14:09:54.957  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.291  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
53. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'global','','Server 
is Available again: SIPServer[APAS](agent(10.51.51.122:5060, udp) ---> server[3](rec, 10.51.51.34:5060) 
available:true',0,0) 
 {executed in 12 msec}

-----> 2020-08-14 14:09:55.291  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
53. SELECT currval('logging_id_seq') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.471  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.472  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.476  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
26. SELECT * FROM provisioning_resboundle WHERE projectname='agi' ORDER BY locale, rkey 
 {executed in 4 msec}

-----> 2020-08-14 14:09:55.592  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
54. SELECT * FROM provisioning_roles WHERE projectname='agi' 
 {executed in 2 msec}

-----> 2020-08-14 14:09:55.594  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
55. SELECT * FROM provisioning_ldapdirectory WHERE projectname='agi' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.600  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 3 msec}

-----> 2020-08-14 14:09:55.606  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
27. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='andtek' AND parent='' ORDER 
BY priority 
 {executed in 6 msec}

-----> 2020-08-14 14:09:55.607  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.618  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.618  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.618  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
22. SELECT * FROM provisioning_resboundle WHERE projectname='andtek' ORDER BY locale, rkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.635  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
56. SELECT * FROM provisioning_roles WHERE projectname='andtek' 
 {executed in 3 msec}

-----> 2020-08-14 14:09:55.636  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
57. SELECT * FROM provisioning_ldapdirectory WHERE projectname='andtek' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.641  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.641  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
23. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='leoni' AND parent='' ORDER 
BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.642  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.656  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.656  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.657  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
26. SELECT * FROM provisioning_resboundle WHERE projectname='leoni' ORDER BY locale, rkey 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.708  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
58. SELECT * FROM provisioning_roles WHERE projectname='leoni' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.709  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
59. SELECT * FROM provisioning_ldapdirectory WHERE projectname='leoni' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.712  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.713  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
27. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='showroom' AND parent='' 
ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.713  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.724  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 3 msec}

-----> 2020-08-14 14:09:55.724  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.724  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
22. SELECT * FROM provisioning_resboundle WHERE projectname='showroom' ORDER BY locale, rkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.734  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
60. SELECT * FROM provisioning_roles WHERE projectname='showroom' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.734  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
61. SELECT * FROM provisioning_ldapdirectory WHERE projectname='showroom' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.738  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.738  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
23. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='verlag' AND parent='' ORDER 
BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.738  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.747  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.747  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.747  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
26. SELECT * FROM provisioning_resboundle WHERE projectname='verlag' ORDER BY locale, rkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.764  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
62. SELECT * FROM provisioning_roles WHERE projectname='verlag' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.765  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
63. SELECT * FROM provisioning_ldapdirectory WHERE projectname='verlag' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.772  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:55.773  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
27. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='wacker' AND parent='' ORDER 
BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.773  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.804  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.804  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.805  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
22. SELECT * FROM provisioning_resboundle WHERE projectname='wacker' ORDER BY locale, rkey 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.830  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
64. SELECT * FROM provisioning_roles WHERE projectname='wacker' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.831  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
65. SELECT * FROM provisioning_ldapdirectory WHERE projectname='wacker' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.836  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.836  com.andtek.andphone.provisioning.project.Config.loadConfig(Config.java:39)
23. SELECT parent,param,id,type,val FROM provisioning_config WHERE app='zimmer' AND parent='' ORDER 
BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.836  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.904  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 4 msec}

-----> 2020-08-14 14:09:55.905  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.905  com.andtek.andphone.provisioning.project.Project.loadResourceBundlefromDB(Project.java:1431)
26. SELECT * FROM provisioning_resboundle WHERE projectname='zimmer' ORDER BY locale, rkey 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.915  com.andtek.andphone.provisioning.project.Project.loadProjectRoles(Project.java:605)
66. SELECT * FROM provisioning_roles WHERE projectname='zimmer' 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.915  com.andtek.andphone.provisioning.project.Project.loadProjectLDAPDirectories(Project.java:635)
67. SELECT * FROM provisioning_ldapdirectory WHERE projectname='zimmer' 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.954  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:55.956  com.andtek.andphone.provisioning.ProvisionLocation.loadChildrenLocations(ProvisionLocation.java:145)
27. SELECT * FROM provisioning_locations WHERE parentID=0 ORDER BY name 
 {executed in 2 msec}

-----> 2020-08-14 14:09:55.960  com.andtek.andphone.provisioning.PhoneCustomizer.load(PhoneCustomizer.java:55)
68. SELECT * FROM phone_customizing ORDER BY name 
 {executed in 3 msec}

-----> 2020-08-14 14:09:55.972  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:55.972  com.andtek.andphone.callrouting.CallListConfiguration.loadConfiguration(CallListConfiguration.java:34)
20. SELECT * FROM callListConfig 
 {executed in 0 msec}

-----> 2020-08-14 14:09:56.093  com.andtek.andphone.partner.acd.Queue.loadQueues(Queue.java:1678)
69. SELECT id FROM acdQueue 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.122  com.andtek.andphone.partner.acd.callbackrules.AcdCallbackRuleRepository.load(AcdCallbackRuleRepository.java:76)
70. SELECT * FROM acd_callback_rules 
 {executed in 7 msec}

-----> 2020-08-14 14:09:56.236  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:56.240  com.andtek.andphone.reports.ReportSchedule.load(ReportSchedule.java:93)
21. SELECT * FROM report_schedule ORDER BY repid 
 {executed in 4 msec}

-----> 2020-08-14 14:09:56.242  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:56.245  com.andtek.andphone.phonemenu.PhoneMenuItem.loadRootItems(PhoneMenuItem.java:131)
22. SELECT itemID,type FROM PhoneMenuItem WHERE menuID=0 ORDER BY priority 
 {executed in 2 msec}

-----> 2020-08-14 14:09:56.251  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.252  com.andtek.andphone.presence.AbstractPresenceSourceImpl.loadAllSources(AbstractPresenceSourceImpl.java:297)
23. SELECT * FROM presence_sources ORDER BY name 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.357  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.394  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
24. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 36 msec}

-----> 2020-08-14 14:09:56.400  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.456  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
25. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 56 msec}

-----> 2020-08-14 14:09:56.460  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
71. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.467  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:56.469  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.471  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:09:56.472  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
27. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:09:56.493  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:09:56.494  com.andtek.andphone.global.license.LicenseHelper.getGroupMALicNumber(LicenseHelper.java:800)
20. SELECT COUNT(*) AS liccount FROM pgmanager 
 {executed in 1 msec}

-----> 2020-08-14 14:09:57.772  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
72. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'global',NULL,'Provider 
in service. Connected to CTI manager',0,0) 
 {executed in 3 msec}

-----> 2020-08-14 14:09:57.772  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
72. SELECT currval('logging_id_seq') 
 {executed in 0 msec}

-----> 2020-08-14 14:09:57.788  com.andtek.andphone.testing.DeviceListX.requireIPs(DeviceListX.java:163)
73. SELECT * FROM mcastgroup WHERE poolid<>0 
 {executed in 7 msec}

-----> 2020-08-14 14:09:57.791  com.andtek.andphone.blacklist.emergencyrouting.EmergencyCallRoutingUtils.hasEmergencyCallRoutingConfiguration(EmergencyCallRoutingUtils.java:60)
74. SELECT * FROM blacklistlist WHERE type=5 
 {executed in 0 msec}

-----> 2020-08-14 14:09:57.847  com.andtek.andphone.testing.DeviceListX.requireIPs(DeviceListX.java:163)
75. SELECT * FROM mcastgroup WHERE poolid<>0 
 {executed in 1 msec}

-----> 2020-08-14 14:09:57.847  com.andtek.andphone.blacklist.emergencyrouting.EmergencyCallRoutingUtils.hasEmergencyCallRoutingConfiguration(EmergencyCallRoutingUtils.java:60)
76. SELECT * FROM blacklistlist WHERE type=5 
 {executed in 0 msec}

-----> 2020-08-14 14:10:00.015  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:00.016  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
21. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 1 msec}

-----> 2020-08-14 14:10:00.023  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:10:00.024  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
22. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:10:00.026  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
77. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:00.026  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:00.028  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:00.028  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:00.029  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:00.038  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:10:00.039  com.andtek.andphone.global.license.LicenseHelper.getGroupMALicNumber(LicenseHelper.java:800)
25. SELECT COUNT(*) AS liccount FROM pgmanager 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.591  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
79. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.591  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.595  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
79. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.597  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
79. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 2 msec}

-----> 2020-08-14 14:10:03.597  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
79. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.598  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.599  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
27. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.601  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
78. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.605  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
78. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 4 msec}

-----> 2020-08-14 14:10:03.605  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.607  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
20. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 2 msec}

-----> 2020-08-14 14:10:03.607  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.608  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.619  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
80. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'recorder',NULL,'Sniffer 
process went back to service.',0,0) 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.620  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
80. SELECT currval('logging_id_seq') 
 {executed in 1 msec}

-----> 2020-08-14 14:10:03.820  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:03.822  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
22. SELECT id FROM directories ORDER by name 
 {executed in 2 msec}

-----> 2020-08-14 14:10:04.826  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:04.829  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
23. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 3 msec}

-----> 2020-08-14 14:10:04.829  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:04.830  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
24. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:05.834  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:05.836  com.andtek.andphone.callrouting.Module.background(Module.java:753)
25. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:10:05.833' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.793  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.794  com.andtek.andphone.global.Pool.getAllPools(Pool.java:204)
26. SELECT id FROM pools 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.802  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.802  com.andtek.andphone.partner.Manager.getManagers(Manager.java:431)
27. SELECT id,DN FROM pgmanager ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.820  com.andtek.andphone.directory.LookupGroup.loadLookupGroupMembersData(LookupGroup.java:272)
81. SELECT * FROM lookupgroupmembers ORDER BY priority 
 {executed in 15 msec}

-----> 2020-08-14 14:10:07.821  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.822  com.andtek.andphone.mcast.Module.initFastSetup(Module.java:336)
20. SELECT id,grouptype,ip,port,volume,bidirectional,interrupt,fastsetup FROM mcastgroup WHERE 
fastsetup<>0 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.827  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
82. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.828  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
82. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.828  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
82. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.829  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
82. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.830  com.andtek.andphone.recorder.AdminHelper.isSupervisor(AdminHelper.java:72)
83. SELECT DISTINCT u.username FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid INNER JOIN permissions p ON ur.fkpermissions=p.id WHERE (r.rolename='recorder_archive' 
OR r.rolename='recordermgmt_archive') AND (p.name='allow' OR p.name='allowPool') AND u.extensions 
LIKE '%+36110009020%' 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.845  com.andtek.andphone.recorder.AdminHelper.isSupervisor(AdminHelper.java:72)
84. SELECT DISTINCT u.username FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid INNER JOIN permissions p ON ur.fkpermissions=p.id WHERE (r.rolename='recorder_archive' 
OR r.rolename='recordermgmt_archive') AND (p.name='allow' OR p.name='allowPool') AND u.extensions 
LIKE '%+36110009021%' 
 {executed in 2 msec}

-----> 2020-08-14 14:10:07.847  com.andtek.andphone.recorder.AdminHelper.isSupervisor(AdminHelper.java:72)
85. SELECT DISTINCT u.username FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid INNER JOIN permissions p ON ur.fkpermissions=p.id WHERE (r.rolename='recorder_archive' 
OR r.rolename='recordermgmt_archive') AND (p.name='allow' OR p.name='allowPool') AND u.extensions 
LIKE '%+36110009070%' 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.848  com.andtek.andphone.recorder.AdminHelper.isSupervisor(AdminHelper.java:72)
86. SELECT DISTINCT u.username FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid INNER JOIN permissions p ON ur.fkpermissions=p.id WHERE (r.rolename='recorder_archive' 
OR r.rolename='recordermgmt_archive') AND (p.name='allow' OR p.name='allowPool') AND u.extensions 
LIKE '%+36110009075%' 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.849  com.andtek.andphone.recorder.AdminHelper.isSupervisor(AdminHelper.java:72)
87. SELECT DISTINCT u.username FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid INNER JOIN permissions p ON ur.fkpermissions=p.id WHERE (r.rolename='recorder_archive' 
OR r.rolename='recordermgmt_archive') AND (p.name='allow' OR p.name='allowPool') AND u.extensions 
LIKE '%+36110009110%' 
 {executed in 1 msec}

-----> 2020-08-14 14:10:07.894  com.andtek.andphone.blacklist.emergencyrouting.mapping.EmergencyNumberMappingDAO.executeFinderQuery(EmergencyNumberMappingDAO.java:90)
88. SELECT * FROM emergency_number_mapping ORDER BY creation_time DESC 
 {executed in 13 msec}

-----> 2020-08-14 14:10:07.921  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:07.943  com.andtek.andphone.observer.Camera.internalGetAllCameras(Camera.java:158)
21. SELECT id FROM ob_cams ORDER BY id 
 {executed in 19 msec}

-----> 2020-08-14 14:10:13.622  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
90. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.623  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
90. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.623  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
90. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.623  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
90. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.624  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.625  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
22. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.626  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
89. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.627  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
89. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.627  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.628  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
23. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:13.628  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.628  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.861  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:13.862  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:10:14.867  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:14.870  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
26. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 2 msec}

-----> 2020-08-14 14:10:14.870  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:14.871  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
27. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:16.879  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:16.881  com.andtek.andphone.callrouting.Module.background(Module.java:753)
20. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:10:16.877' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.631  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
92. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.631  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
92. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.631  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
92. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.632  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
92. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.632  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.633  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
21. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.634  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
91. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.635  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
91. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.635  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.636  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
22. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.636  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.636  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:23.899  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:23.900  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
24. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:10:24.904  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:24.906  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
25. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 2 msec}

-----> 2020-08-14 14:10:24.907  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:24.907  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
26. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:10:27.917  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:10:27.918  com.andtek.andphone.callrouting.Module.background(Module.java:753)
27. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:10:27.915' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.639  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
94. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.640  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
94. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.640  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
94. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.640  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
94. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.641  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.642  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
20. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.643  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
93. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.644  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
93. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.644  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.645  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
21. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.645  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.646  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
22. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:33.935  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:33.936  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
23. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:10:34.940  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:34.942  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
24. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 2 msec}

-----> 2020-08-14 14:10:34.942  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:34.943  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
25. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:10:38.955  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:38.957  com.andtek.andphone.callrouting.Module.background(Module.java:753)
26. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:10:38.954' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:43.648  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
96. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.649  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
96. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:10:43.649  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
96. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.649  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
96. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.650  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.650  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
27. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.651  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
95. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:10:43.652  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
95. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:10:43.653  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:43.653  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
20. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.653  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:43.654  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.037  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.038  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
22. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.041  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.042  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
23. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:10:44.043  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
97. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.044  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.074  com.andtek.andphone.desktop.Module.getLicCount(Module.java:99)
24. SELECT DISTINCT cp.clientid from desktopclientphone cp, desktopclient dc WHERE dc.id = cp.clientid 
AND dc.type=0 
 {executed in 30 msec}

-----> 2020-08-14 14:10:44.099  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.100  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:10:44.101  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:44.101  com.andtek.andphone.mcast.Module.refreshAllDynamicMembers(Module.java:1010)
26. SELECT id,grouptype,poolid FROM mcastgroup WHERE poolid>0 
 {executed in 0 msec}

-----> 2020-08-14 14:10:45.106  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:45.108  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
27. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:10:45.108  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:45.109  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
20. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:50.126  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:50.127  com.andtek.andphone.callrouting.Module.background(Module.java:753)
21. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:10:50.125' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:53.656  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
99. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:10:53.656  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
99. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.656  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
99. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.657  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
99. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:10:53.657  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.658  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
22. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:10:53.658  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
98. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.659  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
98. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.659  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.660  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
23. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:10:53.660  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:53.660  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:54.137  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:54.137  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:10:55.141  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:10:55.142  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
26. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:10:55.142  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:10:55.143  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
27. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:01.160  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:01.161  com.andtek.andphone.callrouting.Module.background(Module.java:753)
20. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:01.158' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:03.663  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
101. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.663  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
101. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.663  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
101. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.664  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
101. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.664  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.665  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
21. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:11:03.665  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
100. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.666  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
100. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.666  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.667  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
22. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.667  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:03.668  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:04.169  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:04.169  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
24. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:11:05.173  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:05.174  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
25. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:11:05.175  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:05.175  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
26. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.563  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.564  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='tomcat' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.565  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.565  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.566  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.567  com.andtek.andphone.users.securityfilter.ANDRealm.authenticate(ANDRealm.java:150)
21. SELECT * FROM auth_profiles WHERE enabled=1 ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.567  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.568  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.getLocalUser(AbstractAuthenticationProfile.java:316)
22. SELECT * FROM users WHERE username='admin' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.568  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.569  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.getLocalUser(AbstractAuthenticationProfile.java:316)
23. SELECT * FROM users WHERE username='admin' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.725  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.726  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findUser(ANDUserDatabase.java:119)
24. SELECT uid,password,fullname FROM users WHERE username='admin' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.857  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.859  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.940  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 80 msec}

-----> 2020-08-14 14:11:08.940  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.941  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.941  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.941  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:08.944  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:08.949  com.andtek.andphone.EventLog.logToDB(EventLog.java:239)
102. INSERT INTO logging (created,level,module,username,message,reference,related) VALUES (NOW(),3,'global','admin','Login 
successfull from 10.50.245.79 for: admin',0,0) 
 {executed in 4 msec}

-----> 2020-08-14 14:11:08.950  com.andtek.andphone.EventLog.logToDB(EventLog.java:247)
102. SELECT currval('logging_id_seq') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.549  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.550  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='tomcat' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.550  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.551  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.552  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.553  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_configuration' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.555  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.555  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.556  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.556  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.557  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.558  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.559  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_configcm' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.560  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_configcm' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.560  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.560  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_configcm' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.561  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.561  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.562  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.563  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_license' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.564  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_license' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.564  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.565  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_license' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.565  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.566  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.566  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.567  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_cdrfetch' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.568  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_cdrfetch' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.569  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.569  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_cdrfetch' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.569  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.570  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.570  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.572  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_security' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.572  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_security' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.573  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.573  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_security' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.574  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.574  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.575  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.576  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_adintegration' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.577  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_adintegration' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.577  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.577  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_adintegration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.578  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.578  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.579  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.580  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_poolslist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.580  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_poolslist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.581  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.581  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_poolslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.581  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.582  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.583  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.584  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_servers' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.585  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_servers' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.585  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.585  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_servers' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.586  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.586  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.587  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.588  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_medialist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.588  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_medialist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.589  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.589  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_medialist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.590  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.590  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.591  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.591  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_schedulelist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.592  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_schedulelist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.592  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.593  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_schedulelist' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.593  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.594  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.594  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.595  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_regex' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.596  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_regex' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.596  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.597  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_regex' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.597  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.597  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.598  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.599  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_locales' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.599  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_locales' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.600  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.600  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_locales' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.601  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.601  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.602  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.602  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_maintenance' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.603  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_maintenance' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.603  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.604  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_maintenance' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.604  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.605  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.605  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.606  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_backup' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.607  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_backup' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.607  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.607  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_backup' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.608  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.608  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.609  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.610  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_bulktool' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.610  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_bulktool' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.611  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.611  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_bulktool' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.611  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.612  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.613  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.614  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.615  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.615  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.615  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.616  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.616  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.617  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.618  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.618  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.619  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.619  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.619  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.620  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.622  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 10 msec}

-----> 2020-08-14 14:11:09.623  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_restart' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.624  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_restart' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.624  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.624  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_restart' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.625  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.625  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.626  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.627  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_update' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.627  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_update' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.628  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.628  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_update' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.628  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.629  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.629  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.630  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_troubleshoot' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.631  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_troubleshoot' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.631  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.631  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_troubleshoot' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.632  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.632  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.633  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.634  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_logs' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.634  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_logs' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.635  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.635  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_logs' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.635  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.636  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.636  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.637  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_events' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.638  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_events' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.638  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.638  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_events' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.639  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.639  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.640  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.641  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_status' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.641  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_status' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.642  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.642  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_status' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.642  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.643  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.643  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.644  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_rrdstat' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.645  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_rrdstat' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.645  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.645  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_rrdstat' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.646  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.646  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.648  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.648  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='lockout_config' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.649  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='lockout_config' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.649  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.650  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='lockout_config' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.650  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.650  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.651  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.652  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='lockout_profiles' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.652  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='lockout_profiles' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.653  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.653  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='lockout_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.654  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.654  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.655  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.655  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='lockout_list' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.656  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='lockout_list' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.656  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.657  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='lockout_list' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.657  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.657  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.659  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.659  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='partner_settings' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.660  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='partner_settings' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.660  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.661  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='partner_settings' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.661  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.662  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.662  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.663  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='partner_grouplist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.664  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='partner_grouplist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.664  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.664  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='partner_grouplist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.665  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.665  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.666  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.666  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='partner_managerlist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.667  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='partner_managerlist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.667  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.668  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='partner_managerlist' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.668  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.669  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.670  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.670  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='partner_search' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.671  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='partner_search' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.671  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.672  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='partner_search' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.672  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.672  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.673  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.674  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='partner_presencestates' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.675  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='partner_presencestates' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.675  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.675  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='partner_presencestates' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.676  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.676  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.677  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.678  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='ldap_dirlist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.679  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='ldap_dirlist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.679  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.679  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='ldap_dirlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.680  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.680  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.681  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.682  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='ldap_dirgroups' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.682  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='ldap_dirgroups' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.683  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.683  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='ldap_dirgroups' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.683  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.684  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.684  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.685  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='ldap_lookup' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.685  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='ldap_lookup' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.686  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.686  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='ldap_lookup' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.687  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.687  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.688  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.688  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='ldap_dirmapping' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.689  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='ldap_dirmapping' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.689  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.689  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='ldap_dirmapping' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.690  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.690  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.691  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.692  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='mcast_configuration' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.693  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='mcast_configuration' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.693  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.693  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='mcast_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.694  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.694  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.695  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.696  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='mcast_grouplist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.696  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='mcast_grouplist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.697  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.697  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='mcast_grouplist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.697  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.698  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.698  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.699  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='mcast_smsbcast' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.700  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='mcast_smsbcast' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.700  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.700  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='mcast_smsbcast' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.701  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.701  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.702  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.703  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_configuration' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.703  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.704  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.704  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.705  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.705  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.706  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.706  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_profiles' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.707  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_profiles' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.707  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.708  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.708  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.708  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.709  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.710  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_rules' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.710  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_rules' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.711  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.711  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_rules' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.711  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.712  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.712  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.713  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_status' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.713  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_status' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.714  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.714  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_status' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.714  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.715  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.715  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.716  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_encrypt' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.716  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_encrypt' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.717  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.717  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_encrypt' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.717  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.718  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.718  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.719  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_cert' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.719  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_cert' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.720  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.720  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_cert' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.720  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.721  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.721  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.722  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_archive' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.774  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_archive' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.775  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.775  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_archive' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.775  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.776  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.776  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.777  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_search' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.778  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_search' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.778  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.778  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_search' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.779  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.779  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.780  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.780  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='recorder_restore' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.781  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='recorder_restore' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.781  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.782  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='recorder_restore' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.782  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.782  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.783  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.784  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='testing_screenshot' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.785  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='testing_screenshot' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.785  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.786  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='testing_screenshot' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.786  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.786  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.787  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.788  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='testing_simulator' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.788  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='testing_simulator' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.789  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.789  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='testing_simulator' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.789  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.790  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.791  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.791  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='settings_profilelist' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.792  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='settings_profilelist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.792  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.793  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='settings_profilelist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.793  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.793  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.795  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.795  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='blacklist_settings' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.796  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='blacklist_settings' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.796  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.796  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='blacklist_settings' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.797  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.797  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.798  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.798  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='blacklist_blacklist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.799  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='blacklist_blacklist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.799  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.799  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='blacklist_blacklist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.800  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.800  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.801  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.802  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_configuration' 
OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.803  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.803  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.803  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.804  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.804  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.805  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.805  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_dirlist' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.806  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_dirlist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.806  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.807  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_dirlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.807  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.807  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.808  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.809  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_tasklist' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.809  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_tasklist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.810  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.810  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_tasklist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.810  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.811  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.812  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.812  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_schedule' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.813  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_schedule' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.813  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.813  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_schedule' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.814  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.814  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.815  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.815  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_phone_custom' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.816  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_phone_custom' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.816  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.816  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_phone_custom' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.817  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.817  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.818  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.818  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_appslist' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.819  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_appslist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.819  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.820  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_appslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.820  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.820  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.821  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.822  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_location' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.822  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_location' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.822  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.823  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_location' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.823  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.823  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.824  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.825  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_reporting' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.825  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_reporting' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.826  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.826  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_reporting' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.826  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.826  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.827  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.828  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='provisioning_reportingarchive' 
OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.828  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='provisioning_reportingarchive' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.829  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.829  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='provisioning_reportingarchive' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.829  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.830  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.831  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.832  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='apps_appslist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.832  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='apps_appslist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.833  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.833  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='apps_appslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.833  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.834  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.835  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.836  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='callrouting_configuration' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.836  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='callrouting_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.836  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.837  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='callrouting_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.837  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.837  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.839  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.839  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_settings' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.840  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_settings' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.840  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.841  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_settings' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.841  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.841  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.842  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.843  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_queuelist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.843  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_queuelist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.843  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.844  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_queuelist' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.844  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.844  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.845  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.846  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_pilotlist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.847  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_pilotlist' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.847  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.847  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_pilotlist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.848  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.848  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.849  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.850  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_category' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.850  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_category' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.851  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.851  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_category' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.851  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.852  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.853  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.854  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_acdreport' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.854  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_acdreport' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.855  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.855  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_acdreport' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.855  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.856  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.857  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.857  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_classification' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.858  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_classification' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.858  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.858  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_classification' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.859  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.859  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.860  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.861  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_callbackrules' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.861  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_callbackrules' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.862  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.862  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_callbackrules' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.862  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.863  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.863  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.864  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='groupacd_search' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.865  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='groupacd_search' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.865  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.865  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='groupacd_search' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.866  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.866  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.867  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.868  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='reports_configuration' OR 
r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.868  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='reports_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.869  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.869  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='reports_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.870  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.870  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.871  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.871  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='reports_upload_rptfiles' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.872  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='reports_upload_rptfiles' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.872  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.872  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='reports_upload_rptfiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.873  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.873  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.874  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.874  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='reports_report_scheduling' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.874  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='reports_report_scheduling' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.875  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.875  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='reports_report_scheduling' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.876  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.876  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.876  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.877  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='reports_list_riports' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.877  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='reports_list_riports' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.877  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.878  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='reports_list_riports' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.878  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.878  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.879  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.880  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='reports_webreport' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.880  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='reports_webreport' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.880  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.881  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='reports_webreport' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.881  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.881  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.882  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.883  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='phonemenu_configuration' 
OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.884  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='phonemenu_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.884  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.884  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='phonemenu_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.885  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.885  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.886  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.886  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='phonemenu_menus' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.886  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='phonemenu_menus' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.886  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.887  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='phonemenu_menus' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.887  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.887  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.889  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.889  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='calllist_configuration' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.890  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='calllist_configuration' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.890  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.891  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='calllist_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.891  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.891  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.893  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.894  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='andmobile_configuration' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.894  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='andmobile_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.894  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.895  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='andmobile_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.895  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.895  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.897  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.897  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='andmobile_profiles' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.898  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='andmobile_profiles' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.898  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.899  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='andmobile_profiles' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.899  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.899  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.911  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 10 msec}

-----> 2020-08-14 14:11:09.911  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='andmobile_activeclient' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.912  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='andmobile_activeclient' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.912  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.912  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='andmobile_activeclient' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.913  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.913  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.914  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.915  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='andmobile_clientlist' OR 
r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.915  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='andmobile_clientlist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.915  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.916  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='andmobile_clientlist' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.916  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.916  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.919  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:11:09.919  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='metadirectory_configuration' 
OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.919  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='metadirectory_configuration' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.920  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.920  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='metadirectory_configuration' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.920  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.921  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:09.925  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 3 msec}

-----> 2020-08-14 14:11:09.925  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='presence_sources' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.925  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='presence_sources' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.926  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.926  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='presence_sources' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.926  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.926  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.930  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:11:09.930  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='andguard_appslist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.930  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='andguard_appslist' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.931  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.931  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='andguard_appslist' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.931  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:09.932  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.110  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.111  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.111  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.111  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.112  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.112  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 3 msec}

-----> 2020-08-14 14:11:10.112  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.113  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.113  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.113  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.114  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.114  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.114  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.115  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.319  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.320  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.320  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.321  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.322  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.322  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.322  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.323  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.323  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.324  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.324  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.324  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.325  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.325  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.702  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.705  com.andtek.andphone.common.gui.services.GuiLoginInfoService.GetLastLoginDateTime(GuiLoginInfoService.java:102)
24. SELECT * FROM logging WHERE username='admin' AND message LIKE 'Login successfull%' ORDER BY 
created DESC 
 {executed in 2 msec}

-----> 2020-08-14 14:11:10.707  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.707  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.707  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
25. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.708  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.708  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.708  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.709  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.709  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.710  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.710  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.710  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.711  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.711  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.711  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.874  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.876  com.andtek.andphone.common.gui.services.GuiMessagingService.getLastErrorMessages(GuiMessagingService.java:49)
23. SELECT * FROM logging WHERE created>='08/13/2020 14:11:10.874' AND created<='08/14/2020 14:11:10.874' 
AND level<=1 ORDER BY created DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.904  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.905  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
24. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.909  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:10.909  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
25. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.910  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
103. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.911  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:10.912  com.andtek.andphone.desktop.Module.getLicCount(Module.java:99)
26. SELECT DISTINCT cp.clientid from desktopclientphone cp, desktopclient dc WHERE dc.id = cp.clientid 
AND dc.type=0 
 {executed in 1 msec}

-----> 2020-08-14 14:11:12.195  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:12.195  com.andtek.andphone.callrouting.Module.background(Module.java:753)
27. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:12.194' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.694  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
105. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:11:13.694  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
105. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.694  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
105. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.695  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
105. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.695  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.695  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
20. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.696  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
104. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.697  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
104. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:11:13.697  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.698  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
21. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:13.698  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:13.698  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
22. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:14.200  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:14.201  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
23. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:11:15.205  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:15.206  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
24. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:11:15.206  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:15.206  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
25. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.230  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.231  com.andtek.andphone.callrouting.Module.background(Module.java:753)
26. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:23.229' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.701  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
107. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.702  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
107. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:11:23.702  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
107. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.702  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
107. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.702  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.703  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
27. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:11:23.704  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
106. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:11:23.705  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
106. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:11:23.705  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.705  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
20. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.706  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:23.706  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:24.233  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:24.234  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
22. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:11:25.237  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:25.239  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
23. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:11:25.239  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:25.240  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
24. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.710  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
109. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.712  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
109. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.712  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
109. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.712  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
109. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.713  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.714  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
25. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.715  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
108. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.716  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
108. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.716  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.717  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
26. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:33.717  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:33.718  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
27. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:34.266  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:34.267  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
20. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:11:34.269  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:34.270  com.andtek.andphone.callrouting.Module.background(Module.java:753)
21. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:34.268' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:11:35.273  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:35.275  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
22. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 2 msec}

-----> 2020-08-14 14:11:35.275  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:35.276  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
23. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.520  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:40.520  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.521  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
24. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:40.521  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.522  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.522  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.522  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
26. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.523  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.523  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.524  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:11:40.524  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.524  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.525  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:40.525  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.720  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
111. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:11:43.720  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
111. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.720  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
111. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.720  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
111. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.721  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.721  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
22. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.722  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
110. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:11:43.723  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
110. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:11:43.723  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.723  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
23. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:43.724  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:43.724  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.301  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:44.301  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
25. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.305  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.306  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
26. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:11:44.307  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
112. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.307  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.308  com.andtek.andphone.desktop.Module.getLicCount(Module.java:99)
27. SELECT DISTINCT cp.clientid from desktopclientphone cp, desktopclient dc WHERE dc.id = cp.clientid 
AND dc.type=0 
 {executed in 1 msec}

-----> 2020-08-14 14:11:44.315  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:44.315  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
20. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:11:45.320  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:45.322  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
21. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 2 msec}

-----> 2020-08-14 14:11:45.323  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:45.323  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
22. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:45.325  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:45.325  com.andtek.andphone.callrouting.Module.background(Module.java:753)
23. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:45.324' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.726  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
114. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.726  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
114. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.727  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
114. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:11:53.727  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
114. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.727  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.728  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
24. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:11:53.729  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
113. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:11:53.729  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
113. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.730  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.730  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
25. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.730  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:53.731  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:54.350  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:54.351  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
27. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:11:55.355  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:55.356  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
20. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:11:55.357  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:11:55.357  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
21. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:11:56.361  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:11:56.362  com.andtek.andphone.callrouting.Module.background(Module.java:753)
22. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:11:56.360' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:00.062  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.063  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
23. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 1 msec}

-----> 2020-08-14 14:12:00.068  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.069  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
24. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:12:00.071  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
115. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.072  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.072  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
25. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.073  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:00.073  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.083  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:00.084  com.andtek.andphone.global.license.LicenseHelper.getGroupMALicNumber(LicenseHelper.java:800)
27. SELECT COUNT(*) AS liccount FROM pgmanager 
 {executed in 1 msec}

-----> 2020-08-14 14:12:03.733  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
117. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.734  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
117. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:12:03.734  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
117. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.734  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
117. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.734  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.735  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
20. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:12:03.736  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
116. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:03.736  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
116. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.737  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:03.737  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
21. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.737  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:03.738  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
22. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:04.381  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:04.382  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
23. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:12:05.386  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:05.387  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
24. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:05.387  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:05.388  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
25. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:07.394  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:07.395  com.andtek.andphone.callrouting.Module.background(Module.java:753)
26. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:12:07.393' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:10.666  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.667  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:12:10.667  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
27. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.667  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.668  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.668  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.668  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.669  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.669  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.670  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
22. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.670  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.670  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.671  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:10.671  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.745  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
119. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.745  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
119. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.745  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
119. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.745  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
119. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.746  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:13.746  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
25. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.747  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
118. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:13.747  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
118. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.748  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:13.748  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
26. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.748  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:13.749  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
27. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:14.414  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:14.414  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
20. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:12:15.418  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:15.419  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
21. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:15.420  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:15.420  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
22. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:18.429  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:18.430  com.andtek.andphone.callrouting.Module.background(Module.java:753)
23. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:12:18.428' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:19.278  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
120. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:22.930  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
121. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.751  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
123. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.751  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
123. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.751  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
123. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.751  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
123. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.752  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.752  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
24. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.753  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
122. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:23.753  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
122. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.753  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.754  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
25. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.754  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:23.754  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:24.465  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:24.465  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
27. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:12:25.469  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:25.470  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
20. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:25.471  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:25.471  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
21. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.665  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.667  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='tomcat' 
 {executed in 1 msec}

-----> 2020-08-14 14:12:26.667  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.668  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.668  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.669  com.andtek.andphone.users.securityfilter.ANDRealm.authenticate(ANDRealm.java:150)
24. SELECT * FROM auth_profiles WHERE enabled=1 ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:12:26.670  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.670  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.getLocalUser(AbstractAuthenticationProfile.java:316)
25. SELECT * FROM users WHERE username='ftoth' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.671  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:26.671  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.getLocalUser(AbstractAuthenticationProfile.java:316)
26. SELECT * FROM users WHERE username='ftoth' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:26.779  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 6 msec}

-----> 2020-08-14 14:12:26.780  com.andtek.andphone.global.authprofiles.AbstractAuthenticationProfile.getLocalUser(AbstractAuthenticationProfile.java:316)
27. SELECT * FROM users WHERE username='ftoth' 
 {executed in 1 msec}

-----> 2020-08-14 14:12:27.084  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
124. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 3 msec}

-----> 2020-08-14 14:12:27.992  com.andtek.andphone.ccm.CCMPhone.save(CCMPhone.java:1849)
125. SELECT deviceName FROM phones WHERE deviceName='SEPA45630BB1748' 
 {executed in 25 msec}

-----> 2020-08-14 14:12:27.998  com.andtek.andphone.ccm.CCMPhone.save(CCMPhone.java:1868)
125. UPDATE phones SET phoneXML='<?xml version="1.0" encoding="UTF-8"?> <soapenv:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><ns:getPhoneResponse xmlns:ns="http://www.cisco.com/AXL/API/10.0"><return><device 
ctiid="18" uuid="{F6B78649-C8D2-4948-8D4D-36C13BE76F47}"><name>SEPA45630BB1748</name><description>9020</description><product>Cisco 
9971</product><model>Cisco 9971</model><class>Phone</class><protocol>SIP</protocol><protocolSide>User</protocolSide><callingSearchSpaceName 
/><devicePoolName uuid="{1B1B9EB6-7803-11D3-BDF0-00108302EAD1}">Default</devicePoolName><commonDeviceConfigName 
/><commonPhoneConfigName uuid="{AC243D17-98B4-4118-8FEB-5FF2E1B781AC}">Standard Common Phone 
Profile</commonPhoneConfigName><networkLocation>Use System Default</networkLocation><locationName 
uuid="{29C5C1C4-8871-4D1E-8394-0B9181E8C54D}">Hub_None</locationName><mediaResourceListName 
/><networkHoldMohAudioSourceId /><userHoldMohAudioSourceId /><automatedAlternateRoutingCSSName 
/><aarNeighborhoodName /><loadInformation special="false">sip9971.9-4-2SR2-2</loadInformation><vendorConfig><disableSpeaker>false</disableSpeaker><disableSpeakerAndHeadset>false</disableSpeakerAndHeadset><pcPort>0</pcPort><garp>1</garp><voiceVlanAccess>0</voiceVlanAccess><webAccess>0</webAccess><allCallsOnPrimary>0</allCallsOnPrimary><spanToPCPort>1</spanToPCPort><loggingDisplay>0</loggingDisplay><recordingTone>0</recordingTone><recordingToneLocalVolume>100</recordingToneLocalVolume><recordingToneRemoteVolume>50</recordingToneRemoteVolume><g722CodecSupport>0</g722CodecSupport><headsetWidebandUIControl>0</headsetWidebandUIControl><headsetWidebandEnable>0</headsetWidebandEnable><powerPriority>0</powerPriority><restrictDataRates>0</restrictDataRates><showRemotePrivacyCalls>0</showRemotePrivacyCalls><logCallForRemotePrivateCalls>1</logCallForRemotePrivateCalls></vendorConfig><versionStamp>{1597406313-A27808B5-3A49-4627-ABD2-BF388CA6F16A}</versionStamp><traceFlag>false</traceFlag><mlppDomainId 
/><mlppIndicationStatus>Default</mlppIndicationStatus><preemption>Default</preemption><useTrustedRelayPoint>Default</useTrustedRelayPoint><retryVideoCallAsAudio>true</retryVideoCallAsAudio><securityProfileName 
uuid="{1CD2CB25-C9F6-4786-A38F-1CF02DE290EE}">Universal Device Template - Model-independent 
Security Profile</securityProfileName><sipProfileName uuid="{FCBC7581-4D8D-48F3-917E-00B09FB39213}">Standard 
SIP Profile</sipProfileName><cgpnTransformationCssName /><useDevicePoolCgpnTransformCss>true</useDevicePoolCgpnTransformCss><geoLocationName 
/><geoLocationFilterName /><sendGeoLocation>false</sendGeoLocation><lines><line uuid="{11DDBBEF-D8B8-4194-8D7D-42E9F2282F5E}"><index>1</index><label 
/><display /><dirn uuid="{40D16E4D-5A9A-DFBC-B1B9-B3EEED778E5F}"><pattern>\+36110009020</pattern><routePartitionName 
uuid="{ACDF7B40-B405-D6EF-DD65-6E8B11EC835C}">FTOTH_Phones</routePartitionName></dirn><ringSetting>Ring</ringSetting><consecutiveRingSetting>Use 
System Default</consecutiveRingSetting><ringSettingIdlePickupAlert>Use System Default</ringSettingIdlePickupAlert><ringSettingActivePickupAlert>Use 
System Default</ringSettingActivePickupAlert><displayASCII /><e164Mask /><dialPlanWizardId 
/><mwlPolicy>Use System Policy</mwlPolicy><maxNumCalls>4</maxNumCalls><busyTrigger>2</busyTrigger><callInfoDisplay><callerName>true</callerName><callerNumber>false</callerNumber><redirectedNumber>false</redirectedNumber><dialedNumber>true</dialedNumber></callInfoDisplay><recordingProfileName 
uuid="6417f156-2283-94e4-3863-050842cc7c71">FTOTH2_REC_PROF</recordingProfileName><monitoringCssName 
/><recordingFlag>Automatic Call Recording Enabled</recordingFlag><audibleMwi>Default</audibleMwi><speedDial 
/><partitionUsage>General</partitionUsage><associatedEndusers /><missedCallLogging>true</missedCallLogging><recordingMediaSource>Gateway 
Preferred</recordingMediaSource></line></lines><numberOfButtons>114</numberOfButtons><phoneTemplateName 
uuid="{B18A11B6-B86C-4E7A-9EAE-FDD020B5301D}">SEPA45630BB1748-SIP-Individual Template</phoneTemplateName><speeddials 
/><busyLampFields /><primaryPhoneName /><ringSettingIdleBlfAudibleAlert>Default</ringSettingIdleBlfAudibleAlert><ringSettingBusyBlfAudibleAlert>Default</ringSettingBusyBlfAudibleAlert><blfDirectedCallParks 
/><addOnModules /><userLocale /><networkLocale /><idleTimeout>1</idleTimeout><authenticationUrl 
/><directoryUrl /><idleUrl /><informationUrl /><messagesUrl /><proxyServerUrl /><servicesUrl 
/><services><service><telecasterService uuid="{77445ED3-D5FD-576A-7FCD-F92A2F7DF5A4}">FTOTH2_RecStartStop</telecasterService><name>FTOTH2_RecStartStop</name><url>http://10.51.51.122:8080/andphone/Recorder?page=ondemand&amp;dev=#DEVICENAME#</url><urlButtonIndex>1</urlButtonIndex><urlLabel>Rec</urlLabel><serviceNameAscii 
/><phoneService>Standard IP Phone Service</phoneService><phoneServiceCategory>XML Service</phoneServiceCategory><vendor 
/><version /><priority>50</priority></service></services><softkeyTemplateName /><loginUserId 
/><defaultProfileName /><enableExtensionMobility>false</enableExtensionMobility><currentProfileName 
/><loginTime /><loginDuration /><currentConfig><userHoldMohAudioSourceId /><phoneTemplateName 
uuid="{B18A11B6-B86C-4E7A-9EAE-FDD020B5301D}">SEPA45630BB1748-SIP-Individual Template</phoneTemplateName><mlppDomainId 
/><mlppIndicationStatus>Default</mlppIndicationStatus><preemption>Default</preemption><softkeyTemplateName 
/><ignorePresentationIndicators>false</ignorePresentationIndicators><singleButtonBarge>Off</singleButtonBarge><joinAcrossLines>Off</joinAcrossLines><callInfoPrivacyStatus>Default</callInfoPrivacyStatus><dndStatus 
/><dndRingSetting /><dndOption>Use Common Phone Profile Setting</dndOption><alwaysUsePrimeLine>Default</alwaysUsePrimeLine><alwaysUsePrimeLineForVoiceMessage>Default</alwaysUsePrimeLineForVoiceMessage><emccCallingSearchSpaceName 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><deviceName 
/><model /><product /><deviceProtocol /><class /><addressMode /><allowAutoConfig /><remoteSrstOption 
/><remoteSrstIp /><remoteSrstPort /><remoteSipSrstIp /><remoteSipSrstPort /><geolocationInfo 
/><remoteLocationName /></currentConfig><singleButtonBarge>Off</singleButtonBarge><joinAcrossLines>Off</joinAcrossLines><builtInBridgeStatus>On</builtInBridgeStatus><callInfoPrivacyStatus>Default</callInfoPrivacyStatus><hlogStatus>On</hlogStatus><ownerUserId 
uuid="e7cd6c35-6a65-7f77-8a3f-6dab99549a42">ftoth</ownerUserId><ignorePresentationIndicators>false</ignorePresentationIndicators><packetCaptureMode>None</packetCaptureMode><packetCaptureDuration>0</packetCaptureDuration><subscribeCallingSearchSpaceName 
/><rerouteCallingSearchSpaceName /><allowCtiControlFlag>true</allowCtiControlFlag><presenceGroupName 
uuid="{AD243D17-98B4-4118-8FEB-5FF2E1B781AC}">Standard Presence group</presenceGroupName><unattendedPort>false</unattendedPort><requireDtmfReception>false</requireDtmfReception><rfc2833Disabled>false</rfc2833Disabled><certificateOperation>No 
Pending Operation</certificateOperation><certificateStatus>None</certificateStatus><upgradeFinishTime 
/><deviceMobilityMode>Default</deviceMobilityMode><remoteDevice>false</remoteDevice><dndOption>Use 
Common Phone Profile Setting</dndOption><dndRingSetting /><dndStatus>false</dndStatus><isActive>true</isActive><isDualMode>false</isDualMode><mobilityUserIdName 
/><phoneSuite>Default</phoneSuite><phoneServiceDisplay>Default</phoneServiceDisplay><isProtected>false</isProtected><mtpRequired>false</mtpRequired><mtpPreferedCodec>711ulaw</mtpPreferedCodec><dialRulesName 
/><sshUserId>admin</sshUserId><digestUser /><outboundCallRollover>No Rollover</outboundCallRollover><hotlineDevice>false</hotlineDevice><secureInformationUrl 
/><secureDirectoryUrl /><secureMessageUrl /><secureServicesUrl /><secureAuthenticationUrl /><secureIdleUrl 
/><alwaysUsePrimeLine>Default</alwaysUsePrimeLine><alwaysUsePrimeLineForVoiceMessage>Default</alwaysUsePrimeLineForVoiceMessage><featureControlPolicy 
/><deviceTrustMode>Not Trusted</deviceTrustMode><confidentialAccess><confidentialAccessMode 
/><confidentialAccessLevel>-1</confidentialAccessLevel></confidentialAccess><requireOffPremiseLocation>false</requireOffPremiseLocation><cgpnIngressDN 
/><useDevicePoolCgpnIngressDN>true</useDevicePoolCgpnIngressDN><msisdn /><enableCallRoutingToRdWhenNoneIsActive>false</enableCallRoutingToRdWhenNoneIsActive><wifiHotspotProfile 
/><wirelessLanProfileGroup /></device></return></ns:getPhoneResponse></soapenv:Body></soapenv:Envelope>',profileXML=NULL,lastUpdated='08/14/2020 
14:12:27.965' WHERE deviceName='SEPA45630BB1748' 
 {executed in 4 msec}

-----> 2020-08-14 14:12:28.274  com.andtek.andphone.ccm.Extension.save(Extension.java:885)
126. SELECT pattern FROM extensions WHERE pattern='+36110009020' AND partition='FTOTH_Phones' 
 {executed in 2 msec}

-----> 2020-08-14 14:12:28.278  com.andtek.andphone.ccm.Extension.save(Extension.java:904)
126. UPDATE extensions SET lineXML='<?xml version="1.0" encoding="UTF-8"?> <soapenv:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Body><ns:getLineResponse xmlns:ns="http://www.cisco.com/AXL/API/10.0"><return><directoryNumber 
uuid="{40D16E4D-5A9A-DFBC-B1B9-B3EEED778E5F}"><pattern>\+36110009020</pattern><description 
/><usage>Device</usage><routePartition uuid="{ACDF7B40-B405-D6EF-DD65-6E8B11EC835C}">FTOTH_Phones</routePartition><aarNeighborhoodName 
/><aarDestinationMask /><aarKeepCallHistory>true</aarKeepCallHistory><aarVoiceMailEnabled>false</aarVoiceMailEnabled><callForwardAll><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><secondaryCallingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardAll><callForwardBusy><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardBusy><callForwardBusyInt><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardBusyInt><callForwardNoAnswer><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/><duration /></callForwardNoAnswer><callForwardNoAnswerInt><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/><duration /></callForwardNoAnswerInt><callForwardNoCoverage><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardNoCoverage><callForwardNoCoverageInt><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardNoCoverageInt><callForwardOnFailure><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardOnFailure><callForwardAlternateParty><callingSearchSpace uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:nil="true" /><destination /><duration /></callForwardAlternateParty><callForwardNotRegistered><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardNotRegistered><callForwardNotRegisteredInt><forwardToVoiceMail>false</forwardToVoiceMail><callingSearchSpace 
uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true" /><destination 
/></callForwardNotRegisteredInt><callPickupGroupName uuid="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:nil="true" /><autoAnswer>Auto Answer Off</autoAnswer><networkHoldMohAudioSourceId /><userHoldMohAudioSourceId 
/><alertingName /><asciiAlertingName /><presenceGroupName uuid="{AD243D17-98B4-4118-8FEB-5FF2E1B781AC}">Standard 
Presence group</presenceGroupName><shareLineAppearanceCSS uuid="{FC388259-31FB-1909-9D57-7BC177D475E5}">FTOTH_CSS_Phones</shareLineAppearanceCSS><voiceMailProfileName 
/><patternPrecedence>Default</patternPrecedence><releaseClause>No Error</releaseClause><hrDuration 
/><hrInterval /><cfaCssPolicy>Use System Default</cfaCssPolicy><defaultActivatedDeviceName 
/><parkMonForwardNoRetrieveDn /><parkMonForwardNoRetrieveIntDn /><parkMonForwardNoRetrieveVmEnabled>false</parkMonForwardNoRetrieveVmEnabled><parkMonForwardNoRetrieveIntVmEnabled>false</parkMonForwardNoRetrieveIntVmEnabled><parkMonForwardNoRetrieveCssName 
/><parkMonForwardNoRetrieveIntCssName /><parkMonReversionTimer /><partyEntranceTone>Default</partyEntranceTone><directoryURIs 
/><allowCtiControlFlag>true</allowCtiControlFlag><rejectAnonymousCall>false</rejectAnonymousCall><patternUrgency>false</patternUrgency><confidentialAccess><confidentialAccessMode 
/><confidentialAccessLevel>-1</confidentialAccessLevel></confidentialAccess><externalCallControlProfile 
/><enterpriseAltNum><numMask /><isUrgent>f</isUrgent><addLocalRoutePartition>f</addLocalRoutePartition><routePartition 
/><advertiseGloballyIls>f</advertiseGloballyIls></enterpriseAltNum><e164AltNum><numMask /><isUrgent>f</isUrgent><addLocalRoutePartition>f</addLocalRoutePartition><routePartition 
/><advertiseGloballyIls>f</advertiseGloballyIls></e164AltNum><pstnFailover /><callControlAgentProfile 
/><associatedDevices><device>SEPA45630BB1748</device></associatedDevices><useEnterpriseAltNum>false</useEnterpriseAltNum><useE164AltNum>false</useE164AltNum><active>true</active></directoryNumber></return></ns:getLineResponse></soapenv:Body></soapenv:Envelope>',lastUpdated='08/14/2020 
14:12:28.271' WHERE pattern='+36110009020' AND partition='FTOTH_Phones' 
 {executed in 2 msec}

-----> 2020-08-14 14:12:28.287  com.andtek.andphone.callrouting.dao.CallListDao.selectCallListEntries(CallListDao.java:142)
127. SELECT * FROM callList WHERE ((calledEndParty='+36110009020' OR (lastredirectingparty='+36110009020' 
) ) OR (origCallingParty='+36110009020')) AND (type=0 OR type=10 OR type=1) ORDER by start 
DESC,callingparty 
 {executed in 6 msec}

-----> 2020-08-14 14:12:28.311  com.andtek.andphone.callrouting.CallList.selectReceivedCallsNoGap(CallList.java:960)
128. SELECT cl.*, h.id as h_id, h.history_sequence_id as h_history_sequence_id, h.created as h_created, 
h.callid as h_callid, h.type as h_type, h.cause as h_cause, h.duration_from_start as h_duration_from_start, 
h.callingparty as h_callingparty, h.callingparty_name as h_callingparty_name, h.callingparty_terminal 
as h_callingparty_terminal, h.calledparty as h_calledparty, h.calledparty_name as h_calledparty_name, 
h.calledparty_terminal as h_calledparty_terminal FROM callList cl, callList_history h WHERE 
cl.id = h.fk_calllist_id AND h.type = 'connected' AND h.calledparty IN ('+36110009020') ORDER 
BY cl.start DESC 
 {executed in 10 msec}

-----> 2020-08-14 14:12:29.482  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:29.483  com.andtek.andphone.callrouting.Module.background(Module.java:753)
20. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:12:29.481' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:30.935  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
129. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.757  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
131. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.758  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
131. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.758  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
131. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.758  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
131. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.758  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.759  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
21. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.760  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
130. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:33.762  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
130. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 2 msec}

-----> 2020-08-14 14:12:33.762  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.763  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
22. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:33.763  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:33.764  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:34.498  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:34.498  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
24. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:12:34.931  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
132. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:35.504  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:35.505  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
25. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:35.506  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:35.506  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
26. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:38.952  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
134. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.570  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.571  com.andtek.andphone.callrouting.Module.background(Module.java:753)
27. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:12:40.569' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.921  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:40.921  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.921  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.922  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:40.922  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.923  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.923  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.923  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.924  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:12:40.925  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.925  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.925  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.926  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:40.926  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:12:42.122  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
137. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.765  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
139. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.766  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
139. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:12:43.766  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
139. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.766  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
139. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.766  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.768  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
26. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 2 msec}

-----> 2020-08-14 14:12:43.769  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
138. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:43.769  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
138. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.770  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.770  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
27. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.770  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.771  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
20. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:43.771  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:43.771  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.584  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.585  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
22. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 1 msec}

-----> 2020-08-14 14:12:44.588  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.589  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
23. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:12:44.589  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
140. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.590  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.591  com.andtek.andphone.desktop.Module.getLicCount(Module.java:99)
24. SELECT DISTINCT cp.clientid from desktopclientphone cp, desktopclient dc WHERE dc.id = cp.clientid 
AND dc.type=0 
 {executed in 1 msec}

-----> 2020-08-14 14:12:44.598  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:44.599  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:12:45.322  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
141. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:45.603  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:45.604  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
26. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:45.604  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:45.605  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
27. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:48.483  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
142. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:51.625  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:51.626  com.andtek.andphone.callrouting.Module.background(Module.java:753)
20. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:12:51.623' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:51.640  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
143. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.773  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
145. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.773  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
145. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.774  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
145. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.774  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
145. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.774  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.775  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
21. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:12:53.776  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
144. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:12:53.776  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
144. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.776  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.777  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
22. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:53.777  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:53.777  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:54.632  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:54.633  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
24. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:12:54.840  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
146. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:55.637  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:12:55.638  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
25. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:12:55.638  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:12:55.639  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
26. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:12:58.023  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
147. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:01.181  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
149. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:02.658  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:02.658  com.andtek.andphone.callrouting.Module.background(Module.java:753)
27. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:02.656' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.780  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
151. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:13:03.780  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
151. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.780  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
151. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.781  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
151. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:13:03.781  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.782  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
20. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.783  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
150. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:13:03.784  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1069)
20. UPDATE rec_call SET rec_password='853AE90F0351324BD73EA615E6487517', status='3',lastaction=NOW() 
WHERE status='2' AND id=200 
 {executed in 1 msec}

-----> 2020-08-14 14:13:03.835  com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:401)
152. select t0.id as c0, t0.gcid as c1, t0.custom as c2, t0.admin as c3, t0.calledparty as c4, t0.calledpartyname 
as c5, t0.callingparty as c6, t0.origcallingparty as c7, t0.origcalledparty as c8, t0.lrp as 
c9, t0.lrp_name as c10, t0.keep as c11, t0.duplicate as c12 from rec_call t0 where t0.id in 
(200 ) 
 {executed in 1 msec}

-----> 2020-08-14 14:13:03.840  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:03.841  com.andtek.andphone.recorder.Admin.updateStorageProfileOnRecord(Admin.java:1200)
21. UPDATE rec_call SET keep=10,lastaction=NOW() WHERE id=200 
 {executed in 1 msec}

-----> 2020-08-14 14:13:04.030  com.andtek.andphone.utils.db.DBHandler.sqlQueryRS(DBHandler.java:205)
153. SELECT val FROM config WHERE module='recorder' AND param='keyStorePassword' 
 {executed in 1 msec}

-----> 2020-08-14 14:13:04.031  com.andtek.andphone.utils.db.DBHandler.sqlUpdate(DBHandler.java:88)
154. UPDATE config SET val='ENC:RM09p1pKsNXrQ5BfvQQK5w==' WHERE module='recorder' AND param='keyStorePassword' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:04.342  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 5 msec}

-----> 2020-08-14 14:13:04.343  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
155. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 4 msec}

-----> 2020-08-14 14:13:04.345  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1134)
22. UPDATE rec_call SET status=4,lastaction=NOW(),codec=2,filesize=42800,callingpartyname='',calledpartyname='',filename='200.rec' 
WHERE id=200 
 {executed in 3 msec}

-----> 2020-08-14 14:13:04.346  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
150. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 1 msec}

-----> 2020-08-14 14:13:04.346  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:04.346  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
23. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:04.347  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:04.347  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:04.664  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 2 msec}

-----> 2020-08-14 14:13:04.664  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
25. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:13:05.668  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:05.669  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
26. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:05.670  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:05.670  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
27. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:07.565  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
156. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:10.721  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
157. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:11.924  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:11.925  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.925  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
20. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.926  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:11.926  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
21. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.927  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.927  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.928  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:11.929  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.929  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.929  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.929  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.930  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:11.930  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:13.694  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:13.695  com.andtek.andphone.callrouting.Module.background(Module.java:753)
26. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:13.693' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:13.871  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
158. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.352  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
160. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.352  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
160. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.353  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
160. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.353  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
160. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.353  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.354  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
27. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.355  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
159. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.356  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
159. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.356  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.356  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
20. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.357  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.357  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:14.697  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:14.697  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
22. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:13:15.701  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:15.702  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
23. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:15.703  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:15.703  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
24. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:17.041  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
161. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:20.190  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
162. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:23.325  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
163. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.359  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
165. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.359  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
165. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.360  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
165. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.360  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
165. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.360  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.361  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
25. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:13:24.362  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
164. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:13:24.362  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
164. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.362  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.363  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
26. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:24.363  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.363  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
27. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.727  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:24.727  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
20. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.729  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:24.730  com.andtek.andphone.callrouting.Module.background(Module.java:753)
21. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:24.728' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:25.733  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:25.734  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
22. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:25.734  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:25.735  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
23. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:26.478  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
166. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:29.649  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
167. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:32.841  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
168. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.366  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
170. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:13:34.366  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
170. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.366  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
170. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.366  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
170. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.367  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:34.367  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
24. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.368  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
169. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:13:34.368  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
169. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.369  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:34.369  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
25. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.369  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.370  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:34.756  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:34.757  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
27. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:13:35.761  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:35.762  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
20. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:35.762  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:35.763  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
21. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:35.765  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:35.766  com.andtek.andphone.callrouting.Module.background(Module.java:753)
22. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:35.763' AND type 
<= 10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:36.068  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
171. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:39.211  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
172. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:42.411  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
173. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.924  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.924  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.924  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
23. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.925  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.925  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
24. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.926  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:42.926  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
25. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.927  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.927  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.928  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.928  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.928  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.929  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:42.929  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.374  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
175. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 3 msec}

-----> 2020-08-14 14:13:44.374  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
175. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.374  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
175. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.375  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
175. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.375  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.376  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
21. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:13:44.376  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
174. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.377  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
174. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.377  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.377  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
22. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.378  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:44.378  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
23. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.793  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.794  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
24. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 1 msec}

-----> 2020-08-14 14:13:44.797  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.797  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
25. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.799  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
176. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.800  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.800  com.andtek.andphone.desktop.Module.getLicCount(Module.java:99)
26. SELECT DISTINCT cp.clientid from desktopclientphone cp, desktopclient dc WHERE dc.id = cp.clientid 
AND dc.type=0 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.809  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:44.810  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
27. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:13:45.623  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
177. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:45.814  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:45.815  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
20. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:45.815  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:45.815  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
21. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:46.819  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:46.820  com.andtek.andphone.callrouting.Module.background(Module.java:753)
22. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:46.818' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:48.781  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
178. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:51.937  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
179. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.381  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
181. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 1 msec}

-----> 2020-08-14 14:13:54.381  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
181. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.381  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
181. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.382  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
181. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:13:54.382  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.383  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
23. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:13:54.384  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
180. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:13:54.385  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
180. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.385  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.386  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
24. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:54.386  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.386  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
25. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.841  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:54.842  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
26. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:13:55.133  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
182. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:55.846  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:13:55.847  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
27. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:13:55.847  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:55.848  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
20. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:13:57.854  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:13:57.855  com.andtek.andphone.callrouting.Module.background(Module.java:753)
21. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:13:57.853' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:13:58.342  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
183. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:00.017  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.018  com.andtek.andphone.partner.Module.getLicCount(Module.java:250)
22. SELECT COUNT(DISTINCT DN) AS lics FROM pgroupmember 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.023  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.024  com.andtek.andphone.mcast.Module.getLicCount(Module.java:270)
23. SELECT DISTINCT DN FROM mcastmember WHERE gid IN (SELECT id FROM mcastgroup) 
 {executed in 1 msec}

-----> 2020-08-14 14:14:00.026  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
184. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.026  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.027  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
24. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:00.027  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.028  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
25. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:00.035  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:00.036  com.andtek.andphone.global.license.LicenseHelper.getGroupMALicNumber(LicenseHelper.java:800)
26. SELECT COUNT(*) AS liccount FROM pgmanager 
 {executed in 1 msec}

-----> 2020-08-14 14:14:01.548  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
185. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.389  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
187. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.389  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
187. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.389  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
187. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.389  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
187. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.389  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.390  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
27. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.391  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
186. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:14:04.391  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
186. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.391  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.392  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
20. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.392  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.392  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
21. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.699  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
188. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.872  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:04.873  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
22. SELECT id FROM directories ORDER by name 
 {executed in 1 msec}

-----> 2020-08-14 14:14:05.877  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:05.878  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
23. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:14:05.878  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:05.878  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
24. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:07.878  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
189. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:08.888  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:08.888  com.andtek.andphone.callrouting.Module.background(Module.java:753)
25. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:14:08.887' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:11.069  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
190. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:13.933  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.933  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.934  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
26. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='global_users' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.934  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.934  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
27. SELECT r.rolename,r.description FROM roles r WHERE rolename='global_users' 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.935  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.935  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
20. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.936  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.936  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:284)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN userroles ur ON r.rid=ur.rid INNER JOIN 
users u ON ur.uid=u.uid WHERE u.username='admin' AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.937  com.andtek.andphone.users.securityfilter.ANDRealm.isUserInRole(ANDRealm.java:299)
21. SELECT u.username,r.rolename FROM roles r INNER JOIN poolroles pr ON r.rid=pr.rid INNER JOIN 
poolentries pe ON pr.pid=pe.poolid INNER JOIN users u ON pe.entry=u.username WHERE u.username='admin' 
AND (r.rolename='manager' OR r.rolename='manager') 
 {executed in 1 msec}

-----> 2020-08-14 14:14:13.937  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.938  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
22. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 1 msec}

-----> 2020-08-14 14:14:13.938  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:13.939  com.andtek.andphone.users.securityfilter.ANDUserDatabase.findRole(ANDUserDatabase.java:60)
23. SELECT r.rolename,r.description FROM roles r WHERE rolename='manager' 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.210  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
191. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:14.398  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
193. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.398  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
193. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.399  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
193. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.399  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
193. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.399  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.400  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
24. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 1 msec}

-----> 2020-08-14 14:14:14.400  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
192. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.401  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
192. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.401  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.401  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
25. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.402  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:14.402  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
26. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.902  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:14.903  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
27. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:14:15.907  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:15.908  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
20. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:14:15.908  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:15.909  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
21. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:14:17.400  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
194. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:19.922  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
22. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:19.922  com.andtek.andphone.callrouting.Module.background(Module.java:753)
22. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:14:19.921' AND type 
<= 10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:20.563  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
195. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:23.715  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
196. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.404  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:479)
198. SELECT * FROM rec_rulesets ORDER BY priority 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.405  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
198. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=15 ORDER by id 
 {executed in 1 msec}

-----> 2020-08-14 14:14:24.405  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
198. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=16 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.405  com.andtek.andphone.recorder.RuleSet.loadRules(RuleSet.java:497)
198. SELECT id,type,source,value FROM rec_rules WHERE rulesetid=17 ORDER by id 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.406  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
23. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:24.406  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1063)
23. UPDATE rec_call SET status=2,lastaction=NOW(), rec_password='853AE90F0351324BD73EA615E6487517' 
WHERE status<=1 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction)) > 300 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.407  com.andtek.andphone.recorder.Admin.postProcessRecording(Admin.java:1064)
197. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE status=2 ORDER BY start DESC 
 {executed in 1 msec}

-----> 2020-08-14 14:14:24.408  com.andtek.andphone.recorder.Admin.storageProfileMaintenance(Admin.java:914)
197. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM rec_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP("end")) 
> 3600 AND status!=6 ORDER BY "end" 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.408  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
24. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.409  com.andtek.andphone.recorder.AdminHelper.dbDeleteRecordingByStatusAndProfile(AdminHelper.java:123)
24. DELETE FROM rec_call WHERE status=5 AND keep=10 
 {executed in 1 msec}

-----> 2020-08-14 14:14:24.409  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
25. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.409  com.andtek.andphone.recorder.Recording.numberOfCurrentRecordings(Recording.java:1860)
25. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:24.935  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
26. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:24.935  com.andtek.andphone.directory.Directory.getDirectories(Directory.java:1034)
26. SELECT id FROM directories ORDER by name 
 {executed in 0 msec}

-----> 2020-08-14 14:14:25.940  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
27. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:25.941  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:295)
27. SELECT id,status,start,UNIX_TIMESTAMP(start) AS ustart,"end",UNIX_TIMESTAMP("end") AS uend,SEC_TO_TIME(UNIX_TIMESTAMP("end")-UNIX_TIMESTAMP(start)) 
AS duration,UNIX_TIMESTAMP(NOW()) - UNIX_TIMESTAMP(lastaction) AS lastaction,UNIX_TIMESTAMP(lastaction) 
AS ulastaction,callingparty,calledparty,callingpartyname,calledpartyname,origcallingparty,origcalledparty,phoneip,remoteip,initiated,initiator,signaling,codec,keep,custom,admin,recorder,gcid,filesize, 
filename,duplicate,rec_password FROM recmgmt_call WHERE keep=10 AND (UNIX_TIMESTAMP(NOW()) 
- UNIX_TIMESTAMP(start)) > 3600 AND status!=6 ORDER BY start 
 {executed in 1 msec}

-----> 2020-08-14 14:14:25.942  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
20. select 1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:25.942  com.andtek.andphone.recordermgmt.Admin.storageProfileMaintenance(Admin.java:345)
20. DELETE FROM recmgmt_call WHERE status=5 AND keep=10 
 {executed in 0 msec}

-----> 2020-08-14 14:14:26.890  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
199. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 0 msec}

-----> 2020-08-14 14:14:30.037  com.andtek.andphone.recorder.services.impl.LicenseServiceImpl.usedLicenses(LicenseServiceImpl.java:49)
200. SELECT COUNT(*) AS count FROM rec_call WHERE status=1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:30.957  com.andtek.andphone.JTAPIThread.getDbcon(JTAPIThread.java:3917)
21. select 1 
 {executed in 1 msec}

-----> 2020-08-14 14:14:30.959  com.andtek.andphone.callrouting.Module.background(Module.java:753)
21. SELECT * FROM callList WHERE retries > 0 AND nextRetry < '08/14/2020 14:14:30.955' AND type 
<= 10 
 {executed in 2 msec}

