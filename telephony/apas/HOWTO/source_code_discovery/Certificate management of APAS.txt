==============================
Certificate management of APAS
==============================

- Keystores
- List of certificates
- Creating APAS certificate
- Export APAS certificate
- Export CSR
- Import APAS certificate
- Import trusted certificate

------------------------------------------------------------------------------------------------------------------------------
Keystores
=========

/var/lib/tomcat/.keystore
	Keystore type: 	PKCS12
	Password:		changeit
	Aliases: 		tomcat (PrivateKeyEntry)

	Old keysore file of APAS !!! DEPRECATED !!!

	
/var/lib/tomcat/.keystore.jks							: Keystore of APAS Tomcat and stores trust certificate for SAML SSO
	Keystore type: 	JKS
	Password:		changeit
	Aliases: 		andphone (PrivateKeyEntry)
	Config:			Config(global/ApasKeystoreFile)
	
/var/lib/tomcat/.trust_keystore.jks						: Keystore of imported server certificates
	Keystore type: 	JKS
	Password:		changeit
	Aliases: 		cucm70, cucm85
	Config:			Config(global/TrustedCertificatesKeystoreFile)
	
	
/var/lib/andphone/certificate.store						: used by recorder
	Keystore type: 	JKS
	Password:		ha
	Aliases: 		andpk (PrivateKeyEntry)
	Config:			Config(recorder/CertificatePath)
	
------------------------------------------------------------------------------------------------------------------------------
List of certificates
====================
You can get list of certificates in:

	APAS/General/Security/[Certificate List]
	
	
--> security_gwtappMain
	...
	--> RemoteGetCertificateList(ServerActionResult serverAction)
		--> RPCServletServiceImpl.RemoteGetCertificateList(...)
			--> ApasCertificateHelper.loadKeyStoreAliases(...)						<-- /var/lib/tomcat/.trust_keystore.jks
			--> ApasCertificateHelper.loadKeyStoreAliases()							<--	/var/lib/tomcat/.keystore.jks
			--> com.andtek.andphone.security.AndPhoneCA.loadKeyStoreAliases()		<-- /var/lib/andphone/certificate.store
		--> buildCertificateManagerPanel(...)
	
------------------------------------------------------------------------------------------------------------------------------
Creating APAS certificate	
=========================
Some important info:

	Old versions of APAS shipped with an EXPIRED and self-signed certificate. First generate a new 
	certificate and sign it with CA (it can be your test CA in OpenAM - see more: APAS_SRC/development/sso-idp-helper-scripts).
	Use FQDN in APAS/Global/Configuration/[AndPhone Server]/(Name/IP) otherwise APAS will create certificate with CN field containing IP address 
	and not FQDN which will cause problems during HTTPS access.

APAS/Global/Security/[Certificate List]/(Create APAS Certificate)

	It really re-creates the key-pair used by TLS connections with other servers (e.g. with CUCM via SIP trunk).

Call flows:
	
	UI rendering
	------------
	com.andtek.andphone.global.gwtapp.client.security_gwtappMain
	--> RemoteGetCertificateList()													// to collect certificate list + data for certificate generation -> GwtCertificateListInitBean
		RPC --> com.andtek.andphone.global.gwtapp.server.RPCglobalServiceImpl.RemoteGetCertificateList()
			- cn = ApasIPAddressHelper.getAndPhoneServerNameOrIPwithoutPort()				// getting CN from APAS host/IP for certificate creation (later)
			- GwtCertSignRequestDataBean..setCommonName(cn)
			
		--> buildCertificateManagerPanel(GwtCertificateListInitBean record, ...)
			- CERTIFICATE_LIST_BEAN = record
			- certificate entries in record.getDatarows() are rendered in the list
			
	Event handling
	--------------
	- Button [Create APAS Certificate] 
		--> record = CERTIFICATE_LIST_BEAN.getSelfSignedCertificateData()					// created by RemoteGetCertificateList()
		--> openSignRequestPanel(record, "add");
			--> GwtCertSignRequestWindow.buildFormPanel(record, func)
				- it renders certificate form with 'Create' button
				
	- Button [Create]
		--> GwtCertSignRequestWindow.onFormPanelSubmitEvent(formPanel, false);
			--> RemoteGenerateApasSelfSignedCertificate(DATA_RECORD, func, closeWindow);
				RPC ==> RPCglobalServiceImpl.RemoteGenerateApasSelfSignedCertificate(...)
					------------------------- if certificateType == recorder -------------------------
						--> AndPhoneCA.createRecorderCertificate(...)
					------------------------- else -------------------------
						-------------- if record.getDnsNameExt() -------------
							- add it to SAN/DNSName
						-------------- if record.getEmail() -------------
							- add it to SAN/RFC822Name							
						--> ApasCertificateHelper.generateV3Certificate(DN, year, subjectAlternativeNameExts, keyAlg)
							- it keypair generated in constructor --> generateRSAKeyPair(keySize)								
							--> generateV3Certificate(dn, pair, year, subjectAlternativeNameExts, keyAlg)								<<<<<<<<<<<< generating certificate from pre-generated key-pair
								- initialization of X509V3CertificateGenerator
								- collecting SubjectAlternativeName items
									- adding GeneralName.rfc822Name if empty (hardcoded: info@andtek.com)
									- adding GeneralName.iPAddress if empty from config(global, ApasIpAddress)
								- adding SubjectAlternativeName
						-->	com.andtek.andphone.global.Module.importAPASCertificate(cert, alias, CertHelper.getKeyPair());
						--> ApasCertificateHelper.generateCSR(...)
							--> csr = generatePKCS10(...)
							--> toPem(csr)
						--> csrRequestFile = ApasCertificateHelper.saveCSR(...)
						--> record.setCsrDownloadURL(csrDownloadURL)
						
							csrDownloadURL: /andphone/Admin?module=<MODULE>&page=security&func=gwtcsrdownload&csrrequestfile=<csrRequestFile>
							
				SaveFormProgressTimerAsyncCallback CALLBACK ==> onSuccess
					--> GwtCertSignRequestWindow.buildCSRDownloadPanel(...)
						click button 'Download'			// exporting CSR
							--> Window.open(DATA_RECORD.getCsrDownloadURL(), ...)
								- file generated before downloaded in browser popup 

------------------------------------------------------------------------------------------------------------------------------
Export APAS certificate	
=======================
APAS/Global/Security/[Certificate List]/<item>('Export' icon)

UI:
com.andtek.andphone.global.gwtapp.client.security_gwtappMain
--> RemoteGetCertificateList()
	--> buildCertificateManagerPanel(GwtCertificateListInitBean record, ...)
		- certificate entries in record.getDatarows()
		------------------- loop on certificate entries ---------------------
			- removing 'rec_' prefix from aliases
			- building data array list for 
			- building column data
			- cell listeners:
				- col index:4 -> url = certDownloadURL
				
	===> click 'Export' icon
	Export certificate:
		--> com.andtek.andphone.global.Admin.security_gwtcertexport(ConnectionBean connection)
			- setting keystore type, real alias, password, keystore file by condition: certificateType == GwtCertificateDataBean.CERT_RECORDER ?
			- loading keytore
			- getting certificate by real alias
			- writing certificate into file with PEM format							

------------------------------------------------------------------------------------------------------------------------------
Export CSR
==========
APAS/Global/Security/[Certificate List]/<item>('CSR' icon)

UI:
com.andtek.andphone.global.gwtapp.client.security_gwtappMain
--> RemoteGetCertificateList()
	--> buildCertificateManagerPanel(GwtCertificateListInitBean record, ...)
		- certificate entries in record.getDatarows()
		------------------- loop on certificate entries ---------------------
			- removing 'rec_' prefix from aliases
			- building data array list for 
			- building column data
			- cell listeners:
				- col index:5 -> url = csrDownloadURL
				
	===> click 
	Export certificate:
		--> com.andtek.andphone.global.Admin.security_gwtcertexport(ConnectionBean connection)
			------------------- if certificateType == GwtCertificateDataBean.CERT_RECORDER ------------------- 		// 'recorder'
			...
	
			----------------------------- else -----------------------------
			--> com.andtek.andphone.global.Admin.security_gwtcsrexport(ConnectionBean connection)
				- getting parameters
				- loading keystore
				--> Certificate cert = keystore.getCertificate(realAlias)
				- getting DN fields from cert
				--> csr = certHelper.generateCSR(alg, dn);
				--> csrFile = certHelper.saveCSR(csr, alias)
				--> csrDownload(request, response, csrFile)
					- CSR is written into HTTP response
				
------------------------------------------------------------------------------------------------------------------------------
Import APAS certificate	
=======================
APAS/Global/Security/[Certificate List]/(Import APAS Certificate)

Event Handling
--------------
security_gwtappMain
- Button 'Import APAS Certificate'
	--> openApasCertificateImportWindow()
		--> this.APAS_CERTIFICATE_IMPORT_WINDOW.buildFormPanel(record, func)
			it renders 'Import' dialog
			
- Button 'Import'
	--> GwtCertificateImportWindow.formPanel.getForm().submit(main.CERTIFICATE_LIST_BEAN.getCertUploadURL(), ...)
		--> URL(/andphone/Admin?module=global&page=security&func=gwtapascertimport)
			--> com.andtek.andphone.Admin.doGet()
				--> com.andtek.andphone.utils.Admin.getModuleAdminPage(connection);
					-->	getModuleAdmin(module, connection);
					  to get module Admin class (com.andtek.andphone.global)
					  
					--> com.andtek.andphone.global.Admin.security_gwtapascertimport(ConnectionBean connection)			<<<<< by reflection
						--> ca = AndPhoneCA.getInstance(AndPhoneCA.KS_PASSWD)			// ha
						--> AndPhoneCA.importRecorderCertificate(import_certfile, certFileFormat, alias, keyStorePassword)
							------------------------------ in not 'andpk' -----------------------------------------
							- alias = "REC_" + alias


							
				
------------------------------------------------------------------------------------------------------------------------------
Import trusted certificate
==========================
1. Getting certificate from 3rd party server (e.g. CUCM, Exchange Server).

Download a certificate 

2. APAS/Global/Security/[Certificate List]/(Import Trusted Certificate) --> [Import Trusted Certificate]/(Import)

Call flows:

	UI rendering
	------------
	security_gwtappMain.onModuleLoad()
		--> initMainPanel()
			--> RemoteGetSSLCertificateKey()
				--> RPCServletService.RemoteGetSSLCertificateKey(AndGWTAsyncCallback)
					-- RPC --> RPCglobalServiceImpl.RemoteGetSSLCertificateKey()
					  to read revocation list from /var/lib/andphone/andphone.crl (if exists)
						-- CALLBACK --> onSuccess
							--> security_gwtappMain.buildSSLCertificateKeyForm()
							--> RemoteGetCertificateList(...)
								-- RPC --> RPCglobalServiceImpl.RemoteGetCertificateList()
									- to load certificates
										- it sets CERT upload URL (/andphone/Admin?module=global&page=security&func=gwtcertimport)
										- it loads certificate list (/andphone/Admin?module=global&page=security&func=gwtapascertimport)
										- it loads aliases from trusted keystore file (/var/lib/tomcat5/.trust_keystore.jks)
										- it loads aliases from normal keystore file (/var/lib/tomcat5/.keystore.jks)
									
									-- CALLBACK --> onSuccess
										--> buildCertificateManagerPanel(...)
											- it renders certificate management buttons
											- it renders certificate list
						
						
						
	Event handling
	--------------
	security_gwtappMain.java
	- Button 'Import Trusted Certificate'
		--> buildDynamicCertificateImportFormPanel()
		  - to render certificate import dialog
			--> CERTIFICATE_IMPORT_WINDOW.buildFormPanel(record, func);
				it renders 'Import' dialog
	
	- Button 'Import'
		--> GwtCertificateImportWindow.formPanel.getForm().submit(main.CERTIFICATE_LIST_BEAN.getCertUploadURL(), ...)
			--> URL(/andphone/Admin?module=global&page=security&func=gwtcertimport)
				--> com.andtek.andphone.Admin.doGet()
					--> com.andtek.andphone.utils.Admin.getModuleAdminPage(connection);
						-->	getModuleAdmin(module, connection);
						  to get module Admin class (com.andtek.andphone.global)
						  
						--> com.andtek.andphone.global.Admin.security_gwtcertimport(ConnectionBean connection)			<<<<< by reflection
							--> com.andtek.andphone.global.Module.importTrustedCertificate(import_certfile, alias);
							
							
------------------------------------------------------------------------------------------------------------------------------
Testing certification
=====================
- APAS/Global/Servers
- Choose a server from a list which 'Transport' is 'tls'.
- Press 'Test Connection' button
	

Call flows:
	
	UI rendering
	------------
	servers_gwtappMain.onModuleLoad()
		--> RemoteGetServersPageInitBean()
			--> RPCServletService.RemoteGetServersPageInitBean(new AndGWTAsyncCallback()
				-- RPC --> RPCglobalServiceImpl.RemoteGetServersPageInitBean()
					- to get server names 
					-- CALLBACK --> onSuccess
		--> RemoteGetServersList()
			-- RPC --> RPCglobalServiceImpl.RemoteGetServersList()
				- to get server groups and servers from database (servergroup - servergroup_members - servers)
				-- CALLBACK --> onSuccess
					--> servers_gwtappMain.buildDynamicListGrid(datarows, getServerActionResult());
						- rendering server-group table
						- listners on edit icon click and dblclick on row ===> calls server dialog
						
						--> AndGWTCommonFunctions.createEditIconColumnConfig(MODULE_BASE_URL),
							--> AndGWTCommonFunctions.createEditIconColumnConfig(MODULE_BASE_URL, "script_edit.gif", "edit");
								- it renders edit icon 
								
								
	Event handling
	--------------
	- edit icon or DblClick in row
		--> servers_gwtappMain.RemoteGetServerByID(Integer.parseInt(key));
			--> RPCServletService.RemoteGetServerByID(...)
				-- RPC --> RPCglobalServiceImpl.RemoteGetServerByID()
					-- CALLBACK --> onSuccess
						--> servers_gwtappMain.buildDynamicFormPanel(recordIF, "add");
							--> ServerGenericWindow.createWindow(record.getServerType(), this)
							--> ServerGenericWindow.buildFormPanel(record, func);
								- it renders 'Test Connection' button
								
	- Button 'Test Connection'
		--> ServerGenericWindow.RemoteTestServerConnection(server, button)
			--> RPCServletService.RemoteTestServerConnection(...)
				-- RPC --> RPCglobalServiceImpl.RemoteTestServerConnection(...)					<<<<<<<<<<<<<<<<<<<<<<<< testing server
					--> RPCglobalServiceImpl.TestSIPConnection(server)
						--> sendKeepAliveBlocking(SIPServer.KEEPALIVE_TIMEOUT)
							--> SIPServer.sendKeepAliveBlocking(long timeout) 
								SEE MORE: APAS server connections
					OR
					--> return TestFTPConnection(server)
					OR
					...
				-- CALLBACK --> onSuccess
					- show message
	




	

	