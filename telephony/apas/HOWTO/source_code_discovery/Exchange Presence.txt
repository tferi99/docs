=================
Exchange Presence
=================
- Configuration
- Use Cases
- Caching present result
- Troubleshooting, tracing

-------------------------------------------------------------------------------------------------------------------
Configuration
=============
- ???
	set here: 	APAS/General/Servers/CHOOSE/(Event pulling period)
	stored:		config(global/servers.exchange.EventPullingPeriod)
	default:	60
	used:		com.andtek.andphone.presence.msews.ExchangeEventNotificationsManager
	
	initialized:	-- >com.andtek.andphone.presence.Module.init(JTAPIThread jtapi)	during startup
						--> ExchangeEventNotificationsManager.loadConfig()
							--> setPullingPeriod(int period)
								--> ExchangeEventNotificationsPuller.setPullingPeriod(...)
								--> ExchangeEventNotificationsPuller.stopPullingTimer()
								--> startStopPullingIfNecessary()
								
								
	saved:		from GWT config page
					--> RPCglobalServiceImpl.RemoteSaveServer(...)
						--> ExchangeEventNotificationsManager.setPullingPeriod(int period)
							--> saveConfig()
					
	
	
	
	
	
	
	
	ExchangeEventNotificationsManager:
	----------------------------------
	- Class for managing event notifications subscriptions to Exchange server.
	- Push and Pull subscriptions are supported
	- Singleton class - getting:	
 
		public static ExchangeEventNotificationsManager.getInstance()
	
	- It creates ExchangeEventNotificationsPuller
	
-------------------------------------------------------------------------------------------------------------------
Use Cases
=========
- Exchange server manual connection test:

	APAS/General/Servers/CHOOSE/[Servers]/[Server 1]/(Test Connection)
		--> com.andtek.andphone.global.gwtapp.server.RPCglobalServiceImpl.RemoteTestServerConnection()
			--> ExchangeCachedCalendarServer.testConnection()

			
- Exchange server automatical (background) connection test:
	ServerGroup.ServerGroup()
		- verifyThread = new ServerGroupVerifier(this)
		--> ServerGroupVerifier.ServerGroupVerifier()
			--> APASThread.run()
				--> com.andtek.andphone.global.servers.ServerGroup.ServerGroupVerifier.run()
					--> ServerGroup.checkServerAvailability()
						--> ExchangeCachedCalendarServer.verifyConnection()
							--> ExchangeService exchangeService.resolveName(username);
			
- Directory search and dynamic subscription:
	log:
	

	
		[DEBUG] [NioProcessor-1] [ClientProtocolHandler.java:335] - handleXMLMessage(): ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=b62d9c6], hashCode=71628f27] | Received CMINA_XML: <searchDirectory id="4" phone="SEP64A0E714F271" seq="1">
		[DEBUG] [APAS-Communicator-DirectorySearchThread-1] [ClientConnectionMina.java:2864] - CMINA_XML:ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=b62d9c6], hashCode=71628f27]: sendXml(<searchDirectoryResult seq="1" error="0" errorMessage="" exceptionMessage="">
		[DEBUG] [NioProcessor-1] [ClientProtocolHandler.java:335] - handleXMLMessage(): ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=b62d9c6], hashCode=71628f27] | Received CMINA_XML: <Presence><PresenceRegister><ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz"/><CUPSIdentification userID="ssotest1@andtek.cee.cs.eilab.biz"/></PresenceRegister></Presence>
		[DEBUG] [APAS-defaultWorker-13] [ClientConnectionMina.java:2864] - CMINA_XML:ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=b62d9c6], hashCode=71628f27]: sendXml(<Presence><PresenceRegistered><ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz" status="UNKNOWN"></ExchangeCalendarIdentification></PresenceRegistered></Presence>)
		[DEBUG] [APAS-defaultWorker-16] [ClientConnectionMina.java:2864] - CMINA_XML:ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=b62d9c6], hashCode=71628f27]: sendXml(<Presence><PresenceUpdate><ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz" status="Free"></ExchangeCalendarIdentification></PresenceUpdate></Presence>)
			
		DC -> APAS:			<searchDirectory id="4" phone="SEP64A0E714F271" seq="1">
								 <attribute id="5"/>
								 <attribute id="3"/>
								 <attribute id="2"/>
								 <attribute id="4"/>
								 <attribute id="1">ssotest</attribute>
							</searchDirectory>
							
		APAS -> DC:			<searchDirectoryResult seq="1" error="0" errorMessage="" exceptionMessage="">
		
		DC -> APAS:			<Presence>
								<PresenceRegister>
									<ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz"/>
									<CUPSIdentification userID="ssotest1@andtek.cee.cs.eilab.biz"/>
								</PresenceRegister>
							</Presence>
		
		APAS -> DC:			<Presence>
								<PresenceRegistered>
									<ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz" status="UNKNOWN"></ExchangeCalendarIdentification>
								</PresenceRegistered>
							</Presence>)
	
		APAS -> DC:			<Presence>
								<PresenceUpdate>
									<ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz" status="Free"></ExchangeCalendarIdentification>
								</PresenceUpdate>
							</Presence>
			
		
-	Search in DC

		XML message from DC (searchDirectory) ==> ClientConnectionMina.handleEvents(...)
			- getting parameters from XML message
			--> new DirectorySearchThread(this, dirs, inputItems, false, seq, true);
				------------------------------ if isAllowedDynamicPresenceSubscription -------------------------------
					--> searcher = new DynamicBlfPresenceDesktopDirectorySearcher(connection, client, dirs, inputItems, doOr, seq, throwDirException);
				---------------------------- else ---------------------------
					--> searcher = new LegacyDesktopDirectorySearcher(connection, client, dirs, inputItems, doOr, seq, throwDirException);	
				--> searcher.search()
				
				
		NOTE: 
			Search always calls LegacyDesktopDirectorySearcher, DynamicBlfPresenceDesktopDirectorySearcher not completed and NOT USED currently.
			DC asks 
				
				
- AFTER search in DC requests presence information from APAS with PresenceRegister:

	<Presence><PresenceRegister>... ==> PresenceProtocolHelper.ClientConnectionMina.handleEvents()
		--> handleClientPresenceMessage(msg)
			--> subscribeEmailToExchangePresence(identification.getIdentifier())
				--> DynamicPresenceSubscriptionManager.subscribe(String id, Object userData)		<< ExchangeCalendarIdentification
					--> globalSubscriptions.put(id, new Date())
			
			?????
			--> PresenceProtocolHelper.parseClientMessage(msgXMLstring)


				
				
- Calendar entry changed:	Exchange server sends POST request subsribers (APAS):

		10.51.51.175	10.51.51.121	HTTP/XML	619	POST /andphone/exchange/pushlistener HTTP/1.1 
			
	and calls APAS servlet:	
	
	- Exchange server sends a groadcast message, e.g:

		10.51.51.175	10.51.51.255	BROWSER	243	Host Announcement CEECS-WINAW-EX, Workstation, Server, NT Workstation, NT Server

		<?xml version="1.0" encoding="utf-8"?>
		<soap11:Envelope
			xmlns:soap11="http://schemas.xmlsoap.org/soap/envelope/">
			<soap11:Header>
				<t:RequestServerVersion
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages" Version="Exchange2010_SP2"
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types" />
				</soap11:Header>
				<soap11:Body>
					<m:SendNotification
						xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types"
						xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages">
						<m:ResponseMessages>
							<m:SendNotificationResponseMessage ResponseClass="Success">
								<m:ResponseCode>NoError</m:ResponseCode>
								<m:Notification>
									<t:SubscriptionId>JgBjZWVjcy13aW5hdy1leC5hbmR0ZWsuY2VlLmNzLmVpbGFiLmJpehAAAAB74/ElmFjbTK+VltnVi/H1O9UWEmVQ1ggQAAAA6qidCiSHFkeaIyID+fKrGg==</t:SubscriptionId>
									<t:PreviousWatermark>AQAAAOpWVDDWfqxLm3RGwWywdiv/iQIAAAAAAAA=</t:PreviousWatermark>
									<t:MoreEvents>false</t:MoreEvents>
									<t:CreatedEvent>
										<t:Watermark>AQAAAOpWVDDWfqxLm3RGwWywdiv/iQIAAAAAAAE=</t:Watermark>
										<t:TimeStamp>2018-11-22T10:30:10Z</t:TimeStamp>
										<t:ItemId Id="AQMkADBhOWRhOGVhLTg3MjQtNDcxNi05YTIzLTIyADAzZjlmMmFiMWEARgAAA9YQQZzoNWBKlZQ6xBJtjQkHAN2NyHIGtalDnSoEKBVV00UAAAIBDQAAAN2NyHIGtalDnSoEKBVV00UAAAINMgAAAA==" ChangeKey="DwAAAA==" />
										<t:ParentFolderId Id="AQMkADBhOWRhOGVhLTg3MjQtNDcxNi05YTIzLTIyADAzZjlmMmFiMWEALgAAA9YQQZzoNWBKlZQ6xBJtjQkBAN2NyHIGtalDnSoEKBVV00UAAAIBDQAAAA==" ChangeKey="AQAAAA==" />
									</t:CreatedEvent>
									<t:ModifiedEvent>
										<t:Watermark>AQAAAOpWVDDWfqxLm3RGwWywdisCigIAAAAAAAE=</t:Watermark>
										<t:TimeStamp>2018-11-22T10:30:10Z</t:TimeStamp>
										<t:FolderId Id="AQMkADBhOWRhOGVhLTg3MjQtNDcxNi05YTIzLTIyADAzZjlmMmFiMWEALgAAA9YQQZzoNWBKlZQ6xBJtjQkBAN2NyHIGtalDnSoEKBVV00UAAAIBDQAAAA==" ChangeKey="AgAAAA==" />
										<t:ParentFolderId Id="AQMkADBhOWRhOGVhLTg3MjQtNDcxNi05YTIzLTIyADAzZjlmMmFiMWEALgAAA9YQQZzoNWBKlZQ6xBJtjQkBAN2NyHIGtalDnSoEKBVV00UAAAIBCAAAAA==" ChangeKey="AQAAAA==" />
									</t:ModifiedEvent>
								</m:Notification>
							</m:SendNotificationResponseMessage>
						</m:ResponseMessages>
					</m:SendNotification>
				</soap11:Body>
			</soap11:Envelope>

	- APAS processes notification:
	
		POST ==> com.andtek.andphone.presence.msews.ExchangePushListener.doPost(...)
			--> traceContent(...)
			---------------------- notification ID not found ----------------------------
			--> LOG:	"Received event notification push from EWS server but no push entry matches subscriptionID"
			
			
			
-------------------------------------------------------------------------------------------------------------------
Caching present result
======================
To get info call this debug page:

	APAS:8080/andphone/JTAPIServlet?debug=presence_exchange

	--> doPresenceExchangeDebug(request, response, out, output, noRequiredLogin, refreshSecs)
		----------------------- loop on presence sources where instanceof ExchangeCalendarPresenceSourceImpl ----------------------------------
		--> snapshots = exchangeSource.getPresenceSnaphsot()
			
		
- Unregister snapshots:

		PresenceSource[] sources = com.andtek.andphone.presence.Module.getPresenceProvider().getPresenceSourcesAsArray();
		for (PresenceSource source : sources) {
			if (source instanceof ExchangeCalendarPresenceSourceImpl) {
				return (ExchangeCalendarPresenceSourceImpl)source;
			}
		}


	after unregister APAS sends messages about unregistered addresses:
	
		[DEBUG] [APAS-defaultWorker-20] [ClientConnectionMina.java:2864] - CMINA_XML:ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=4bef3299], hashCode=499f8535]: sendXml(<Presence><PresenceUnregistered><ExchangeCalendarIdentification email="ssotest1@andtek.cee.cs.eilab.biz" status="Free"></ExchangeCalendarIdentification></PresenceUnregistered></Presence>)
		[DEBUG] [APAS-defaultWorker-23] [ClientConnectionMina.java:2864] - CMINA_XML:ClientConnection[Client[14, ftoth@ftoth-PC, , 6.0.3, Windows 7, 1, hashCode=4bef3299], hashCode=499f8535]: sendXml(<Presence><PresenceUnregistered><ExchangeCalendarIdentification email="ssotest2@andtek.cee.cs.eilab.biz" status="Free"></ExchangeCalendarIdentification></PresenceUnregistered></Presence>)


	
	
	
-------------------------------------------------------------------------------------------------------------------
Troubleshooting, tracing
========================
Exchange Presence writes tracing information with "ews_trace" logger into:

	/var/log/apas/ews_trace.log
	
This file is written by:
- EWS API 

	ExchangeTraceListener which implements ITraceListener registered in 
		
		com.andtek.andphone.presence.msews.ExchangeCachedCalendarServer
		
	to trace EWS API.
	
- com.andtek.andphone.presence.msews.ExchangePushListener

	It's a servlet which called by Exchange server on push events.
	POST ==> doPost(...)
			--> traceRequestFlags(request)
			
				<Trace Tag=ExchangePushListenerRequestHttpHeaders ...
			
			--> traceContent(...);
				
				<Trace Tag=ExchangePushListenerRequest ...
				OR
				<Trace Tag=ExchangePushListenerResponse ...
				

!!! IMPORTANT !!! 
ews_trace logger is in INFO level by default.
Set it with this JSP:

	APAS:8080/andphone/jsp/dev/setLogLevel.jsp


			
**************************************************************************************
**************************************************************************************
**************************************************************************************
Classes:

	com.andtek.andphone.presence.msews.ExchangeCachedCalendarServer
	DynamicPresenceSubscriptionManager
	
	
Import:
	com.andtek.andphone.presence.msews.**
	import microsoft.exchange.webservices.**