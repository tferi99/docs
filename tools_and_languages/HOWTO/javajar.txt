=====================
Calling java from JAR
=====================

1. Deploy your classes as JAR:

	jar cf jar-file input-file(s)

2. Add entry point to manifest file (META-INF/MANIFEST.MF):

	Main-Class: ...
	
3. Add class path entries to manifest file:

	Class-Path: ant-1.5.1.jar commons-beanutils-1.5.jar

Class path separator:		space
Line-continue character:	space

So if you have a long class path, you have to break lines (e.g. one space at the end of the current and one space at the beginnig of the next line).

IMPORTANT NOTES:
- Always start a manifest with the Manifest-Version attribute. 
- Limit lines to 72 characters; if longer lines are needed, use line continuations. 
- Make sure the last line has a carriage return at the end; otherwise the line will be ignored. 
- If a Class-Path entry crosses directories, use "/" as the directory separator, regardless of the platform. 
- Separate main attributes from entity attribute sections by a blank line. 
- Use slashes, not dots, to delimit package and class entities. 
- Class entities should end with .class and package entities should end with a slash ("/").


Example manifest file:

Manifest-Version: 1.0
Main-Class: reports.Jasper_Report
Class-Path: ant-1.5.1.jar
 antlr-2.7.5.jar 
 commons-beanutils-1.5.jar 
 commons-collections-2.1.jar 
 commons-digester-1.7.jar 
 commons-javaflow-20060411.jar 
 commons-logging-1.0.2.jar 
 commons-logging-api-1.0.2.jar 
 groovy-all-1.0-beta-10.jar 
 hibernate3.jar 
 hsqldb-1.7.1.jar 
 itext-1.3.1.jar 
 jakarta-bcel-20050813.jar 
 jasperreport.jar 
 jasperreports-1.2.5.jar 
 jcommon-1.0.0.jar 
 jdt-compiler-3.1.1.jar 
 jfreechart-1.0.0.jar 
 jpa.jar 
 jxl-2.6.jar 
 mondrian-2.0.1.jar 
 png-encoder-1.5.jar 
 poi-2.0-final-20040126.jar 
 servlet.jar 
 xalan.jar 
 xercesImpl.jar 
 xml-apis.jar
