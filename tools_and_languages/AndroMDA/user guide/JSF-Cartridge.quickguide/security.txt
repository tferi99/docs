Security in application generated by AndroMDA-JSF 
=================================================

1. Modeling
-----------
Add actors to usecase diagram and draw association between usecase and roles.
UseCases without association won't be authorized so can be called by anybody.

2. Generating code
------------------
Security constraints generated for protected usecases into web.xml:

   <security-constraint>
        <web-resource-collection>
            <web-resource-name>Protect resources</web-resource-name>
            <description>
                This collection secures all views and resources
                as well as the actions called in the "Protect" use-case
            </description>
            <url-pattern>/org/tferi/jsftest/usecases/security/protect/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>ADMIN</role-name>
        </auth-constraint>
        <user-data-constraint>
            <transport-guarantee>NONE</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

Filter generated to create role status variables as request attributes:

Fragment from UserRoleFilter.java:

   public void doFilter(
        ServletRequest request,
        ServletResponse response,
        FilterChain chain)
        throws IOException, ServletException
    {
        final HttpServletRequest httpRequest = (HttpServletRequest)request;
        final boolean userIsAdmin = httpRequest.isUserInRole("ADMIN")
        ;
        httpRequest.setAttribute("userIsAdmin",  Boolean.valueOf(userIsAdmin));  
        final boolean userIsFelhasznalo = httpRequest.isUserInRole("FELHASZNALO")
            || httpRequest.isUserInRole("RENDSZERGAZDA")
        ;
        httpRequest.setAttribute("userIsFelhasznalo",  Boolean.valueOf(userIsFelhasznalo));  
        final boolean userIsRendszergazda = httpRequest.isUserInRole("RENDSZERGAZDA")
        ;
        httpRequest.setAttribute("userIsRendszergazda",  Boolean.valueOf(userIsRendszergazda));  
        chain.doFilter(
            request,
            response);
    }

	- Actor generalization is supported (FELHASZNALO <--- RENDSZERGAZDA)
	- If an actor has no association to any usecase it will be ignored by generation filter.
	
	
3. Configuration
----------------
To enable generating security source uncomment 

	<property name="securityRealm">${application.id}</property> 
	
in jsf namespace of andromda.xml.