=======
Git FAQ
=======

Config
------
- Where is git configuration?
- Where is the local Git repository located?
- How to create a local repository?
- Most important configuration options

Conflicts
---------
- What are BACKUP, BASE, LOCAL, and REMOTE files that are generated?


Commands
--------
- How to add remote origin?
- How to commit changes automatically?


Troubleshooting
---------------
ERROR: HttpRequestException and asking credentials

-----------------------------------------------------------------------------------------------------------------------------------------------------
Where is git configuration?
===========================
- System wide (Tortoise):

	c:/Program Data/Git/config
	
- Global:

	HOME/.gitconfig

- Project specific:

	PROJECT/.git/config
	
	
The more specific config file overrides less specifics. 
You can view inheritance of configuration in  of .

	TORTOISE_GIT_APP/Settings/Git/[Config source]/(Effective)	

- to get/set repository or global options use:

	git config [--local/--global/--system] [name] [value [value_regex]]
	
  e.g:	
  
	git config --global user.email "toth_ferenc@hotmail.com"
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------
Where is the local Git repository located?
==========================================
- The Working Directory is wherever your files are on your local machine. 
- The Local Repository is the .git/ subdirectory inside the Working Directory. 
- The Index is a conceptual place that also physically resides in the .git/ subdirectory.

 Working directory
       |
       |--- .git (local repository)
          |
          |- index files in sub-directories
		
		
-----------------------------------------------------------------------------------------------------------------------------------------------------
How to create a local repository?
=================================
1. You can take a local directory that is currently not under version control, and turn it into a Git repository.

	echo "# Sample project" >> README.md
	git init
	git add README.md
	git commit -m "first commit"
	git remote add origin https://github.com/tferi99/proba.git
	git push -u origin master		



2. You can clone an existing Git repository from elsewhere.

	git remote add origin https://github.com/tferi99/proba.git
	git push -u origin master	


	
-----------------------------------------------------------------------------------------------------------------------------------------------------
Most important configuration options
====================================
remote.origin.url	: remote origin (in file: [remote "origin"] / url)


-----------------------------------------------------------------------------------------------------------------------------------------------------
How to add remote origin?
=========================
In project directory:

	git remote add origin [url]
	
e.g:

	git remote add origin https://github.com/user/repo.git
		
to verify remote origin:

	git remote -v
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------
How to commit changes automatically?
====================================
git commit -am "message"

-a --all	: Tell the command to automatically stage files that have been modified and deleted, 
				but new files you have not told Git about are not affected.
				
				
-----------------------------------------------------------------------------------------------------------------------------------------------------
ERROR: HttpRequestException and asking credentials
==================================================
I had an issue with GitHub when trying to push or pull. It was asking me to log in every time, but still failing with an error.

Command Line
	fatal: HttpRequestException encountered.
	   An error occurred while sending the request.
	Username for 'https://github.com':

TortoiseGit
	fatal: HttpRequestException encountered.
	An error occurred while sending the request.
	remote: Invalid username or password.
	fatal: Authentication failed for 'https://github.com/username/reponame.git/'

CAUSE:
It is my understanding that GitHub has switched to using TLS 1.2, which is causing this error when your program is 
still trying to connect to GitHub using TLS 1.0.
	
FIX:
- First you need to download and install the latest version of the Git Windows Credential Manager:

		https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/latest

- Restart your machine.

- Enter a git command in the command line and you will be prompted to login again.

- If you still get the same fatal error, you will need to update Git by downloading the latest version from here: 

	https://git-scm.com/downloads

- Enter a git command in the command line and you will be prompted to login again. 
	The problem should be solved now and you should be able to carry on working as normally.
	
	
	
-----------------------------------------------------------------------------------------------------------------------------------------------------
What are BACKUP, BASE, LOCAL, and REMOTE files that are generated?
==================================================================
- foo.LOCAL: the "ours" side of the conflict - ie, your branch (HEAD) that will contain the results of the merge
- foo.REMOTE: the "theirs" side of the conflict - the branch you are merging into HEAD
- foo.BASE: the common ancestor. useful for feeding into a three-way merge tool
- foo.BACKUP: the contents of file before invoking the merge tool, will be kept on the filesystem if mergetool.keepBackup = true.


