=============================
cinnapple-node-binance-trader
=============================

- Description
- Call flow


--------------------------------------------------------------------------------------------------------------------------
Call flow
=========

An efficient cryptocurrency trading bot command line framework for Binance using Node.js

Source:		https://github.com/cinnapple/node-binance-trader


Features:
- only Binance
- one pair one position
- manual creation of position
- buying method: 
	- market price
	- bid price
	- fixed buy price
- selling method: 
	- trailing stop loss
	- maximum loss n profit percentages
- stop the trade and sell everything at the current market price if the user pressed q or Ctrl+C

--------------------------------------------------------------------------------------------------------------------------
Call flow
=========
- Only a single index.js


--> run()
	[0] --> ask_pair_budget()
		--> inquirer buy_info_request																		// asking base and ... currencies			
			- What base currency would you use for the trade? (USDT, BTC, BNB or ETH) => base_currency
			- What is your budget for this trade? (in base currency)(total value. > 15 USD.) => budget
			- What currency would you like to buy? => currency_to_buy
			- pair = currency_to_buy + answers.base_currency
			--> result = client.exchangeInfo()
			- IF found pair
				- calculate tickSize from : indexOf(1) - 1									// tickSize
					0.00001 ==> 5
				- getting  stepSize															// stepSize
			- ELSE
				--> ask_pair_budget()
			
			--> ask_buy_sell_options()
				--> inquirer buy_sell_options												==> selling_method, buying_method
					- OPTIONS:
						- Buy at Market Price
						- Set a Buy Order just above Bid Price
						- Set a Buy Order at a Fixed Buy Price
						==> buy_option
					- OPTIONS:
						- Set a Trailing Stop Loss
						- Set Stop Loss and Profit Percentages
						==> sell_option					
					- IF buy == Market
						- IF sell trailing
							--> [1]
						- ELSE
							--> [2]
					- IF buy == Bid
						- IF sell trailing
							--> [1]
						- ELSE
							--> [2]
					- IF buy == Fix
						--> ask_fixed_buy_price()


[1] --> ask_trailing_percent()																==> trailing_pourcent
	--> inquirer trailing_loss_input 
		=> trailing_pourcent
		=> confirm
		- IF confirm
			--> [4]
		- ELSE
			--> [0]

[2] --> ask_loss_profit_percents()															==> profit_pourcent, loss_pourcent
	--> inquirer loss_profit_inputs 
		=> loss_pourcent
		=> profit_pourcent
		=> confirm
		- IF confirm
			--> [4]
		- ELSE
			--> [0]

[3] --> ask_fixed_buy_price()																==> fixed_buy_price
	--> inquirer fixed_buy_price_input => fixed_buy_price
		- IF sell trailing
			--> [1]
		- ELSE
			--> [2]
		
[4] --> start_trading()
	- IF buy == Fix
		buy_amount = budget / fixed_buy_price
		buy_price = fixed_buy_price
		--> client.order(...)																==> order_id
			--> [5]
		- ERR:
			--> [0]
			
	- IF buy == Bid
		buy_amount = budget / bid_price * 1.0002
		buy_price = bid_price * 1.0002
		--> client.order(...)																==> order_id
			--> [5]
		- ERR:
			--> [0]
			
	- IF buy == Market
		buy_amount = budget / bid_price * 1.0002
		buy_price = ask_price
		--> client.order(...)																==> order_id
			--> [5]
		- ERR:
			--> [0]
	
			
[5] --> auto_trade()


STEPS:
		0:	initial
		1:	
		5:
		99: